{"version":3,"sources":["webpack:///zatacka.min.js","webpack:///webpack/bootstrap 5ad4a4b372802bdcb188","webpack:///./js/lib/utilities.js","webpack:///./js/lib/preferences/Preference.js","webpack:///./js/locales/Zatacka.en_US.js","webpack:///./js/strings.js","webpack:///./js/lib/preferences/PreferencesUtilities.js","webpack:///./js/Player.js","webpack:///./js/lib/ConfirmationDialog.js","webpack:///./js/lib/preferences/BooleanPreference.js","webpack:///./js/lib/preferences/MultichoicePreference.js","webpack:///./js/lib/Dialog.js","webpack:///./js/lib/Message.js","webpack:///./js/lib/preferences/RangePreference.js","webpack:///./js/GUIController.js","webpack:///./js/Game.js","webpack:///./js/Renderer.js","webpack:///./js/lib/InfoMessage.js","webpack:///./js/lib/WarningMessage.js","webpack:///./js/lib/preferences/PreferenceManager.js","webpack:///./js/Main.js","webpack:///./js/Round.js","webpack:///./js/lib/Queue.js","webpack:///./js/lib/mainloop.min.js","webpack:///./js/lib/preferences/IntegerRangePreference.js","webpack:///./js/lib/preferences/PreferenceWithValue.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","isObject","obj","typeOf","isNumber","isPositiveNumber","isInt","isPositiveInt","isString","isNonEmptyString","length","arePositiveNumbers","numbers","every","round","number","decimals","Math","pow","sameAbs","a","b","abs","randomFloat","min","max","random","normalizeAngle","pi","PI","angle","radToDeg","radians","distanceToDuration","distance","velocity","log","str","console","CONSOLE_PREFIX","logWarning","warn","logError","error","byID","id","document","getElementById","isHTMLElement","elem","HTMLElement","flush","node","TypeError","textContent","forfor","y_start","y_end","x_start","x_end","func","arg","y","x","this","anyKeyBeingPressed","keyCodes","Array","isArray","some","Keyboard","isDown","anyMouseButtonBeingPressed","mouseButtons","map","MOUSE","unpack","Mouse","anyInputBeingPressed","keysOrMouseButtons","isMouseButton","button","keys","buttonName","isKeyList","isFKey","key","F_KEYS","includes","global","toString","match","toLowerCase","undefined","KEY","freeze","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","PAUSE","CAPS_LOCK","ESCAPE","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","INSERT","DELETE","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","LEFT_META","RIGHT_META","SELECT","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","MULTIPLY","ADD","SUBTRACT","DECIMAL","DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_LOCK","SCROLL_LOCK","SEMICOLON","EQUALS","COMMA","DASH","PERIOD","FORWARD_SLASH","GRAVE_ACCENT","OPEN_BRACKET","BACK_SLASH","CLOSE_BRACKET","SINGLE_QUOTE","offseted","pack","standard","LEFT","offset","RIGHT","MIDDLE","MOUSE4","MOUSE5","MOUSE_BUTTONS","pressed","keyCode","onKeydown","event","onKeyup","reset","mouseButtonNumber","onMousedown","onMouseup","PLATFORM","strings","os_id_windows","os_id_mac","os_id_linux","os_id_unix","os_name_windows","os_name_mac","os_name_linux","os_name_unix","os_name_unknown","getOS","ua","window","navigator","userAgent","appVersion","indexOf","getFullscreenShortcut","_classCallCheck","instance","Constructor","Preference","_createClass","defineProperties","target","props","descriptor","writable","protoProps","staticProps","_PreferencesUtilities","data","default","label","description","stringifiedValue","hint_unload","hint_start","hint_popup","hint_pick","hint_proceed","hint_next","hint_quit","hint_alt","hint_ctrl","hint_mouse","hint_preferences_access_denied","hint_preferences_localstorage_failed","keyboard_fullscreen_mac","keyboard_fullscreen_standard","getFullscreenHint","shortcut","label_button_alert_ok","label_button_confirm_yes","label_button_confirm_no","label_text_confirm_quit","label_text_confirm_reload","pref_label_cursor","pref_label_description_cursor","pref_label_cursor_always_visible","pref_label_cursor_hidden_when_mouse_used_by_player","pref_label_cursor_always_hidden","pref_label_edge_fix","pref_label_description_edge_fix","pref_label_edge_fix_full","pref_label_edge_fix_minimal","pref_label_edge_fix_off","pref_label_hints","pref_label_description_hints","pref_label_hints_all","pref_label_hints_warnings_only","pref_label_hints_none","pref_label_prevent_spawnkill","pref_label_description_prevent_spawnkill","pref_label_confirm_quit","pref_label_description_confirm_quit","pref_label_confirm_reload","pref_label_description_confirm_reload","pref_label_allow_blurry_scaling","pref_label_description_allow_blurry_scaling","game_url","error_name_security","class_hidden","class_active","class_dialog","class_dialog_alert","class_dialog_confirmation","class_description","class_half_width","class_right_hand_side","class_blurry","class_nocursor","class_tempcursor","class_hints_warnings_only","class_hints_none","html_name_preference_prefix","cursor_hidden","cursor_visible","id_start_hint","id_fullscreen_hint","id_popup_hint","id_button_show_settings","id_button_hide_settings","pref_number_type_integer","pref_number_type_float","pref_key_cursor","pref_value_cursor_always_visible","pref_value_cursor_hidden_when_mouse_used_by_player","pref_value_cursor_always_hidden","pref_key_edge_fix","pref_value_edge_fix_full","pref_value_edge_fix_minimal","pref_value_edge_fix_off","pref_key_hints","pref_value_hints_all","pref_value_hints_warnings_only","pref_value_hints_none","pref_key_confirm_quit","pref_key_confirm_reload","pref_key_prevent_spawnkill","pref_key_allow_blurry_scaling","string","Player","_utilities","_Queue","arguments","color","L_keys","R_keys","holeConfig","alive","holy","direction","maxSpeed","lastPosition","queuedDraws","Queue","holeTimer","constructor","isHoleConfig","left","top","_this","hasMouseButton","minPaddedHoleSize","maxPaddedHoleSize","minPaddedHoleInterval","maxPaddedHoleInterval","randomPaddedHoleInterval","speed","setTimeout","startCreatingHoles","bind","firstHoleDelay","clearTimeout","cause","paddedHoleSize","randomPaddedHoleSize","paddedHoleDuration","endHole","paddedHoleInterval","paddedHoleIntervalDuration","beginHole","enqueue","player","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","ConfirmationDialog","_Dialog2","_Dialog","question","callback","Function","getPrototypeOf","Dialog","BooleanPreference","_get","receiver","desc","getOwnPropertyDescriptor","parent","_Preference2","_Preference","MultichoicePreference","values","labels","isValidValue","text","Message","styleClass","class","createElement","classList","add","RangePreference","parseFloat","_interopRequireDefault","GUIController","cfg","hideLobby","lobby","_strings2","showLobby","remove","showDialogsOverlay","dialogsOverlay","hideDialogsOverlay","isLobbyEntry","element","children","isButton","BUTTON_NODE_CLASS","showDialogRightAway","dialog","dialogBox","dialogHTMLElement","currentDialogWithBox","DialogWithBox","setTemporaryCursorVisibility","appendChild","querySelector","focus","currentDialogClosed","box","anyQueuedDialogs","queuedDialogs","shift","escapeShouldCloseCurrentDialog","_ConfirmationDialog","dialogHTMLElementBoilerplate","alertDialogHTMLElement","alertDialogEventHandler","alertDialogBox","buttonOK","LABEL_ALERT_OK","addEventListener","confirmationDialogHTMLElement","confirmationDialog","confirmationDialogEventHandler","response","confirmationDialogBox","buttonYes","LABEL_CONFIRM_YES","buttonNo","LABEL_CONFIRM_NO","resetScoreboardEntry","entry","resetScoreboard","from","scoreboard","forEach","resetResults","results","setCursorBehavior","behavior","body","tempCursorActive","settingsEntryShouldBeHalfWidth","preference","reduce","acc","current","MULTICHOICE_LABEL_MAX_LENGTH_FOR_HALFWIDTH_FIELDSET","settingsEntryHTMLElement","preferenceValue","div","setAttribute","input","type","dataset","checked","fieldset","legend","index","radioButton","radioButtonLabel","isIntegerRange","numberType","FLOAT_RANGE_PREFERENCE_STEP","keyPressed","isShowingDialog","currentlyFocusedButton","BUTTON_TAG_NAME","shiftIsDown","previousButton","nextButton","previousSibling","nextSibling","click","preventDefault","mouseClicked","showDialog","push","setEdgePadding","padding","style","width","ORIGINAL_LEFT_WIDTH","setBlurryScaling","allowed","playerReady","controls","playerUnready","allPlayersUnready","gameStarted","gameQuit","hideKonecHry","clearMessages","konecHry","showKonecHry","KONEC_HRY","showMessage","message","currentMessages","updateMessages","showSettings","showingSettings","settings","hideSettings","isShowingSettings","updateSettingsForm","preferencesWithData","settingsForm","settingsEntries","preferenceWithData","consecutiveHalfWidthDivs","currentEntry","contains","settingsEntry","parseSettingsForm","newSettings","inputs","querySelectorAll","parseInt","selects","select","options","selectedIndex","hideMessage","filter","msg","messages","messagesContainer","insertBefore","toHTMLElement","setMessageMode","mode","updateBoard","board","newScore","digitClassFactory","digit","createDigit","newScoreDigitClasses","split","digitClass","digitElement","updateScoreOfPlayer","offsetWidth","HTMLButtonElement","_ZatackaEn_US2","_BooleanPreference","_RangePreference","_IntegerRangePreference","_MultichoicePreference","_ZatackaEn_US","_strings","Game","_mainloopMin","_mainloopMin2","_Player","_Round","config","renderer","guiController","PRACTICE","COMPETITIVE","DEFAULT_MODE","DEFAULT_TARGET_SCORE","MAX_TARGET_SCORE","MAX_PLAYERS","MAX_QUOTA_THAT_SPAWN_CIRCLES_MAY_FILL","DESIRED_MINIMUM_SPAWN_DISTANCE_TURNING_RADIUS_FACTOR","isRenderer","isGUIController","canvas","height","pixels","players","rounds","preventSpawnkill","totalNumberOfTicks","targetScore","initMainLoop","started","ended","proceedHintTimer","quitHintTimer","coordinate","thickness","floor","tickrate","turningRadius","x_min","spawnMargin","y_min","x_max","y_max","edge","dir","t","dir_parallel","dir_perpendicular","hitboxPixels","getLastPosition","dir_horizontal","dir_vertical","frontPixel_left","computeFrontCornerPixel","frontPixel_top","pixelAddress","computeFrontEdgePixel","turningRadiusPart","spawnAreaCoordinates","computeSpawnArea","availableSpawnArea","maximumSafeDistance","sqrt","getNumberOfPlayers","desiredMinimumSpawnDistance","pos","playerPos","pos1","pos2","safeMinimumSpawnDistance","safePos","randomSpawnPosition","isSafeSpawnPosition","spawnArea","minSpawnAngle","maxSpawnAngle","addr","find","hasID","isAlive","getLivePlayers","accumulateScore","sum","getSuccessOfPlayer","getMode","score","ts","mts","setSize","getCurrentRound","getResults","isCompetitive","getNumberOfLivePlayers","isLive","hasReachedTargetScore","getScoreOfPlayer","getID","getTargetScore","computeHitbox","isOccupiedPixelAddress","isPlayer","getPlayerByID","maxPlayers","RangeError","hasPlayer","setMaxSpeed","GUI_playerReady","playerToRemove","GUI_playerUnready","_this2","setTargetScore","calculateTargetScore","GUI_updateScoreOfPlayer","GUI_gameStarted","start","Uint8Array","beginNewRound","GUI_konecHry","showQuitHint","hintDelay","fill","Render_clearField","GUI_showMessage","next","GUI_hideMessage","quit","Round","resetPlayers","clearField","sortPlayers","spawnAndStartPlayers","stopPlayers","showProceedHint","sort","stop","startPlayer","stopPlayer","resetPlayer","right","bottom","occupyPixel","Render_drawSquare","getColor","_this3","stopFlickering","clearInterval","flickerTicker","edgeOfSquare","isVisible","setInterval","Render_clearSquare","flickerFrequency","flickerDuration","position","beAt","occupy","flicker","spawnPlayer","spawnPosition","safeSpawnPosition","spawn","randomSpawnAngle","startPlayers","isEmpty","currentDraw","dequeue","justWasAt","isOnField","isCrashing","death","isHoly","Render_drawHead","_this4","updateScore","die","updateGUIScoreboard","isRoundOver","winner","winRound","endRound","hideProceedHint","hideQuitHint","isGameOver","isPostRound","isEnded","drawSquare","drawSquare_overlay","clearSquare","clearRectangle_overlay","clearRectangle","delta","angleChange","computeAngleChange","getDirection","isPressingLeft","isPressingRight","setDirection","theta","getVelocity","cos","sin","_this5","updatePlayer","maxTicksBetweenDraws","enqueueDraw","unshift","pop","Render_clearHeads","drawPlayer","drawHead","framerate","panic","discardedTime","resetFrameDelta","MainLoop","setUpdate","update","setDraw","draw","setEnd","end","setSimulationTimestep","setMaxAllowedFPS","maxFramerate","numberOfPlayers","Renderer","mainCanvas","overlayCanvas","_drawRectangle","context","fillStyle","fillRect","_clearRectangle","clearRect","_setSize","size","context_main","context_overlay","clearSquare_overlay","getContext","InfoMessage","_Message2","_Message","WarningMessage","PreferenceManager","preferencesData","parsePreference","pref","preferenceExists","getPreference","PREFERENCES","getCachedPreference","CACHED_PREFERENCES_WITH_VALUES","preferenceWithValue","getAllPreferencesWithValues_saved","_PreferenceWithValue","PreferenceWithValue","getSaved","getAllPreferencesWithValues_cached","getCached","getAllPreferencesWithDefaultValues","getDefaultValue","getKey","isValidPreferenceValue","setToDefaultValue","set","Error","LS_prefix","LOCALSTORAGE_PREFIX","localStorage","setItem","stringify","e","invalidValue","savedValue","getItem","parse","setAllToDefault","defaultValue","_Game","_Renderer","_GUIController","_PreferenceManager","_InfoMessage","_WarningMessage","isProceedKey","proceed","isQuitKey","shouldPreventDefault","ALLOWED_KEYS","game","isStarted","newCanvasWidth","ORIGINAL_WIDTH","newCanvasHeight","ORIGINAL_HEIGHT","setEdgeMode","TOTAL_BORDER_THICKNESS","getHoleConfig","minHoleSize","maxHoleSize","minHoleInterval","maxHoleInterval","getPaddedHoleConfig","paddedHoleConfig","defaultPlayerData","defaultPlayers","defaultPlayer","playerData","keyL","keyR","applyCursorBehavior","mouseIsBeingUsed","getPlayers","preferenceManager","proceedKeyPressedInLobby","numberOfReadyPlayers","setMode","usesAnyMouseButton","checkForDangerousInput","hasKey","ctrl","alt","mouse","addPlayer","hintPickTimer","pick","hintProceedTimer","removePlayer","defaultPlayerHasLeftKey","pressedKey","defaultPlayerHasRightKey","addOrRemovePlayer","eventConsumer","stopPropagation","keyPressedInLobby","mouseClickedInLobby","keyHandler","gameKeyHandler","settingsKeyHandler","lobbyKeyHandler","mouseHandler","gameMouseHandler","settingsMouseHandler","lobbyMouseHandler","unloadHandler","gameUnloadHandler","KEY_RELOAD","reload","location","quitGame","newGame","shouldQuitOnProceedKey","proceedKeyPressed","shouldQuitOnQuitKey","dialogs","confirmation_quit","shouldShowReloadConfirmationOnReloadKey","confirmation_reload","returnValue","handleSettingsAccessError","newSetting","applySettings","setPreventSpawnkill","preferences_access_denied","preferences_localstorage_failed","blurHandler","addShowSettingsButtonEventListener","showSettingsButton","addHideSettingsButtonEventListener","hideSettingsButton","canvas_main","canvas_overlay","KEY_FULLSCREEN","KEY_DEVTOOLS","getConfig","getGame","playerOrID","getLength","hasItem","slice","peek","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","Symbol","iterator","j","u","q","g","f","h","r","k","requestAnimationFrame","Date","now","cancelAnimationFrame","getSimulationTimestep","getFPS","getMaxAllowedFPS","setBegin","isRunning","IntegerRangePreference","_RangePreference2"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAK,EAAA,SAAAK,GAA2C,MAAAA,IAG3CV,EAAAW,EAAA,SAAAR,EAAAS,EAAAC,GACAb,EAAAc,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAb,EAAAoB,EAAA,SAAAhB,GACA,GAAAS,GAAAT,KAAAiB,WACA,WAA2B,MAAAjB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAW,EAAAE,EAAA,IAAAA,GACAA,GAIAb,EAAAc,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAlB,KAAAe,EAAAC,IAGtDvB,EAAA0B,EAAA,GAGA1B,IAAA2B,EAAA,MDMM,SAAUvB,EAAQD,EAASH,GAEjC,YEtCO,SAAS4B,GAASC,GACrB,MAAuB,WAAhBC,EAAOD,GAGX,QAASE,GAASX,GACrB,MAAqB,WAAdU,EAAOV,GAGX,QAASY,GAAiBZ,GAC7B,MAAOW,GAASX,IAAMA,EAAI,EAGvB,QAASa,GAAMb,GAClB,MAAOW,GAASX,IAAMA,EAAI,GAAM,EAG7B,QAASc,GAAcd,GAC1B,MAAOa,GAAMb,IAAMA,EAAI,EAGpB,QAASe,GAASR,GACrB,MAAqB,WAAdG,EAAOH,GAGX,QAASS,GAAiBT,GAC7B,MAAOQ,GAASR,IAAMA,EAAEU,OAAS,EAG9B,QAASC,GAAmBC,GAC/B,MAAOA,GAAQC,MAAMR,GAGlB,QAASS,GAAMC,EAAQC,GAC1B,MAAOC,MAAKH,MAAMC,EAAUE,KAAKC,IAAI,GAAIF,IAAeC,KAAKC,IAAI,GAAIF,GAGlE,QAASG,GAAQC,EAAGC,GACvB,MAAOJ,MAAKK,IAAIF,KAAOH,KAAKK,IAAID,GAW7B,QAASE,GAAYC,EAAKC,GAC7B,MAAOR,MAAKS,UAAYD,EAAMD,GAAOA,EAGlC,QAASG,GAAeP,GAC3B,GAAMQ,GAAKX,KAAKY,GACZC,EAAQV,GAAK,EAAEQ,EAKnB,OAJAE,IAASA,EAAQ,EAAEF,IAAO,EAAEA,GACxBE,EAAQF,IACRE,GAAgB,EAAEF,GAEfE,EAGJ,QAASC,GAASC,GACrB,MAAQ,KAAIf,KAAKY,GAAMG,EAGpB,QAASC,GAAmBC,EAAUC,GACzC,MAAQD,GAAWC,EAAY,IAG5B,QAASC,GAAIC,GAChBC,QAAQF,IAAIG,EAAiBF,GAG1B,QAASG,GAAWH,GACvBC,QAAQG,KAAKF,EAAiBF,GAG3B,QAASK,GAASL,GACrBC,QAAQK,MAAMJ,EAAiBF,GAG5B,QAASO,GAAKC,GACjB,MAAOC,UAASC,eAAeF,GAG5B,QAASG,GAAcC,GAC1B,MAAOA,aAAgBC,aAGpB,QAASC,GAAMC,GAClB,IAAIJ,EAAcI,GAGd,KAAM,IAAIC,WAAaD,EAAjB,sBAFNA,GAAKE,YAAc,GAMpB,QAASC,GAAOC,EAASC,EAAOC,EAASC,EAAOC,EAAMC,GACzD,IAAK,GAAIC,GAAIN,EAASM,EAAIL,EAAOK,IAC7B,IAAK,GAAIC,GAAIL,EAASK,EAAIJ,EAAOI,IAC7BH,EAAKhF,KAAKoF,KAAMD,EAAGD,EAAGD,GAqC3B,QAASI,GAAmBC,GAC/B,MAAOC,OAAMC,QAAQF,IAAaA,EAASG,KAAKC,EAASC,OAAQD,GAG9D,QAASE,GAA2BC,GACvC,MAAON,OAAMC,QAAQK,IAAiBA,EAAaC,IAAIC,EAAMC,QAAQP,KAAKQ,EAAMN,OAAQM,GAGrF,QAASC,GAAqBC,GACjC,MAAOd,GAAmBc,IAAuBP,EAA2BO,GAGzE,QAASC,GAAcC,GAC1B,MAAO1E,GAAc0E,IAAW7F,OAAO8F,KAAKP,GAAON,KAAK,SAACc,GAAD,MAAgBR,GAAM7E,eAAeqF,KAG1F,QAASC,GAAUF,GACtB,MAAOf,OAAMC,QAAQc,IACdA,EAAKxE,OAAS,GACdwE,EAAKrE,MAAMN,GAGf,QAAS8E,GAAOC,GACnB,MAAOC,GAAOC,SAASF,GFxH3BlG,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,IAEXP,EE5CgByB,WF6ChBzB,EEzCgB4B,WF0ChB5B,EEtCgB6B,mBFuChB7B,EEnCgB8B,QFoChB9B,EEhCgB+B,gBFiChB/B,EE7BgBgC,WF8BhBhC,EE1BgBiC,mBF2BhBjC,EEvBgBmC,qBFwBhBnC,EEpBgBsC,QFqBhBtC,EEjBgB2C,UFkBhB3C,EENgB+C,cFOhB/C,EEHgBmD,iBFIhBnD,EEMgBuD,WFLhBvD,EESgByD,qBFRhBzD,EEYgB4D,MFXhB5D,EEegBgE,aFdhBhE,EEkBgBkE,WFjBhBlE,EEqBgBoE,OFpBhBpE,EEwBgBwE,gBFvBhBxE,EE2BgB2E,QF1BhB3E,EEkCgB+E,SFjChB/E,EEyEgByF,qBFxEhBzF,EE4EgBgG,6BF3EhBhG,EE+EgBsG,uBF9EhBtG,EEkFgBwG,gBFjFhBxG,EEqFgB4G,YFpFhB5G,EE0FgB6G,QAlMhB,IAAMlF,GAAU,SAACsF,GACb,MAAO,UAASvF,GACZ,MAAIA,KAAQuF,EACD,YAECC,SAAS9G,KAAKsB,GAAKyF,MAAM,kBAAkB,GAAGC,gBALnDC,QASTtD,EAAiB,aAEVuD,QAAM1G,OAAO2G,QAASC,UAAW,EAAGC,IAAK,EAAGC,MAAO,GAAIC,MAAO,GAAIC,KAAM,GAAIC,IAAK,GAAIC,MAAO,GAAIC,UAAW,GAAIC,OAAQ,GAAIC,MAAO,GAAIC,QAAS,GAAIC,UAAW,GAAIC,IAAK,GAAIC,KAAM,GAAIC,WAAY,GAAIC,SAAU,GAAIC,YAAa,GAAIC,WAAY,GAAIC,OAAQ,GAAIC,OAAQ,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,UAAW,GAAIC,WAAY,GAAIC,OAAQ,GAAIC,SAAU,GAAIC,SAAU,GAAIC,SAAU,GAAIC,SAAU,GAAIC,SAAU,IAAKC,SAAU,IAAKC,SAAU,IAAKC,SAAU,IAAKC,SAAU,IAAKC,SAAU,IAAKC,SAAU,IAAKC,IAAK,IAAKC,SAAU,IAAKC,QAAS,IAAKC,OAAQ,IAAKC,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,IAAK,IAAKC,IAAK,IAAKC,IAAK,IAAKC,SAAU,IAAKC,YAAa,IAAKC,UAAW,IAAKC,OAAQ,IAAKC,MAAO,IAAKC,KAAM,IAAKC,OAAQ,IAAKC,cAAe,IAAKC,aAAc,IAAKC,aAAc,IAAKC,WAAY,IAAKC,cAAe,IAAKC,aAAc,MAE1lCvH,UAAQvF,OAAO2G,OAAQ,WAEhC,MAAO3G,QAAO2G,QACVnB,OAAQ,SAACuH,GAAD,MAAcA,GAFX,KAGXC,KAAQ,SAACC,GAAD,MAAcA,GAHX,KAIXC,KAAQC,IACRC,MAAQD,KACRE,OAAQF,KACRG,OAAQH,KACRI,OAAQJ,WAIHhH,WAASnG,OAAO2G,QACzBD,EAAI4E,GAAI5E,EAAI6E,GAAI7E,EAAI8E,GAAI9E,EAAI+E,GAAI/E,EAAIgF,GAAIhF,EAAIiF,GAAIjF,EAAIkF,GAAIlF,EAAImF,GAAInF,EAAIoF,GAAIpF,EAAIqF,IAAKrF,EAAIsF,IAAKtF,EAAIuF,MAiHrF/G,GA9GAsI,gBAAgBxN,OAAO2G,QAChCpB,EAAM2H,KAAM3H,EAAM6H,MAAO7H,EAAM8H,OAAQ9H,EAAM+H,OAAQ/H,EAAMgI,SA6GlDrI,YACTuI,WACAtI,OAAQ,SAASuI,GACb,QAAS9I,KAAK6I,QAAQC,IAE1BC,UAAW,SAASC,GAChBhJ,KAAK6I,QAAQG,EAAMF,UAAW,GAElCG,QAAS,SAASD,SACPhJ,MAAK6I,QAAQG,EAAMF,UAE9BI,MAAO,WACHlJ,KAAK6I,cAIAhI,WACTgI,WACAtI,OAAQ,SAAS4I,GACb,MAAOnJ,MAAK6I,QAAQM,IAExBC,YAAa,SAASJ,GAClBhJ,KAAK6I,QAAQG,EAAM/H,SAAU,GAEjCoI,UAAW,SAASL,SACThJ,MAAK6I,QAAQG,EAAM/H,SAE9BiI,MAAO,WACHlJ,KAAK6I,aA8BAS,aAAY,WACrB,GAAMC,IACFC,cAAe,MACfC,UAAW,MACXC,YAAa,QACbC,WAAY,MAEZC,gBAAiB,UACjBC,YAAa,MACbC,cAAe,QACfC,aAAc,OACdC,gBAAiB,UAGrB,QACIC,MAAO,WACH,GAAMC,GAAKC,OAAOC,UAAUC,WAAaF,OAAOC,UAAUE,UAC1D,IAAI7N,EAAiByN,GAAK,CACtB,GAAIA,EAAGK,QAAQhB,EAAQC,gBAAkB,EAAK,MAAOD,GAAQK,eAC7D,IAAIM,EAAGK,QAAQhB,EAAQE,YAAkB,EAAK,MAAOF,GAAQM,WAC7D,IAAIK,EAAGK,QAAQhB,EAAQG,cAAkB,EAAK,MAAOH,GAAQO,aAC7D,IAAII,EAAGK,QAAQhB,EAAQI,aAAkB,EAAK,MAAOJ,GAAQQ,aAEjE,MAAOR,GAAQS,iBAEnBQ,sBAAuB,WACnB,OAAQlB,EAASW,SACb,IAAKV,GAAQM,YACT,MAAO,KAEX,SACI,MAAO,iBFyHrB,SAAUpP,EAAQD,EAASH,GAEjC,YAYA,SAASoQ,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAItL,WAAU,qCAThHjE,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,IAEXP,EAAQoQ,WAAa/I,MAErB,IAAIgJ,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAItQ,GAAI,EAAGA,EAAIsQ,EAAMtO,OAAQhC,IAAK,CAAE,GAAIuQ,GAAaD,EAAMtQ,EAAIuQ,GAAW1P,WAAa0P,EAAW1P,aAAc,EAAO0P,EAAW3P,cAAe,EAAU,SAAW2P,KAAYA,EAAWC,UAAW,GAAM9P,OAAOC,eAAe0P,EAAQE,EAAW3J,IAAK2J,IAAiB,MAAO,UAAUN,EAAaQ,EAAYC,GAAiJ,MAA9HD,IAAYL,EAAiBH,EAAY9O,UAAWsP,GAAiBC,GAAaN,EAAiBH,EAAaS,GAAqBT,MGxWhiBU,EAAAhR,EAAA,EH8WiBG,GG5WJoQ,WH4WyB,WG3WlC,QAAAA,GAAYU,GACR,GADcb,EAAAzK,KAAA4K,KACT,EAAAS,EAAA7O,UAAS8O,EAAKhK,KACf,KAAM,IAAIjC,WAAJ,+BAA6CiM,EAAKhK,IAAlD,iBAAsEgK,EACzE,IAAqBzJ,SAAjByJ,EAAKC,QACZ,KAAM,IAAIlM,WAAJ,eAA6BiM,EAAKhK,IAAlC,+BAEVtB,MAAKsB,IAAMgK,EAAKhK,IAChBtB,KAAKwL,MAAQF,EAAKE,MAClBxL,KAAKuL,QAAUD,EAAKC,QACpBvL,KAAKyL,YAAcH,EAAKG,YH4Y5B,MA3BAZ,GAAaD,IACTtJ,IAAK,eACLvG,MAAO,SGhXEA,GACT,OAAO,EAAAsQ,EAAA7O,UAASzB,MHmXhBuG,IAAK,eACLvG,MAAO,SGjXEA,GACT,KAAM,IAAIsE,WAAatE,EAAjB,yCAA+DiF,KAAKsB,IAApE,SHoXNA,IAAK,kBACLvG,MAAO,WGzWP,MAAOiF,MAAKuL,aH6WZjK,IAAK,YACLvG,MAAO,SGvXMA,GACb,MAAOA,GAAM2G,cH0XbJ,IAAK,QACLvG,MAAO,SGxXE2Q,GACT,MAAOA,OH4XJd,MAKL,SAAUnQ,EAAQD,EAASH,GAEjC,YAGAe,QAAOC,eAAeb,EAAS,cACvBO,OAAO,IAGfP,EAAQ+Q,QItaQ,WAMZ,MAAOnQ,QAAO2G,QACV4J,wDACAC,6CACAC,0OACAC,gGACAC,8CACAC,6DACAC,gDACAC,2FACAC,2FACAC,2EACAC,kMACAC,2GAEAC,8EACAC,6BAA8B,iBAE9BC,kBAAmB,SAACC,GAAD,eAAuBA,EAAvB,yBAEnBC,2BACAC,+BACAC,6BAEAC,yDACAC,6EAEAC,2BACAC,yFACAC,kDACAC,sFACAC,gDAEAC,+BACAC,6JACAC,gCACAC,sCACAC,8BAEAC,yBACAC,qFACAC,2BACAC,+CACAC,6BAEAC,kDACAC,6FAEAC,uCACAC,6FAEAC,2CACAC,+FAEAC,uDACAC,0MJ8aF,SAAU7T,EAAQD,EAASH,GAEjC,YAGAe,QAAOC,eAAeb,EAAS,cAC3BO,OAAO,IAEXP,EAAQ+Q,QKlfOnQ,OAAO2G,QAClBwM,SAAU,eAEVC,oBAAqB,gBAErBC,aAAc,SACdC,aAAc,SACdC,aAAc,SACdC,mBAAoB,QACpBC,0BAA2B,eAC3BC,kBAAmB,cACnBC,iBAAkB,aAClBC,sBAAuB,kBACvBC,aAAc,SACdC,eAAgB,WAChBC,iBAAkB,aAClBC,0BAA2B,sBAC3BC,iBAAkB,aAClBC,4BAA6B,cAE7BC,cAAe,SACfC,eAAgB,UAEhBC,cAAe,aACfC,mBAAoB,kBACpBC,cAAe,aACfC,wBAAyB,uBACzBC,wBAAyB,uBAEzBC,yBAA0B,UAC1BC,uBAAwB,QAExBC,gBAAiB,SACjBC,iCAAkC,iBAClCC,mDAAoD,mCACpDC,gCAAiC,gBAEjCC,kBAAmB,WACnBC,yBAA0B,OAC1BC,4BAA6B,UAC7BC,wBAAyB,MAEzBC,eAAgB,QAChBC,qBAAsB,MACtBC,+BAAgC,WAChCC,sBAAuB,OAEvBC,sBAAuB,eACvBC,wBAAyB,iBACzBC,2BAA4B,oBAC5BC,8BAA+B,0BLuf7B,SAAUtW,EAAQD,EAASH,GAEjC,YMhiBO,SAAS+D,GAAI4S,GAChB1S,QAAQF,IAAIG,EAAiByS,GAG1B,QAASxS,GAAWwS,GACvB1S,QAAQG,KAAKF,EAAiByS,GAG3B,QAAStS,GAASsS,GACrB1S,QAAQK,MAAMJ,EAAiByS,GAG5B,QAAS/U,GAASC,GACrB,MAAuB,WAAhBC,EAAOD,GAGX,QAASE,GAASX,GACrB,MAAqB,WAAdU,EAAOV,GAGX,QAASY,GAAiBZ,GAC7B,MAAOW,GAASX,IAAMA,EAAI,EAGvB,QAASa,GAAMb,GAClB,MAAOW,GAASX,IAAMA,EAAI,GAAM,EAG7B,QAASc,GAAcd,GAC1B,MAAOa,GAAMb,IAAMA,EAAI,EAGpB,QAASe,GAASR,GACrB,MAAqB,WAAdG,EAAOH,GAGX,QAASS,GAAiBT,GAC7B,MAAOQ,GAASR,IAAMA,EAAEU,OAAS,EAG9B,QAASC,GAAmBC,GAC/B,MAAOA,GAAQC,MAAMR,GAGlB,QAASS,GAAMC,EAAQC,GAC1B,MAAOC,MAAKH,MAAMC,EAAUE,KAAKC,IAAI,GAAIF,IAAeC,KAAKC,IAAI,GAAIF,GNsfzE5B,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,IAEXP,EMtiBgB4D,MNuiBhB5D,EMniBgBgE,aNoiBhBhE,EMhiBgBkE,WNiiBhBlE,EM7hBgByB,WN8hBhBzB,EM1hBgB4B,WN2hBhB5B,EMvhBgB6B,mBNwhBhB7B,EMphBgB8B,QNqhBhB9B,EMjhBgB+B,gBNkhBhB/B,EM9gBgBgC,WN+gBhBhC,EM3gBgBiC,mBN4gBhBjC,EMxgBgBmC,qBNygBhBnC,EMrgBgBsC,OAvDhB,IAAMX,GAAU,SAACsF,GACb,MAAO,UAASvF,GACZ,MAAIA,KAAQuF,EACD,YAECC,SAAS9G,KAAKsB,GAAKyF,MAAM,kBAAkB,GAAGC,gBALnDC,QASTtD,EAAiB,kBNinBjB,SAAU9D,EAAQD,EAASH,GAEjC,YAcA,SAASoQ,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAItL,WAAU,qCAXhHjE,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,IAEXP,EAAQyW,OAASpP,MAEjB,IAAIgJ,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAItQ,GAAI,EAAGA,EAAIsQ,EAAMtO,OAAQhC,IAAK,CAAE,GAAIuQ,GAAaD,EAAMtQ,EAAIuQ,GAAW1P,WAAa0P,EAAW1P,aAAc,EAAO0P,EAAW3P,cAAe,EAAU,SAAW2P,KAAYA,EAAWC,UAAW,GAAM9P,OAAOC,eAAe0P,EAAQE,EAAW3J,IAAK2J,IAAiB,MAAO,UAAUN,EAAaQ,EAAYC,GAAiJ,MAA9HD,IAAYL,EAAiBH,EAAY9O,UAAWsP,GAAiBC,GAAaN,EAAiBH,EAAaS,GAAqBT,MOpoBhiBuG,EAAA7W,EAAA,GACA8W,EAAA9W,EAAA,GP2oBaG,GOzoBAyW,OPyoBiB,WOxoB1B,QAAAA,GAAYpS,GAAwE,GAApE5D,GAAoEmW,UAAA1U,OAAA,GAAAmF,SAAAuP,UAAA,GAAAA,UAAA,aAAnDvS,EAAMwS,EAA6CD,UAAA1U,OAAA,GAAAmF,SAAAuP,UAAA,GAAAA,UAAA,GAArC,QAASE,EAA4BF,UAAA,GAApBG,EAAoBH,UAAA,GAAZI,EAAYJ,UAAA,EAChF,IADgF3G,EAAAzK,KAAAiR,KAC3E,EAAAC,EAAA3U,eAAcsC,GACf,KAAM,IAAIQ,WAAJ,kCAAgDR,EAAhD,yCAEVmB,MAAKnB,GAAKA,EACVmB,KAAK/E,KAAOA,EACZ+E,KAAKqR,MAAQA,EACbrR,KAAKyR,OAAQ,EACbzR,KAAK0R,MAAO,EACZ1R,KAAKD,EAAI,KACTC,KAAKF,EAAI,KACTE,KAAK2R,UAAY,EACjB3R,KAAK7B,SAAW,EAChB6B,KAAK4R,SAAW/P,OAChB7B,KAAK6R,aAAe,KACpB7R,KAAK8R,YAAc,GAAAX,GAAAY,MACnB/R,KAAKgS,UAAY,KACjBhS,KAAKwR,WAAa,KAEbxR,KAAKiS,YAAYC,aAAaV,GAG/BxR,KAAKwR,WAAaA,GAFlB,EAAAN,EAAA1S,YAAA,mBAA8BwB,KAAK/E,KAAnC,uCAA8EuW,EAA9E,wCAKA,EAAAN,EAAA3U,eAAc+U,GACdtR,KAAKsR,QAAUA,IACR,EAAAJ,EAAA9P,WAAUkQ,GACjBtR,KAAKsR,OAASA,IAEd,EAAAJ,EAAA1S,YAAA,oBAA+BwB,KAAK/E,KAApC,8BACA+E,KAAKsR,YAGL,EAAAJ,EAAA3U,eAAcgV,GACdvR,KAAKuR,QAAUA,IACR,EAAAL,EAAA9P,WAAUmQ,GACjBvR,KAAKuR,OAASA,IAEd,EAAAL,EAAA1S,YAAA,oBAA+BwB,KAAK/E,KAApC,+BACA+E,KAAKuR,WPk2Bb,MA7MA1G,GAAaoG,IACT3P,IAAK,UAKLvG,MAAO,WOroBP,MAAOiF,MAAKyR,SPyoBZnQ,IAAK,YACLvG,MAAO,SOvoBDoX,EAAMC,GACZ,MAAOpS,MAAK6R,aAAaM,OAASA,GAAQnS,KAAK6R,aAAaO,MAAQA,KP0oBpE9Q,IAAK,SACLvG,MAAO,WOvoBP,MAAOiF,MAAK0R,QP2oBZpQ,IAAK,iBACLvG,MAAO,WOxoBP,OAAO,EAAAmW,EAAApQ,sBAAqBd,KAAKsR,WP4oBjChQ,IAAK,kBACLvG,MAAO,WOzoBP,OAAO,EAAAmW,EAAApQ,sBAAqBd,KAAKuR,WP6oBjCjQ,IAAK,QACLvG,MAAO,SO3oBL8D,GACF,MAAOmB,MAAKnB,KAAOA,KP8oBnByC,IAAK,iBACLvG,MAAO,SO5oBIkG,GACX,OAAO,EAAAiQ,EAAAlQ,eAAcC,KACbjB,KAAKsR,OAAO9P,SAASP,IACrBjB,KAAKuR,OAAO/P,SAASP,OP6oB7BK,IAAK,qBACLvG,MAAO,WO3oBU,GAAAsX,GAAArS,IACjB,OAAOkR,GAAAtI,cAAcvI,KAAK,SAACY,GAAD,MAAYoR,GAAKC,eAAerR,QPkpB1DK,IAAK,SACLvG,MAAO,SOhpBJuG,GACH,MAAOtB,MAAKsR,OAAO9P,SAASF,IACrBtB,KAAKuR,OAAO/P,SAASF,MPqpB5BA,IAAK,QACLvG,MAAO,WO/oBP,MAAOiF,MAAKnB,MPmpBZyC,IAAK,UACLvG,MAAO,WOhpBP,MAAOiF,MAAK/E,QPopBZqG,IAAK,WACLvG,MAAO,WOjpBP,MAAOiF,MAAKqR,SPqpBZ/P,IAAK,WACLvG,MAAO,WOlpBP,MAAOiF,MAAK/E,QPspBZqG,IAAK,kBACLvG,MAAO,WOnpBP,MAAOiF,MAAK6R,gBPupBZvQ,IAAK,cACLvG,MAAO,WOppBP,MAAOiF,MAAK7B,YPwpBZmD,IAAK,eACLvG,MAAO,WOrpBP,MAAOiF,MAAK2R,aPypBZrQ,IAAK,uBACLvG,MAAO,WOtpBP,OAAO,EAAAmW,EAAA3T,aAAYyC,KAAKwR,WAAWe,kBAAmBvS,KAAKwR,WAAWgB,sBP0pBtElR,IAAK,2BACLvG,MAAO,WOvpBP,OAAO,EAAAmW,EAAA3T,aAAYyC,KAAKwR,WAAWiB,sBAAuBzS,KAAKwR,WAAWkB,0BP2pB1EpR,IAAK,iBACLvG,MAAO,WOxpBP,OAAO,EAAAmW,EAAAjT,oBAAmB+B,KAAK2S,2BAA6B3S,KAAKwR,WAAWiB,sBAAuBzS,KAAK7B,aP+pBxGmD,IAAK,cACLvG,MAAO,SO1pBC6X,GACR5S,KAAK4R,SAAWgB,KP6pBhBtR,IAAK,eACLvG,MAAO,SO3pBE4W,GACT3R,KAAK2R,UAAYA,KPiqBjBrQ,IAAK,QACLvG,MAAO,YO3pBP,EAAAmW,EAAA9S,KAAO4B,KAAP,cACAA,KAAKyR,OAAQ,EACbzR,KAAK7B,SAAW6B,KAAK4R,SACjB5R,KAAKiS,YAAYC,aAAalS,KAAKwR,cACnCxR,KAAKgS,UAAYa,WAAW7S,KAAK8S,mBAAmBC,KAAK/S,MAAOA,KAAKgT,sBPgqBzE1R,IAAK,OACLvG,MAAO,WO5pBPiF,KAAKyR,OAAQ,EACbzR,KAAK7B,SAAW,EAChB8U,aAAajT,KAAKgS,cPgqBlB1Q,IAAK,QACLvG,MAAO,WO7pBPiF,KAAK0R,MAAO,EACZ1R,KAAK6R,aAAe,KACpB7R,KAAK8R,YAAc,GAAAX,GAAAY,SPuqBnBzQ,IAAK,MACLvG,MAAO,SOjqBPmY,GACAlT,KAAKyR,OAAQ,EACbwB,aAAajT,KAAKgS,YAClB,EAAAd,EAAA9S,KAAO4B,KAAP,KAAgBkT,GAAS,QAAzB,SAAwC,EAAAhC,EAAApU,OAAMkD,KAAKD,EAAG,GAAtD,MAA6D,EAAAmR,EAAApU,OAAMkD,KAAKF,EAAG,GAA3E,SPoqBAwB,IAAK,OACLvG,MAAO,SOlqBNoX,EAAMC,GACPpS,KAAK6R,cACDM,KAAQA,EACRC,IAAQA,MPsqBZ9Q,IAAK,YACLvG,MAAO,WOlqBPiF,KAAK0R,MAAO,CACZ,IAAMyB,GAAiBnT,KAAKoT,uBACtBC,GAAqB,EAAAnC,EAAAjT,oBAAmBkV,EAAgBnT,KAAK7B,SACnE6B,MAAKgS,UAAYa,WAAW7S,KAAKsT,QAAQP,KAAK/S,MAAOqT,MPsqBrD/R,IAAK,UACLvG,MAAO,WOnqBPiF,KAAK0R,MAAO,CACZ,IAAM6B,GAAqBvT,KAAK2S,2BAC1Ba,GAA6B,EAAAtC,EAAAjT,oBAAmBsV,EAAoBvT,KAAK7B,SAC/E6B,MAAKgS,UAAYa,WAAW7S,KAAKyT,UAAUV,KAAK/S,MAAOwT,MPuqBvDlS,IAAK,qBACLvG,MAAO,WOpqBPiF,KAAKyT,ePwqBLnS,IAAK,cACLvG,MAAO,WOrqBPiF,KAAK8R,YAAY4B,SAAU3T,EAAKC,KAAKD,EAAGD,EAAKE,KAAKF,SPyqBlDwB,IAAK,WACLvG,MAAO,SOp1BK4Y,GACZ,MAAQA,aAAkB1C,MPu1B1B3P,IAAK,eACLvG,MAAO,SOr1BSyW,GAChB,OAAO,EAAAN,EAAAjV,UAASuV,KACT,EAAAN,EAAAvU,qBACoB6U,EAAWe,kBACXf,EAAWgB,kBACXhB,EAAWiB,sBACXjB,EAAWkB,4BPo1BnCzB,MAKL,SAAUxW,EAAQD,EAASH,GAEjC,YAUA,SAASoQ,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAItL,WAAU,qCAEhH,QAASuU,GAA2BC,EAAMjZ,GAAQ,IAAKiZ,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOlZ,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BiZ,EAAPjZ,EAElO,QAASmZ,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI5U,WAAU,iEAAoE4U,GAAeD,GAASnY,UAAYT,OAAO8Y,OAAOD,GAAcA,EAAWpY,WAAaoW,aAAelX,MAAOiZ,EAAUzY,YAAY,EAAO2P,UAAU,EAAM5P,cAAc,KAAe2Y,IAAY7Y,OAAO+Y,eAAiB/Y,OAAO+Y,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,GAXje7Y,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,IAEXP,EAAQ6Z,mBAAqBxS,MQ35B7B,IAAAyS,GAAAja,EAAA,ERq6ByBG,GQn6BZ6Z,mBRm6ByC,SAAUE,GQl6B5D,QAAAF,GAAYG,EAAUC,GAClB,GAD4BhK,EAAAzK,KAAAqU,KACtBI,YAAoBC,WACtB,KAAM,IAAIrV,WAAJ,sCAAoDoV,EAApD,KAFkB,IAAApC,GAAAuB,EAAA5T,MAAAqU,EAAAD,WAAAhZ,OAAAuZ,eAAAN,IAAAzZ,KAAAoF,KAItBwU,GAJsB,OAK5BnC,GAAKoC,SAAWA,EALYpC,ERk7BhC,MAfA0B,GAAUM,EAAoBE,GAevBF,GACTC,EAASM,SAIL,SAAUna,EAAQD,EAASH,GAEjC,YAcA,SAASoQ,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAItL,WAAU,qCAEhH,QAASuU,GAA2BC,EAAMjZ,GAAQ,IAAKiZ,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOlZ,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BiZ,EAAPjZ,EAElO,QAASmZ,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI5U,WAAU,iEAAoE4U,GAAeD,GAASnY,UAAYT,OAAO8Y,OAAOD,GAAcA,EAAWpY,WAAaoW,aAAelX,MAAOiZ,EAAUzY,YAAY,EAAO2P,UAAU,EAAM5P,cAAc,KAAe2Y,IAAY7Y,OAAO+Y,eAAiB/Y,OAAO+Y,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,GAfje7Y,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,IAEXP,EAAQqa,kBAAoBhT,MAE5B,IAAIgJ,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAItQ,GAAI,EAAGA,EAAIsQ,EAAMtO,OAAQhC,IAAK,CAAE,GAAIuQ,GAAaD,EAAMtQ,EAAIuQ,GAAW1P,WAAa0P,EAAW1P,aAAc,EAAO0P,EAAW3P,cAAe,EAAU,SAAW2P,KAAYA,EAAWC,UAAW,GAAM9P,OAAOC,eAAe0P,EAAQE,EAAW3J,IAAK2J,IAAiB,MAAO,UAAUN,EAAaQ,EAAYC,GAAiJ,MAA9HD,IAAYL,EAAiBH,EAAY9O,UAAWsP,GAAiBC,GAAaN,EAAiBH,EAAaS,GAAqBT,MAE5hBmK,EAAO,QAAStZ,GAAIG,EAAQC,EAAUmZ,GAA2B,OAAXpZ,IAAiBA,EAAS+Y,SAAS7Y,UAAW,IAAImZ,GAAO5Z,OAAO6Z,yBAAyBtZ,EAAQC,EAAW,IAAaiG,SAATmT,EAAoB,CAAE,GAAIE,GAAS9Z,OAAOuZ,eAAehZ,EAAS,OAAe,QAAXuZ,EAAmB,OAAkC1Z,EAAI0Z,EAAQtZ,EAAUmZ,GAAoB,GAAI,SAAWC,GAAQ,MAAOA,GAAKja,KAAgB,IAAIG,GAAS8Z,EAAKxZ,GAAK,IAAeqG,SAAX3G,EAA4C,MAAOA,GAAON,KAAKma,ISt8B5dI,EAAA9a,EAAA,ETg9BwBG,GS98BXqa,kBT88BuC,SAAUO,GS78B1D,QAAAP,GAAYvJ,GAAMb,EAAAzK,KAAA6U,EAAA,IAAAxC,GAAAuB,EAAA5T,MAAA6U,EAAAT,WAAAhZ,OAAAuZ,eAAAE,IAAAja,KAAAoF,KACRsL,GADQ,OAERA,GAAKC,WAAY,GAAQD,EAAKC,WAAY,GAC5CuJ,EAAAD,EAAAhZ,UAAAuY,WAAAhZ,OAAAuZ,eAAAE,EAAAhZ,WAAA,eAAAwW,GAAAzX,KAAAyX,EAAmB/G,EAAKC,SAHd8G,ET4+BlB,MA9BA0B,GAAUc,EAAmBO,GAa7BvK,EAAagK,IACTvT,IAAK,eACLvG,MAAO,SSt9BEA,GACT,MAAOA,MAAU,GAAQA,KAAU,OTy9BnCuG,IAAK,YACLvG,MAAO,SSv9BMA,GACb,MAAOA,GAAM2G,cT09BbJ,IAAK,QACLvG,MAAO,SSx9BE2Q,GACT,MAA4B,SAArBA,MT49BJmJ,GACTM,EAAavK,aAIT,SAAUnQ,EAAQD,EAASH,GAEjC,YAgBA,SAASoQ,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAItL,WAAU,qCAEhH,QAASuU,GAA2BC,EAAMjZ,GAAQ,IAAKiZ,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOlZ,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BiZ,EAAPjZ,EAElO,QAASmZ,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI5U,WAAU,iEAAoE4U,GAAeD,GAASnY,UAAYT,OAAO8Y,OAAOD,GAAcA,EAAWpY,WAAaoW,aAAelX,MAAOiZ,EAAUzY,YAAY,EAAO2P,UAAU,EAAM5P,cAAc,KAAe2Y,IAAY7Y,OAAO+Y,eAAiB/Y,OAAO+Y,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,GAjBje7Y,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,IAEXP,EAAQ6a,sBAAwBxT,MAEhC,IAAIgJ,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAItQ,GAAI,EAAGA,EAAIsQ,EAAMtO,OAAQhC,IAAK,CAAE,GAAIuQ,GAAaD,EAAMtQ,EAAIuQ,GAAW1P,WAAa0P,EAAW1P,aAAc,EAAO0P,EAAW3P,cAAe,EAAU,SAAW2P,KAAYA,EAAWC,UAAW,GAAM9P,OAAOC,eAAe0P,EAAQE,EAAW3J,IAAK2J,IAAiB,MAAO,UAAUN,EAAaQ,EAAYC,GAAiJ,MAA9HD,IAAYL,EAAiBH,EAAY9O,UAAWsP,GAAiBC,GAAaN,EAAiBH,EAAaS,GAAqBT,MAE5hBmK,EAAO,QAAStZ,GAAIG,EAAQC,EAAUmZ,GAA2B,OAAXpZ,IAAiBA,EAAS+Y,SAAS7Y,UAAW,IAAImZ,GAAO5Z,OAAO6Z,yBAAyBtZ,EAAQC,EAAW,IAAaiG,SAATmT,EAAoB,CAAE,GAAIE,GAAS9Z,OAAOuZ,eAAehZ,EAAS,OAAe,QAAXuZ,EAAmB,OAAkC1Z,EAAI0Z,EAAQtZ,EAAUmZ,GAAoB,GAAI,SAAWC,GAAQ,MAAOA,GAAKja,KAAgB,IAAIG,GAAS8Z,EAAKxZ,GAAK,IAAeqG,SAAX3G,EAA4C,MAAOA,GAAON,KAAKma,IUhgC5dI,EAAA9a,EAAA,GACAgR,EAAAhR,EAAA,EV2gC4BG,GUzgCf6a,sBVygC+C,SAAUD,GUxgClE,QAAAC,GAAY/J,GACR,GADcb,EAAAzK,KAAAqV,IAWd,SAA+B9L,GAC3B,MAAOA,aAAmBpJ,QAASoJ,EAAQ7M,OAAS,GAAK6M,EAAQ1M,MAARwO,EAAA7O,WAXlC8O,EAAKgK,QAC5B,KAAM,IAAIjW,WAAJ,kDAAgEiM,EAAKgK,OAArE,oBAA+FhK,EAAKhK,IAApG,MAFI,IAAA+Q,GAAAuB,EAAA5T,MAAAqV,EAAAjB,WAAAhZ,OAAAuZ,eAAAU,IAAAza,KAAAoF,KAIRsL,GAJQ,OAKd+G,GAAKiD,OAAShK,EAAKgK,OACnBjD,EAAKkD,OAASjK,EAAKiK,OACdlD,EAAKmD,aAAalK,EAAKC,UACxBuJ,EAAAO,EAAAxZ,UAAAuY,WAAAhZ,OAAAuZ,eAAAU,EAAAxZ,WAAA,eAAAwW,GAAAzX,KAAAyX,EAAmB/G,EAAKC,SARd8G,EVijClB,MAxCA0B,GAAUsB,EAAuBD,GAuBjCvK,EAAawK,IACT/T,IAAK,eACLvG,MAAO,SUlhCEA,GACT,MAAOiF,MAAKsV,OAAO/K,QAAQxP,IAAU,OVqhCrCuG,IAAK,YACLvG,MAAO,SUnhCMA,GACb,MAAOA,MVshCPuG,IAAK,QACLvG,MAAO,SUphCE2Q,GACT,MAAOA,OVwhCJ2J,GACTF,EAAavK,aAIT,SAAUnQ,EAAQD,EAASH,GAEjC,YAUA,SAASoQ,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAItL,WAAU,qCAPhHjE,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,IAEXP,EAAQoa,OAAS/S,MWlkCjB,IAAAqP,GAAA7W,EAAA,EXwkCaG,GWtkCAoa,OACT,QAAAA,GAAYa,GACR,GADchL,EAAAzK,KAAA4U,KACT,EAAA1D,EAAA1U,UAASiZ,GACV,KAAM,IAAIpW,WAAJ,gCAA8CoW,EAA9C,KAEVzV,MAAKyV,KAAOA,IX4kCd,SAAUhb,EAAQD,EAASH,GAEjC,YASA,SAASoQ,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAItL,WAAU,qCANhHjE,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,GAGX,IAAI8P,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAItQ,GAAI,EAAGA,EAAIsQ,EAAMtO,OAAQhC,IAAK,CAAE,GAAIuQ,GAAaD,EAAMtQ,EAAIuQ,GAAW1P,WAAa0P,EAAW1P,aAAc,EAAO0P,EAAW3P,cAAe,EAAU,SAAW2P,KAAYA,EAAWC,UAAW,GAAM9P,OAAOC,eAAe0P,EAAQE,EAAW3J,IAAK2J,IAAiB,MAAO,UAAUN,EAAaQ,EAAYC,GAAiJ,MAA9HD,IAAYL,EAAiBH,EAAY9O,UAAWsP,GAAiBC,GAAaN,EAAiBH,EAAaS,GAAqBT,KAIlhBnQ,GYhmCDkb,QZgmCmB,WY/lC5B,QAAAA,GAAYD,EAAME,GAAYlL,EAAAzK,KAAA0V,GAC1B1V,KAAKyV,KAAOA,EACZzV,KAAK4V,MAAQD,EZgnCjB,MAXA9K,GAAa6K,IACTpU,IAAK,gBACLvG,MAAO,WYnmCV,GAAMgB,GAAI+C,SAAS+W,cAAc,IAIjC,OAHA9Z,GAAEuD,YAAcU,KAAKyV,KACrB1Z,EAAE+Z,UAAUC,IAAI/V,KAAK4V,OACrB7Z,EAAE+Z,UAAUC,IAAI,WACTha,MZwmCD2Z,MAKL,SAAUjb,EAAQD,EAASH,GAEjC,YAgBA,SAASoQ,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAItL,WAAU,qCAEhH,QAASuU,GAA2BC,EAAMjZ,GAAQ,IAAKiZ,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOlZ,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BiZ,EAAPjZ,EAElO,QAASmZ,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI5U,WAAU,iEAAoE4U,GAAeD,GAASnY,UAAYT,OAAO8Y,OAAOD,GAAcA,EAAWpY,WAAaoW,aAAelX,MAAOiZ,EAAUzY,YAAY,EAAO2P,UAAU,EAAM5P,cAAc,KAAe2Y,IAAY7Y,OAAO+Y,eAAiB/Y,OAAO+Y,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,GAjBje7Y,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,IAEXP,EAAQwb,gBAAkBnU,MAE1B,IAAIgJ,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAItQ,GAAI,EAAGA,EAAIsQ,EAAMtO,OAAQhC,IAAK,CAAE,GAAIuQ,GAAaD,EAAMtQ,EAAIuQ,GAAW1P,WAAa0P,EAAW1P,aAAc,EAAO0P,EAAW3P,cAAe,EAAU,SAAW2P,KAAYA,EAAWC,UAAW,GAAM9P,OAAOC,eAAe0P,EAAQE,EAAW3J,IAAK2J,IAAiB,MAAO,UAAUN,EAAaQ,EAAYC,GAAiJ,MAA9HD,IAAYL,EAAiBH,EAAY9O,UAAWsP,GAAiBC,GAAaN,EAAiBH,EAAaS,GAAqBT,MAE5hBmK,EAAO,QAAStZ,GAAIG,EAAQC,EAAUmZ,GAA2B,OAAXpZ,IAAiBA,EAAS+Y,SAAS7Y,UAAW,IAAImZ,GAAO5Z,OAAO6Z,yBAAyBtZ,EAAQC,EAAW,IAAaiG,SAATmT,EAAoB,CAAE,GAAIE,GAAS9Z,OAAOuZ,eAAehZ,EAAS,OAAe,QAAXuZ,EAAmB,OAAkC1Z,EAAI0Z,EAAQtZ,EAAUmZ,GAAoB,GAAI,SAAWC,GAAQ,MAAOA,GAAKja,KAAgB,IAAIG,GAAS8Z,EAAKxZ,GAAK,IAAeqG,SAAX3G,EAA4C,MAAOA,GAAON,KAAKma,IapoC5dI,EAAA9a,EAAA,GACAgR,EAAAhR,EAAA,Eb+oCsBG,Ga7oCTwb,gBb6oCmC,SAAUZ,Ga5oCtD,QAAAY,GAAY1K,GACR,GADcb,EAAAzK,KAAAgW,KACT,EAAA3K,EAAAjP,UAASkP,EAAK9N,QAAS,EAAA6N,EAAAjP,UAASkP,EAAK7N,KACtC,KAAM,IAAI4B,WAAJ,sCAAoDiM,EAAK9N,IAAzD,QAAoE8N,EAAK7N,IAAzE,oBAAgG6N,EAAKhK,IAArG,MACH,IAAIgK,EAAK9N,IAAM8N,EAAK7N,IACvB,KAAM,IAAI4B,WAAJ,yCAAuDiM,EAAK9N,IAA5D,QAAuE8N,EAAK7N,IAA5E,oBAAmG6N,EAAKhK,IAAxG,oBAJI,IAAA+Q,GAAAuB,EAAA5T,MAAAgW,EAAA5B,WAAAhZ,OAAAuZ,eAAAqB,IAAApb,KAAAoF,KAMRsL,GANQ,OAOd+G,GAAK7U,IAAM8N,EAAK9N,IAChB6U,EAAK5U,IAAM6N,EAAK7N,IACX4U,EAAKmD,aAAalK,EAAKC,UACxBuJ,EAAAkB,EAAAna,UAAAuY,WAAAhZ,OAAAuZ,eAAAqB,EAAAna,WAAA,eAAAwW,GAAAzX,KAAAyX,EAAmB/G,EAAKC,SAVd8G,EbmrClB,MAtCA0B,GAAUiC,EAAiBZ,GAqB3BvK,EAAamL,IACT1U,IAAK,eACLvG,MAAO,SatpCEA,GACT,OAAO,EAAAsQ,EAAAjP,UAASrB,IAAUA,GAASiF,KAAKxC,KAAOzC,GAASiF,KAAKvC,SbypC7D6D,IAAK,YACLvG,MAAO,SavpCMA,GACb,MAAOA,GAAM2G,cb0pCbJ,IAAK,QACLvG,MAAO,SaxpCE2Q,GACT,MAAOuK,YAAWvK,Ob4pCfsK,GACTb,EAAavK,aAIT,SAAUnQ,EAAQD,EAASH,GAEjC,YAgCA,SAAS6b,GAAuBha,GAAO,MAAOA,IAAOA,EAAIR,WAAaQ,GAAQqP,QAASrP,GAEvF,QAASuO,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAItL,WAAU,qCcntCzG,QAAS8W,GAAcC,GA0C1B,QAASC,MACL,EAAAnF,EAAA9S,KAAI,iBACJkY,GAAMR,UAAUC,IAAIQ,EAAAhL,QAAQkD,cAGhC,QAAS+H,MACL,EAAAtF,EAAA9S,KAAI,kBACJkY,GAAMR,UAAUW,OAAOF,EAAAhL,QAAQkD,cAGnC,QAASiI,KACLC,GAAeb,UAAUW,OAAOF,EAAAhL,QAAQkD,cAG5C,QAASmI,KACLD,GAAeb,UAAUC,IAAIQ,EAAAhL,QAAQkD,cAGzC,QAASoI,GAAaC,GAClB,OAAO,EAAA5F,EAAAlS,eAAc8X,IAAYA,EAAQC,SAASra,QAAU,EAGhE,QAASsa,GAASF,GACd,MAAOA,aAAmBG,IAG9B,QAASC,GAAoBC,GACzB,GAAMC,GAAYC,EAAkBF,EACpCG,IAAuB,GAAIC,IAAcJ,EAAQC,GACjDI,GAA6B,GAC7Bd,IACAC,GAAec,YAAYL,GAE3BA,EAAUM,cAAc,uBAAuBC,QAGnD,QAASC,KACLN,GAAqBO,IAAIpB,SACzBa,GAAuB,KACnBQ,IAEAZ,EAAoBa,GAAcC,UAGlCR,GAA6B,GAC7BZ,KAIR,QAASkB,KACL,MAAOC,IAAcrb,OAAS,EAGlC,QAASub,KACL,MAAOX,IAAqBH,iBAArBe,GAAA7D,mBAGX,QAAS8D,GAA6B1C,GAClC,GAAM2B,GAAYtY,SAAS+W,cAAc,MACzCuB,GAAUtB,UAAUC,IAAIQ,EAAAhL,QAAQoD,aAChC,IAAMnD,GAAQ1M,SAAS+W,cAAc,IAGrC,OAFArK,GAAMlM,YAAcmW,EACpB2B,EAAUK,YAAYjM,GACf4L,EAGX,QAASgB,GAAuBjB,GAO5B,QAASkB,KACLT,IAPJ,GAAMU,GAAiBH,EAA6BhB,EAAO1B,KAC3D6C,GAAexC,UAAUC,IAAIQ,EAAAhL,QAAQqD,mBACrC,IAAM2J,GAAWzZ,SAAS+W,cAAc,SAUxC,OATA0C,GAASjZ,YAAckZ,GACvBF,EAAeb,YAAYc,GAM3BA,EAASE,iBAAiB,QAASJ,GAE5BC,EAGX,QAASI,GAA8BC,GAUnC,QAASC,GAA+BC,GACpC,MAAO,YACHjB,IACIiB,KAAa,GACbF,EAAmBlE,YAb/B,GAAMqE,GAAwBX,EAA6BQ,EAAmBlD,KAC9EqD,GAAsBhD,UAAUC,IAAIQ,EAAAhL,QAAQsD,0BAC5C,IAAMkK,GAAYja,SAAS+W,cAAc,SACzCkD,GAAUzZ,YAAc0Z,EACxB,IAAMC,GAAYna,SAAS+W,cAAc,SAiBzC,OAhBAoD,GAAS3Z,YAAc4Z,GACvBJ,EAAsBrB,YAAYsB,GAClCD,EAAsBrB,YAAYwB,GAWlCF,EAAUN,iBAAiB,QAASG,GAA+B,IACnEK,EAASR,iBAAiB,QAASG,GAA+B,IAE3DE,EAGX,QAASzB,GAAkBF,GACvB,GAAIA,kCACA,MAAOuB,GAA8BvB,EAClC,IAAIA,sBACP,MAAOiB,GAAuBjB,EAElC,MAAM,IAAI9X,WAAa8X,EAAjB,2BAGV,QAASgC,GAAqBC,GAC1BA,EAAMtD,UAAUW,OAAO,UAG3B,QAAS4C,KACLlZ,MAAMmZ,KAAKC,GAAWxC,UAAUyC,QAAQL,GAG5C,QAASM,KACLtZ,MAAMmZ,KAAKI,GAAQ3C,UAAUyC,QAAQL,GAGzC,QAASQ,GAAkBC,GACvB,OAAQA,GACJ,IAAKrD,GAAAhL,QAAQiE,eACT1Q,SAAS+a,KAAK/D,UAAUW,OAAOF,EAAAhL,QAAQ2D,eACvC,MACJ,KAAKqH,GAAAhL,QAAQgE,cACTzQ,SAAS+a,KAAK/D,UAAUC,IAAIQ,EAAAhL,QAAQ2D,eACpC,MACJ,UACI,EAAAgC,EAAAxS,UAAA,kCAA2Ckb,EAA3C,OAIZ,QAASpC,GAA6BsC,GAC9BA,EACAhb,SAAS+a,KAAK/D,UAAUC,IAAIQ,EAAAhL,QAAQ4D,kBAEpCrQ,SAAS+a,KAAK/D,UAAUW,OAAOF,EAAAhL,QAAQ4D,kBAI/C,QAAS4K,GAA+BC,GACpC,GAAIA,qCAA6C,CAE7C,MAD0BA,GAAWzE,OAAO0E,OAAO,SAACC,EAAKC,GAAN,MAAkBA,GAAQzd,OAASwd,EAAIxd,OAASyd,EAAUD,IACpFxd,QAAU0d,GAEnC,OAAO,EAIf,QAASC,GAAyBL,EAAYM,GAC1C,KAAMN,2BACF,KAAM,IAAI3a,WAAa2a,EAAjB,wBAIV,IAAMO,GAAMzb,SAAS+W,cAAc,OAC7BrK,EAAQ1M,SAAS+W,cAAc,QACrCrK,GAAMlM,YAAc0a,EAAWxO,MAC/BA,EAAMgP,aAAa,MAAnB,GAA6BjE,EAAAhL,QAAQ+D,4BAA8B0K,EAAW1Y,IAC9E,IAAMmK,GAAc3M,SAAS+W,cAAc,QAK3C,IAJApK,EAAYnM,YAAc0a,EAAWvO,YACrCA,EAAYqK,UAAUC,IAAIQ,EAAAhL,QAAQuD,mBAG9BkL,iCAAyC,CACzC,GAAMS,GAAQ3b,SAAS+W,cAAc,QACrC4E,GAAMC,KAAO,WACbD,EAAME,QAAQrZ,IAAM0Y,EAAW1Y,IAC/BmZ,EAAM5b,GAAK0X,EAAAhL,QAAQ+D,4BAA8B0K,EAAW1Y,IAC5DmZ,EAAMG,QAAUN,KAAoB,EACpCC,EAAI9C,YAAYgD,GAChBF,EAAI9C,YAAYjM,OAIf,IAAIwO,qCAA6C,CAClD,GAAMa,GAAW/b,SAAS+W,cAAc,YAClCiF,EAAShc,SAAS+W,cAAc,SACtCiF,GAAOxb,YAAc0a,EAAWxO,MAChCqP,EAASpD,YAAYqD,GACrBd,EAAW1E,OAAOkE,QAAQ,SAACze,EAAOggB,GAC9B,GAAMlc,GAAK0X,EAAAhL,QAAQ+D,4BAA8B0K,EAAW1Y,IAAM,IAAM0Y,EAAW1E,OAAOyF,GACpFC,EAAclc,SAAS+W,cAAc,QAC3CmF,GAAYN,KAAO,QACnBM,EAAYnc,GAAKA,EACjBmc,EAAY/f,KAAOsb,EAAAhL,QAAQ+D,4BAA8B0K,EAAW1Y,IACpE0Z,EAAYjgB,MAAQA,EACpBigB,EAAYL,QAAQrZ,IAAM0Y,EAAW1Y,IACrC0Z,EAAYJ,QAAUN,IAAoBvf,CAC1C,IAAMkgB,GAAmBnc,SAAS+W,cAAc,QAChDoF,GAAiB3b,YAAc0a,EAAWzE,OAAOwF,GACjDE,EAAiBT,aAAa,MAAO3b,GACrCgc,EAASpD,YAAYuD,GACrBH,EAASpD,YAAYwD,KAEzBV,EAAI9C,YAAYoD,GACZd,EAA+BC,IAC/BO,EAAIzE,UAAUC,IAAIQ,EAAAhL,QAAQwD,sBAK7B,IAAIiL,+BAAuC,CAC5C,GAAMkB,GAAiBlB,qCACvBO,GAAI9C,YAAYjM,EAChB,IAAMiP,GAAQ3b,SAAS+W,cAAc,QACrC4E,GAAMC,KAAO,SACbD,EAAME,QAAQrZ,IAAM0Y,EAAW1Y,IAC/BmZ,EAAME,QAAQQ,WAAaD,EAAiB3E,EAAAhL,QAAQuE,yBAA2ByG,EAAAhL,QAAQwE,uBACvF0K,EAAMxf,KAAOsb,EAAAhL,QAAQ+D,4BAA8B0K,EAAW1Y,IAC9DmZ,EAAMD,aAAa,OAAQU,EAAiB,EAAIE,IAChDX,EAAMD,aAAa,MAAOR,EAAWxc,KACrCid,EAAMD,aAAa,MAAOR,EAAWvc,KACrCgd,EAAM1f,MAAQuf,EACdC,EAAI9C,YAAYgD,GAIpB,MADAF,GAAI9C,YAAYhM,GACT8O,EAMX,QAASc,GAAWrS,EAAOyL,GACvB,GAAI6G,IAAmB,CACnB,GAAMC,GAAyBjE,GAAqBO,IAAIH,cAAiB8D,GAA1C,UACzBC,EAAcvK,EAAA5Q,SAASC,OAAO2Q,EAAApP,IAAIK,OACpCuZ,SAAgBC,QAKpB,QAJI3E,EAASuE,KACTG,EAAiB1E,EAASuE,EAAuBK,iBAAmBL,EAAuBK,gBAAkB,KAC7GD,EAAa3E,EAASuE,EAAuBM,aAAeN,EAAuBM,YAAc,MAE7F7S,EAAMF,SACV,IAAKoI,GAAApP,IAAIW,MACT,IAAKyO,GAAApP,IAAII,MAED8U,EAASuE,IACTA,EAAuBO,OAE3B,MACJ,KAAK5K,GAAApP,IAAIU,OACDyV,KACAL,GAEJ,MACJ,KAAK1G,GAAApP,IAAIG,IACL+G,EAAM+S,iBACFN,EACIzE,EAAS0E,IACTA,EAAe/D,QAEZX,EAAS2E,IAChBA,EAAWhE,OAEf,MACJ,KAAKzG,GAAApP,IAAIgB,WACDkU,EAAS0E,IACTA,EAAe/D,OAEnB,MACJ,KAAKzG,GAAApP,IAAIkB,YACDgU,EAAS2E,IACTA,EAAWhE,OAEf,MACJ,SACIlD,EAASzL,QAGjByL,GAASzL,GAIjB,QAASgT,GAAahT,EAAOyL,GACrB6G,KAGA7G,EAASzL,GAIjB,QAASiT,GAAW9E,GACZmE,IACAvD,GAAcmE,KAAK/E,GAEnBD,EAAoBC,GAI5B,QAASmE,KACL,MAAgC,QAAzBhE,GAGX,QAAS6E,GAAeC,GACpBjK,GAAKkK,MAAMC,MAAWC,GAAsBH,EAA5C,KAGJ,QAASI,GAAiBC,GACrB3d,SAAS+a,KAAK/D,UAAU2G,KAAY,EAAO,MAAQ,UAAWlG,EAAAhL,QAAQ0D,cAG3E,QAASyN,GAAY7d,GACjB,GAAMkc,GAAQlc,EAAK,EACbua,EAAQuD,GAAS5F,SAASgE,EAC3BlE,GAAauC,GAGdA,EAAMrC,SAAS,GAAGjB,UAAUC,IAAIQ,EAAAhL,QAAQmD,eAFxC,EAAAwC,EAAA1S,YAAA,sBAAiCK,EAAjC,uCAA0Ekc,EAA1E,MAAqF4B,GAAS5F,SAASgE,GAAvG,iCAMR,QAAS6B,GAAc/d,GACnB,GAAMkc,GAAQlc,EAAK,EACbua,EAAQuD,GAAS5F,SAASgE,EAC3BlE,GAAauC,GAGdA,EAAMrC,SAAS,GAAGjB,UAAUW,OAAOF,EAAAhL,QAAQmD,eAF3C,EAAAwC,EAAA1S,YAAA,sBAAiCK,EAAjC,yCAA4Ekc,EAA5E,MAAuF4B,GAAS5F,SAASgE,GAAzG,iCAMR,QAAS8B,KACL,IAAK,GAAIhe,GAAK,EAAGA,GAAM8d,GAAS5F,SAASra,OAAQmC,IAC7C+d,EAAc/d,GAItB,QAASie,KACLzG,IAGJ,QAAS0G,KACLC,IACAxG,IACAyG,KACA5D,IACAI,IACAoD,IACAlD,EAAkBpD,EAAAhL,QAAQiE,gBAG9B,QAAS0N,KACLC,IACA9D,IAGJ,QAAS8D,KACLC,GAAUtH,UAAUW,OAAOF,EAAAhL,QAAQkD,cAGvC,QAASuO,KACLI,GAAUtH,UAAUC,IAAIQ,EAAAhL,QAAQkD,cAGpC,QAAS4O,GAAYC,GACZC,GAAgB/b,SAAS8b,IAC1BC,GAAgBrB,KAAKoB,GAEzBE,GAAeD,IAGnB,QAASE,KACLC,IAAkB,EAClBC,SAAS7H,UAAUW,OAAOF,EAAAhL,QAAQkD,cAGtC,QAASmP,KACLF,IAAkB,EAClBC,SAAS7H,UAAUC,IAAIQ,EAAAhL,QAAQkD,cAGnC,QAASoP,KACL,MAAOH,IAGX,QAASI,GAAmBC,IACxB,EAAA7M,EAAA/R,OAAM6e,GAIN,KAAK,GAHDC,GAAkBF,EAAoBrd,IAAI,SAACwd,GAAD,MAAwB7D,GAAyB6D,EAAmBlE,WAAYkE,EAAmBnjB,SAE7IojB,EAA2B,EACtBzjB,EAAI,EAAGA,EAAIujB,EAAgBvhB,OAAQhC,IAAK,CAC7C,GAAM0jB,GAAeH,EAAgBvjB,EACjC0jB,GAAatI,UAAUuI,SAAS9H,EAAAhL,QAAQwD,oBACxCoP,EAC+B,GAAM,GAEjCC,EAAatI,UAAUC,IAAIQ,EAAAhL,QAAQyD,uBAGvCmP,EAA2B,EAGnCF,EAAgBzE,QAAQ,SAAC8E,GACrBN,GAAavG,YAAY6G,KAIjC,QAASC,KACL,GAAMC,MAEAC,EAAST,GAAaU,iBAAiB,QAC7Cve,OAAMmZ,KAAKmF,GAAQjF,QAAQ,SAACiB,GACL,aAAfA,EAAMC,KAEN8D,EAAYtC,MAAO5a,IAAKmZ,EAAME,QAAQrZ,IAAKvG,MAAO0f,EAAMG,UAClC,UAAfH,EAAMC,KAETD,EAAMG,WAAY,GAClB4D,EAAYtC,MAAO5a,IAAKmZ,EAAME,QAAQrZ,IAAKvG,MAAO0f,EAAM1f,QAEtC,WAAf0f,EAAMC,KAEb8D,EAAYtC,MAAO5a,IAAKmZ,EAAME,QAAQrZ,IAAKvG,OAAQ0f,EAAME,QAAQQ,aAAe5E,EAAAhL,QAAQuE,yBAA2B6O,SAAW1I,YAAYwE,EAAM1f,SAGhJyjB,EAAYtC,MAAO5a,IAAKmZ,EAAME,QAAQrZ,IAAKvG,MAAO0f,EAAM1f,MAAM2G,cAItE,IAAMkd,GAAUZ,GAAaU,iBAAiB,SAI9C,OAHAve,OAAMmZ,KAAKsF,GAASpF,QAAQ,SAACqF,GACzBL,EAAYtC,MAAO5a,IAAKud,EAAOlE,QAAQrZ,IAAKvG,MAAO8jB,EAAOC,QAAQD,EAAOE,eAAehkB,UAErFyjB,EAGX,QAASQ,GAAY1B,GACjBC,GAAkBA,GAAgB0B,OAAO,SAAAC,GAAA,MAAOA,KAAQ5B,IACxDE,GAAeD,IAGnB,QAASC,IAAe2B,IACf,EAAAjO,EAAAlS,eAAcogB,MAGf,EAAAlO,EAAA/R,OAAMigB,IACND,EAAS3F,QAAQ,SAAC8D,GACd8B,GAAkBC,aAAa/B,EAAQgC,gBAAiB,UAJ5D,EAAApO,EAAA1S,YAAA,kCAA6C4gB,GAA7C,4BASR,QAASnC,MACLM,MACAC,GAAeD,IAGnB,QAASgC,IAAeC,GAEpB,QADA,EAAAtO,EAAA9S,KAAA,2BAA+BohB,EAA/B,KACQA,GACJ,IAAKjJ,GAAAhL,QAAQmF,+BACT0O,GAAkBtJ,UAAUW,OAAOF,EAAAhL,QAAQ8D,kBAC3C+P,GAAkBtJ,UAAUC,IAAIQ,EAAAhL,QAAQ6D,0BACxC,MACJ,KAAKmH,GAAAhL,QAAQoF,sBACTyO,GAAkBtJ,UAAUW,OAAOF,EAAAhL,QAAQ6D,2BAC3CgQ,GAAkBtJ,UAAUC,IAAIQ,EAAAhL,QAAQ8D,iBACxC,MACJ,SACI+P,GAAkBtJ,UAAUW,OAAOF,EAAAhL,QAAQ6D,2BAC3CgQ,GAAkBtJ,UAAUW,OAAOF,EAAAhL,QAAQ8D,mBAIvD,QAASoQ,IAAYC,EAAO7gB,EAAI8gB,GAC5B,IAAK,EAAAzO,EAAAlS,eAAc0gB,GAEZ,CACH,GAAMtG,GAAQsG,EAAM3I,SAASlY,EAAG,EAChC,KAAK,EAAAqS,EAAAlS,eAAcoa,GAEZ,CAEH,GAAMwG,GAAoB,SAAAC,GAAA,MAAS,IAAIA,GACjCC,EAAc,iBAAMhhB,UAAS+W,cAAc,QAE3CkK,EAAuBJ,EAASje,WAAWse,MAAM,IAAItf,IAAIkf,IAE/D,EAAA1O,EAAA/R,OAAMia,GACNA,EAAMtD,UAAUC,IAAI,UACpBgK,EAAqBvG,QAAQ,SAACyG,EAAYlF,GACtC,GAAImF,GAAeJ,GACnBI,GAAapK,UAAUC,IAAIgK,EAAqBhF,IAChD3B,EAAM3B,YAAYyI,UAbtB,EAAAhP,EAAA1S,YAAA,iCAA4CK,EAA5C,YAA0Dua,EAA1D,iCAJJ,EAAAlI,EAAA1S,YAAA,8BAAyCkhB,EAAzC,uCAuBR,QAASS,IAAoBthB,EAAI8gB,GAC7BF,GAAYlG,GAAY1a,EAAI8gB,GAC5BF,GAAY/F,GAAS7a,EAAI8gB,GA7hB7B,GACMrJ,KAAQ,EAAApF,EAAAtS,MAAK,SACb+d,IAAW,EAAAzL,EAAAtS,MAAK,YAGhBuT,KAFc,EAAAjB,EAAAtS,MAAK,gBACF,EAAAsS,EAAAtS,MAAK,mBACf,EAAAsS,EAAAtS,MAAK,SACZ2a,IAAa,EAAArI,EAAAtS,MAAK,cAClB8a,IAAU,EAAAxI,EAAAtS,MAAK,WACfwe,IAAY,EAAAlM,EAAAtS,MAAK,aACjBwgB,IAAoB,EAAAlO,EAAAtS,MAAK,YAEzB+X,IAAiB,EAAAzF,EAAAtS,MAAK,WACtBof,IAAe,EAAA9M,EAAAtS,MAAK,iBAEpB2d,GAAsBpK,GAAKiO,YAC3BhG,GAAsD,GACtDgB,GAA8B,IAE9BI,GAAkB,SAClBvE,GAAoBoJ,kBAEpB7H,GAAiB8H,EAAA/U,QAAKoB,sBACtBqM,GAAoBsH,EAAA/U,QAAKqB,yBACzBsM,GAAmBoH,EAAA/U,QAAKsB,wBAE1B6Q,IAAkB,EAClBH,MACAxF,MACAT,GAAuB,KAErBC,GACF,QAAAA,GAAYJ,EAAQU,GAAKpN,EAAAzK,KAAAuX,GACrBvX,KAAKmX,OAASA,EACdnX,KAAK6X,IAAMA,EA+fnB,QACIwD,aACAW,eACAU,cACAE,gBACAE,cACAC,WACAG,WACAjB,aACAX,kBACAmC,eACAG,eACAC,oBACAC,qBACAS,oBACA4B,uBACA3C,kBACAH,cACA2B,cACA/B,iBACAsC,kBACA5F,oBACA6C,mBACAL,kBd2nBR/gB,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,IAEXP,EcvrCgB2b,eAbhB,IAAAf,GAAA/a,EAAA,GACAkmB,EAAAlmB,EAAA,GACAmmB,EAAAnmB,EAAA,IACAomB,EAAApmB,EAAA,IACAqmB,EAAArmB,EAAA,GAEAka,EAAAla,EAAA,GACA6d,EAAA7d,EAAA,GAEA6W,EAAA7W,EAAA,GACAsmB,EAAAtmB,EAAA,Gd8sCIimB,EAAiBpK,EAAuByK,Gc7sC5CC,EAAAvmB,EAAA,GditCIkc,EAAYL,EAAuB0K,IA8kBjC,SAAUnmB,EAAQD,EAASH,GAEjC,YAsBA,SAASoQ,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAItL,WAAU,qCAnBhHjE,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,IAEXP,EAAQqmB,KAAOhf,MAEf,IAAIgJ,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAItQ,GAAI,EAAGA,EAAIsQ,EAAMtO,OAAQhC,IAAK,CAAE,GAAIuQ,GAAaD,EAAMtQ,EAAIuQ,GAAW1P,WAAa0P,EAAW1P,aAAc,EAAO0P,EAAW3P,cAAe,EAAU,SAAW2P,KAAYA,EAAWC,UAAW,GAAM9P,OAAOC,eAAe0P,EAAQE,EAAW3J,IAAK2J,IAAiB,MAAO,UAAUN,EAAaQ,EAAYC,GAAiJ,MAA9HD,IAAYL,EAAiBH,EAAY9O,UAAWsP,GAAiBC,GAAaN,EAAiBH,EAAaS,GAAqBT,MepzDhiBmW,EAAAzmB,EAAA,IfwzDI0mB,EAQJ,SAAgC7kB,GAAO,MAAOA,IAAOA,EAAIR,WAAaQ,GAAQqP,QAASrP,IAR5C4kB,GevzD3CE,EAAA3mB,EAAA,GACA4mB,EAAA5mB,EAAA,IACA6W,EAAA7W,EAAA,Efi0DWG,Ge/zDEqmB,Kf+zDa,We9zDtB,QAAAA,GAAYK,EAAQC,EAAUC,GAY1B,GAZyC3W,EAAAzK,KAAA6gB,GAEzC7gB,KAAKiS,YAAYoP,SAAW,WAC5BrhB,KAAKiS,YAAYqP,YAAc,cAC/BthB,KAAKiS,YAAYsP,aAAevhB,KAAKiS,YAAYoP,SACjDrhB,KAAKiS,YAAYuP,qBAAuB,GACxCxhB,KAAKiS,YAAYwP,iBAAmB,IACpCzhB,KAAKiS,YAAYyP,YAAc,IAC/B1hB,KAAKiS,YAAY0P,sCAAwC,GACzD3hB,KAAKiS,YAAY2P,qDAAuD,EACxE5hB,KAAKiS,YAAYmL,UAAY,aAEZvb,SAAbsf,EACA,KAAM,IAAI9hB,WAAU,yCACjB,KAAKW,KAAKiS,YAAY4P,WAAWV,GACpC,KAAM,IAAI9hB,WAAa8hB,EAAjB,4BAGV,IAAsBtf,SAAlBuf,EACA,KAAM,IAAI/hB,WAAU,+CACjB,KAAKW,KAAKiS,YAAY6P,gBAAgBV,GACzC,KAAM,IAAI/hB,WAAa+hB,EAAjB,kCAIVphB,MAAKkhB,OAASA,EACdlhB,KAAKsc,MAAQ4E,EAAOa,OAAOzF,MAC3Btc,KAAKgiB,OAASd,EAAOa,OAAOC,OAC5BhiB,KAAKiiB,OAAS,KACdjiB,KAAKkiB,WACLliB,KAAKmiB,UACLniB,KAAKmhB,SAAWA,EAChBnhB,KAAKohB,cAAgBA,EACrBphB,KAAKwf,KAAOxf,KAAKiS,YAAYsP,aAC7BvhB,KAAKoiB,iBAAmBlB,EAAOkB,iBAC/BpiB,KAAKqiB,mBAAqB,EAC1BriB,KAAKsiB,YAAc,KACnBtiB,KAAKuiB,eACLviB,KAAKwiB,SAAU,EACfxiB,KAAKyiB,OAAQ,EACbziB,KAAK0iB,iBAAmB,KACxB1iB,KAAK2iB,cAAgB,Kf6pFzB,MAz1BA9X,GAAagW,IACTvf,IAAK,eACLvG,MAAO,SehzDE6nB,GACT,MAAO3lB,MAAKH,MAAM8lB,EAAa5iB,KAAKkhB,OAAO2B,UAAU,MfmzDrDvhB,IAAK,aACLvG,MAAO,WehzDP,MAAOiF,MAAKiS,YAAYyP,efozDxBpgB,IAAK,uBACLvG,MAAO,WejzDP,MAAOkC,MAAKQ,IAAIR,KAAK6lB,MAAM9iB,KAAKkhB,OAAO6B,SAAS/iB,KAAKkhB,OAAOtO,OAAQ,MfwzDpEtR,IAAK,qBACLvG,MAAO,WepzDP,MAAOiF,MAAKkhB,OAAOtO,OAAS5S,KAAKkhB,OAAO6B,SAAW/iB,KAAKkhB,OAAO8B,kBfwzD/D1hB,IAAK,mBACLvG,MAAO,WerzDP,OACIkoB,MAAOjjB,KAAKkhB,OAAOgC,YACnBC,MAAOnjB,KAAKkhB,OAAOgC,YACnBE,MAAOpjB,KAAKsc,MAAQtc,KAAKkhB,OAAOgC,YAChCG,MAAOrjB,KAAKgiB,OAAShiB,KAAKkhB,OAAOgC,gBf0zDrC5hB,IAAK,0BACLvG,MAAO,SevzDauoB,EAAMC,GAC1B,GAAIC,GAAIxjB,KAAKkhB,OAAO2B,SAEpB,QADS,IACES,EADF,KACaE,EAAE,GAAG,EADlB,IACyBD,GAAKC,EAAE,GAAG,GADnC,Of2zDTliB,IAAK,wBACLvG,MAAO,SexzDWuoB,EAAMG,EAAcC,EAAmBhpB,GACzD,GAAI8oB,GAAIxjB,KAAKkhB,OAAO2B,SACpB,OAAOS,GAAOrmB,KAAKK,IAAImmB,IAAeD,EAAE,GAAG,EAAIC,GAAcD,EAAE,GAAG,EAAIvmB,KAAKK,IAAIomB,GAAmBhpB,Kf2zDlG4G,IAAK,gBACLvG,MAAO,SezzDG4Y,EAAQxB,EAAMC,GACxB,GAAIuR,MACA9R,EAAe8B,EAAOiQ,kBACtBC,EAAiB1R,EAAON,EAAaM,KACrC2R,EAAiB1R,EAAOP,EAAaO,GACzC,KAAI,EAAAlB,EAAA/T,SAAQ0mB,EAAgBC,GAAe,CAEvC,GAAIC,GAAkB/jB,KAAKgkB,wBAAwB7R,EAAM0R,GACrDI,EAAkBjkB,KAAKgkB,wBAAwB5R,EAAK0R,EACxDH,GAAazH,KAAKlc,KAAKkkB,aAAaH,EAAiBE,QAGrD,KAAK,GAAIvpB,GAAI,EAAGA,EAAIsF,KAAKkhB,OAAO2B,UAAWnoB,IAAK,CAC5C,GAAIqpB,GAAkB/jB,KAAKmkB,sBAAsBhS,EAAM0R,EAAgBC,EAAcppB,GACjFupB,EAAiBjkB,KAAKmkB,sBAAsB/R,EAAK0R,EAAcD,EAAgBnpB,EACnFipB,GAAazH,KAAKlc,KAAKkkB,aAAaH,EAAiBE,IAG7D,MAAON,Mf4zDPriB,IAAK,8BACLvG,MAAO,WexzDP,GAAMqpB,GAAoBpkB,KAAKkhB,OAAO8B,cAAgBhjB,KAAKiS,YAAY2P,oDACvE,QAAO,EAAA1Q,EAAApU,OAAMkD,KAAKkhB,OAAO2B,UAAYuB,EAAmB,Mf8zDxD9iB,IAAK,2BACLvG,MAAO,We3zDP,GAAMspB,GAAuBrkB,KAAKskB,mBAC5BC,GAAsBF,EAAqBjB,MAAQiB,EAAqBpB,QAAUoB,EAAqBhB,MAAQgB,EAAqBlB,OACpIqB,EAAsBvnB,KAAKwnB,KAAMzkB,KAAKiS,YAAY0P,sCAAwC4C,GAAsBvkB,KAAK0kB,qBAAuBznB,KAAKY,IACvJ,OAAOZ,MAAKO,IACRwC,KAAK2kB,+BACL,EAAAzT,EAAApU,OAAM0nB,EAAqB,Of8zD/BljB,IAAK,sBACLvG,MAAO,Se3zDS6pB,GAIhB,IAAK,GAAIlqB,GAAI,EAAGA,EAAIsF,KAAKkiB,QAAQxlB,OAAQhC,IAAK,CAC1C,GAAMmqB,IAAc9kB,EAAGC,KAAKkiB,QAAQxnB,GAAGqF,EAAGD,EAAGE,KAAKkiB,QAAQxnB,GAAGoF,EAC7D,IALJ,SAAyBglB,EAAMC,GAC3B,MAAO9nB,MAAKwnB,KAAKxnB,KAAKC,IAAI6nB,EAAKhlB,EAAI+kB,EAAK/kB,EAAG,GAAK9C,KAAKC,IAAI6nB,EAAKjlB,EAAIglB,EAAKhlB,EAAG,KAItD+kB,EAAWD,GAAO5kB,KAAKglB,2BACvC,OAAO,EAGf,OAAO,Kf8zDP1jB,IAAK,oBACLvG,MAAO,We3zDP,GAAIkqB,SACJ,IACIA,EAAUjlB,KAAKklB,6BACTllB,KAAKmlB,oBAAoBF,GACnC,OAAOA,Mf+zDP3jB,IAAK,sBACLvG,MAAO,We5zDP,GAAIqqB,GAAYplB,KAAKskB,kBACrB,QACIvkB,GAAG,EAAAmR,EAAA3T,aAAY6nB,EAAUnC,MAAOmC,EAAUhC,OAC1CtjB,GAAG,EAAAoR,EAAA3T,aAAY6nB,EAAUjC,MAAOiC,EAAU/B,Wfi0D9C/hB,IAAK,mBACLvG,MAAO,We7zDP,OAAO,EAAAmW,EAAA3T,aAAYyC,KAAKkhB,OAAOmE,cAAerlB,KAAKkhB,OAAOoE,kBfi0D1DhkB,IAAK,eACLvG,MAAO,Se/zDEgF,EAAGD,GACZ,MAAOA,GAAEE,KAAKsc,MAAQvc,Kfk0DtBuB,IAAK,4BACLvG,MAAO,Seh0DewqB,GACtB,GAAIxlB,GAAIwlB,EAAOvlB,KAAKsc,KAEpB,OAAO,IAAIvc,EAAE,MADJwlB,EAAOxlB,GAAKC,KAAKsc,MACN,Ofs0DpBhb,IAAK,UACLvG,MAAO,Weh0DP,MAAOiF,MAAKwf,Qfo0DZle,IAAK,iBACLvG,MAAO,Wej0DP,MAAOiF,MAAKsiB,efq0DZhhB,IAAK,aACLvG,MAAO,Wel0DP,MAAOiF,MAAKkiB,Wfy0DZ5gB,IAAK,gBACLvG,MAAO,Set0DG8D,GACV,MAAOmB,MAAKkiB,QAAQsD,KAAK,SAAC7R,GAAD,MAAYA,GAAO8R,MAAM5mB,Qf20DlDyC,IAAK,iBACLvG,MAAO,Wex0DP,GAAM2qB,GAAU1lB,KAAKiS,YAAYyT,OACjC,OAAO1lB,MAAKkiB,QAAQjD,OAAOyG,Mf40D3BpkB,IAAK,qBACLvG,MAAO,Wez0DP,MAAOiF,MAAKkiB,QAAQxlB,Uf60DpB4E,IAAK,yBACLvG,MAAO,We10DP,MAAOiF,MAAK2lB,iBAAiBjpB,Uf80D7B4E,IAAK,mBACLvG,MAAO,Se50DM8D,GACb,GAAM+mB,GAAkB,SAACC,EAAK/oB,GAAN,MAAgB+oB,GAAM/oB,EAAMgpB,mBAAmBjnB,GACvE,OAAOmB,MAAKmiB,OAAOlI,OAAO2L,EAAiB,Mfi1D3CtkB,IAAK,kBACLvG,MAAO,We90DP,MAAOiF,MAAKmiB,OAAOniB,KAAKmiB,OAAOzlB,OAAS,Mfq1DxC4E,IAAK,UACLvG,MAAO,Seh1DHykB,GACAA,IAASxf,KAAKiS,YAAYqP,aAAe9B,IAASxf,KAAKiS,YAAYoP,WACnE,EAAAnQ,EAAA9S,KAAA,wBAA4BohB,EAA5B,KACAxf,KAAKwf,KAAOA,IAEZ,EAAAtO,EAAAxS,UAAY8gB,EAAZ,sCAAsDxf,KAAK+lB,UAA3D,Qfo1DJzkB,IAAK,iBACLvG,MAAO,Sej1DIirB,GACX,GAAIC,GAAKjmB,KAAKiS,YAAYuP,qBACtB0E,EAAMlmB,KAAKiS,YAAYwP,kBAEvB,EAAAvQ,EAAA5U,OAAM0pB,IAAUA,EAAQ,EAEpBA,EAAQE,IAER,EAAAhV,EAAA1S,YAAcwnB,EAAd,uDAA0EE,EAA1E,qBAAkGA,EAAlG,KACAD,EAAKC,KAGL,EAAAhV,EAAA9S,KAAA,2BAA+B4nB,EAA/B,KACAC,EAAKD,IAGT,EAAA9U,EAAA1S,YAAcwnB,EAAd,+CAAkEC,EAAlE,KAEJjmB,KAAKsiB,YAAc2D,Kfo1DnB3kB,IAAK,UACLvG,MAAO,Sel1DHuhB,EAAO0F,GACXhiB,KAAKsc,MAAQA,EACbtc,KAAKgiB,OAASA,EACdhiB,KAAKmhB,SAASgF,QAAQ7J,EAAO0F,Mfq1D7B1gB,IAAK,sBACLvG,MAAO,Sen1DSykB,GAChBxf,KAAKoiB,iBAAmB5C,Kfy1DxBle,IAAK,YACLvG,MAAO,Wen1DP,MAAOiF,MAAKwiB,Wfu1DZlhB,IAAK,UACLvG,MAAO,Wep1DP,MAAOiF,MAAKyiB,Sf21DZnhB,IAAK,cACLvG,MAAO,Wev1DP,MAAOiF,MAAKomB,kBAAkBC,aAAa3pB,SAAWsD,KAAK0kB,wBf21D3DpjB,IAAK,SACLvG,MAAO,Wex1DP,MAAIiF,MAAKsmB,gBACEtmB,KAAKumB,yBAA2B,EAEhCvmB,KAAKumB,yBAA2B,Kfg2D3CjlB,IAAK,cACLvG,MAAO,We31DP,OAAQiF,KAAKwmB,Yf+1DbllB,IAAK,aACLvG,MAAO,We71DE,GAAAsX,GAAArS,KACHymB,EAAwB,SAAA9S,GAAA,MAAUtB,GAAKqU,iBAAiB/S,EAAOgT,UAAYtU,EAAKuU,iBACtF,QAAQ5mB,KAAKwmB,UAAYxmB,KAAKsmB,iBAAmBtmB,KAAKkiB,QAAQ7hB,KAAKomB,Mfo2DnEnlB,IAAK,gBACLvG,MAAO,Wej2DP,MAAOiF,MAAK+lB,YAAc/lB,KAAKiS,YAAYqP,efq2D3ChgB,IAAK,yBACLvG,MAAO,Sen2DYwqB,GACnB,MAAOvlB,MAAKiiB,OAAOsD,GAAQ,Kfs2D3BjkB,IAAK,aACLvG,MAAO,Sep2DA4Y,EAAQxB,EAAMC,GAErB,MADqBpS,MAAK6mB,cAAclT,EAAQxB,EAAMC,GAClC/R,KAAKL,KAAK8mB,uBAAwB9mB,Sf82DtDsB,IAAK,YACLvG,MAAO,Sev2DDoX,EAAMC,GACZ,MAAOD,IAAQ,GACRC,GAAQ,GACRD,EAAKnS,KAAKkhB,OAAO2B,WAAa7iB,KAAKsc,OACnClK,EAAKpS,KAAKkhB,OAAO2B,WAAa7iB,KAAKgiB,Uf62D1C1gB,IAAK,YACLvG,MAAO,Sev2DD8D,GACN,MAAOmiB,GAAA/P,OAAO8V,SAAS/mB,KAAKgnB,cAAcnoB,Ofk3D1CyC,IAAK,YACLvG,MAAO,Sez2DD4Y,GACN,GAAMsT,GAAajnB,KAAKinB,YACxB,KAAKjG,EAAA/P,OAAO8V,SAASpT,GACjB,KAAM,IAAItU,WAAJ,cAA4BsU,EAA5B,2CACH,IAAIA,EAAOgT,QAAUM,EACxB,KAAM,IAAIC,YAAJ,cAA6BvT,EAA7B,+CAAkFsT,EAAlF,sBACCjnB,MAAKmnB,UAAUxT,EAAOgT,UAC7B,EAAAzV,EAAA1S,YAAA,cAAyBmV,EAAzB,0DAAyFA,EAAOgT,QAAhG,OAEA,EAAAzV,EAAA9S,KAAOuV,EAAP,WACA3T,KAAKkiB,QAAQhG,KAAKvI,GAClBA,EAAOyT,YAAYpnB,KAAKkhB,OAAOtO,OAC/B5S,KAAKqnB,gBAAgB1T,EAAOgT,afm3DhCrlB,IAAK,eACLvG,MAAO,Se52DE8D,GACT,GAAMyoB,GAAiBtnB,KAAKgnB,cAAcnoB,EAEtCmiB,GAAA/P,OAAO8V,SAASO,MAChB,EAAApW,EAAA9S,KAAOkpB,EAAP,aACAtnB,KAAKunB,kBAAkB1oB,IAG3BmB,KAAKkiB,QAAUliB,KAAKkiB,QAAQjD,OAAO,SAACtL,GAAD,MAAYA,KAAW2T,Ofo3D1DhmB,IAAK,QACLvG,MAAO,Wej3DH,GAAAysB,GAAAxnB,IACAA,MAAKsmB,kBACLtmB,KAAKynB,eAAeznB,KAAKiS,YAAYyV,qBAAqB1nB,KAAK0kB,uBAC/D1kB,KAAKkiB,QAAQ1I,QAAQ,SAAC7F,GAClB6T,EAAKG,wBAAwBhU,EAAOgT,QAAS,OAGrD,EAAAzV,EAAA9S,KAAI,kBACJ4B,KAAK4nB,kBACL7G,EAAAxV,QAASsc,QACT7nB,KAAKwiB,SAAU,EACfxiB,KAAKiiB,OAAS,GAAI6F,YAAW9nB,KAAKsc,MAAQtc,KAAKgiB,QAC/ChiB,KAAK+nB,mBfy3DLzmB,IAAK,WACLvG,MAAO,Yer3DP,EAAAmW,EAAA9S,KAAI4B,KAAKiS,YAAYmL,WACrBpd,KAAKyiB,OAAQ,EACbziB,KAAKgoB,eACLhoB,KAAK2iB,cAAgB9P,WAAW7S,KAAKioB,aAAalV,KAAK/S,MAAOA,KAAKkhB,OAAOgH,cfy3D1E5mB,IAAK,OACLvG,MAAO,Wet3DPkY,aAAajT,KAAK2iB,eAClB1P,aAAajT,KAAK0iB,qBf03DlBphB,IAAK,aACLvG,MAAO,Wev3DPiF,KAAKiiB,OAAOkG,KAAK,GACjBnoB,KAAKooB,uBf23DL9mB,IAAK,kBACLvG,MAAO,Wex3DPiF,KAAKqoB,gBAAgBroB,KAAKkhB,OAAO/B,SAASmJ,Sf43D1ChnB,IAAK,kBACLvG,MAAO,Wez3DPkY,aAAajT,KAAK0iB,kBAClB1iB,KAAKuoB,gBAAgBvoB,KAAKkhB,OAAO/B,SAASmJ,Sf63D1ChnB,IAAK,eACLvG,MAAO,We13DPiF,KAAKqoB,gBAAgBroB,KAAKkhB,OAAO/B,SAASqJ,Sf83D1ClnB,IAAK,eACLvG,MAAO,We33DPkY,aAAajT,KAAK2iB,eAClB3iB,KAAKuoB,gBAAgBvoB,KAAKkhB,OAAO/B,SAASqJ,Sf+3D1ClnB,IAAK,gBACLvG,MAAO,We53DPiF,KAAKmiB,OAAOjG,KAAK,GAAA+E,GAAAwH,QACjB,EAAAvX,EAAA9S,KAAA,kBAAsB4B,KAAKmiB,OAAOzlB,OAAlC,aACAsD,KAAK0oB,eACL1oB,KAAK2oB,aAEL3oB,KAAK4oB,cACL5oB,KAAK6oB,0Bfg4DLvnB,IAAK,WACLvG,MAAO,We73DPiF,KAAK8oB,cACL9oB,KAAK0iB,iBAAmB7P,WAAW7S,KAAK+oB,gBAAgBhW,KAAK/S,MAAOA,KAAKkhB,OAAOgH,cfi4DhF5mB,IAAK,cACLvG,MAAO,We93DPiF,KAAKkiB,QAAQ8G,KAAK,SAAC5rB,EAAGC,GAAJ,MAAWD,GAAEupB,QAAUtpB,EAAEspB,afo4D3CrlB,IAAK,cACLvG,MAAO,Sel4DC4Y,GACRA,EAAOkU,Wfq4DPvmB,IAAK,aACLvG,MAAO,Sen4DA4Y,GACPA,EAAOsV,Ufs4DP3nB,IAAK,cACLvG,MAAO,Sep4DC4Y,GACRA,EAAOzK,Wf04DP5H,IAAK,eACLvG,MAAO,Wet4DPiF,KAAKkiB,QAAQ1I,QAAQxZ,KAAKkpB,gBf04D1B5nB,IAAK,cACLvG,MAAO,Wev4DPiF,KAAKkiB,QAAQ1I,QAAQxZ,KAAKmpB,ef24D1B7nB,IAAK,eACLvG,MAAO,Wex4DPiF,KAAKkiB,QAAQ1I,QAAQxZ,KAAKopB,gBf44D1B9nB,IAAK,cACLvG,MAAO,Se14DCgF,EAAGD,EAAGjB,GACdmB,KAAKiiB,OAAOjiB,KAAKkkB,aAAankB,EAAGD,IAAMjB,Kf64DvCyC,IAAK,SACLvG,MAAO,Se34DJ4Y,EAAQxB,EAAMC,GACjB,GAAIiX,GAAQlX,EAAOnS,KAAKkhB,OAAO2B,UAC3ByG,EAASlX,EAAMpS,KAAKkhB,OAAO2B,UAC3BhkB,EAAK8U,EAAOgT,SAChB,EAAAzV,EAAA3R,QAAO6S,EAAKkX,EAAQnX,EAAMkX,EAAOrpB,KAAKupB,YAAYxW,KAAK/S,MAAOnB,GAC9DmB,KAAKwpB,kBAAkBrX,EAAMC,EAAKuB,EAAO8V,ef84DzCnoB,IAAK,UACLvG,MAAO,Se54DH4Y,GAAQ,GAAA+V,GAAA1pB,KACN2pB,EAAiB,WACnBC,cAAcC,EACd,IAAI1X,GAAOuX,EAAKI,aAAanW,EAAO5T,GAChCqS,EAAOsX,EAAKI,aAAanW,EAAO7T,EACpC4pB,GAAKF,kBAAkBrX,EAAMC,EAAKuB,EAAO8V,aAEvC5V,EAAO7T,KACPmS,EAAOnS,KAAK8pB,aAAanW,EAAO5T,GAChCqS,EAAOpS,KAAK8pB,aAAanW,EAAO7T,GAChCuR,EAAQsC,EAAO8V,WACjBM,GAAY,EACZF,EAAgBG,YAAY,WACxBD,EACAL,EAAKO,mBAAmB9X,EAAMC,GAE9BsX,EAAKF,kBAAkBrX,EAAMC,EAAKf,GAEtC0Y,GAAaA,GACd,IAAK/pB,KAAKkhB,OAAOgJ,iBACpBrX,YAAW8W,EAAgB9V,EAAKqN,OAAOiJ,oBfi5DvC7oB,IAAK,QACLvG,MAAO,Se/4DL4Y,EAAQyW,EAAUzY,IACpB,EAAAT,EAAA9S,KAAOuV,EAAP,kBAA8B,EAAAzC,EAAApU,OAAMstB,EAASrqB,EAAG,GAAhD,MAAuD,EAAAmR,EAAApU,OAAMstB,EAAStqB,EAAG,GAAzE,MACA6T,EAAO5T,EAAIqqB,EAASrqB,EACpB4T,EAAO7T,EAAIsqB,EAAStqB,EACpB6T,EAAOhC,UAAYA,CACnB,IAAMQ,GAAOnS,KAAK8pB,aAAanW,EAAO5T,GAChCqS,EAAOpS,KAAK8pB,aAAanW,EAAO7T,EACtC6T,GAAO0W,KAAKlY,EAAMC,GAClBpS,KAAKsqB,OAAO3W,EAAQxB,EAAMC,GAC1BpS,KAAKuqB,QAAQ5W,Mfq5DbrS,IAAK,uBACLvG,MAAO,Wej5DP,GAAM8Y,GAAO7T,MACb,EAAAkR,EAAA9S,KAAI,4BAA8B4B,KAAKoiB,iBAAL,6CAC4CvO,EAAKmR,2BADjD,0FAIlC,QAAUwF,GAAY9vB,GAClB,GAAIA,EAAImZ,EAAKqO,QAAQxlB,OAAQ,CACzB,GAAM+tB,GAAgB5W,EAAKuO,iBAAmBvO,EAAK6W,oBAAsB7W,EAAKqR,qBAC9ErR,GAAK8W,MAAM9W,EAAKqO,QAAQxnB,GAAI+vB,EAAe5W,EAAK+W,oBAChD/X,WAAW,iBAAM2X,KAAc9vB,IAAImZ,EAAKqN,OAAOiJ,qBAG/CtW,GAAKgX,gBAEV,Mf05DHvpB,IAAK,aACLvG,MAAO,Ser5DA4Y,GAEP,IADkB3T,KAAKkhB,OAAO2B,UACvBlP,EAAO+R,YAAc/R,EAAO7B,YAAYgZ,WAAW,CACtD,GACIjZ,IADQ8B,EAAO8V,WACA9V,EAAOiQ,mBACtBmH,EAAcpX,EAAO7B,YAAYkZ,UACjC7Y,EAAOnS,KAAK8pB,aAAaiB,EAAYhrB,GACrCqS,EAAOpS,KAAK8pB,aAAaiB,EAAYjrB,EACzC,KAAK6T,EAAOsX,UAAU9Y,EAAMC,GAAM,CAEPuB,EAAOiQ,kBAAkBzR,KACzBwB,EAAOiQ,kBAAkBxR,GAC3CpS,MAAKkrB,UAAU/Y,EAAMC,GAIfpS,KAAKmrB,WAAWxX,EAAQxB,EAAMC,IAErCpS,KAAKorB,MAAMzX,EAAQ,WACnB3T,KAAKsqB,OAAO3W,EAAQ9B,EAAaM,KAAMN,EAAaO,OAGpDuB,EAAO0W,KAAKlY,EAAMC,GACbuB,EAAO0X,UAERrrB,KAAKsqB,OAAO3W,EAAQxB,EAAMC,KAX9BpS,KAAKorB,MAAMzX,EAAQ,yBACnB3T,KAAKsqB,OAAO3W,EAAQ9B,EAAaM,KAAMN,EAAaO,Wfs6DhE9Q,IAAK,WACLvG,MAAO,Set5DF4Y,GACL,GAAIA,EAAO+R,UAAW,CAClB,GAAM7T,GAAe8B,EAAOiQ,kBACtBzR,EAAON,EAAaM,KACpBC,EAAOP,EAAaO,IACpBf,EAAQsC,EAAO8V,UACrBzpB,MAAKsrB,gBAAgBnZ,EAAMC,EAAKf,Of05DpC/P,IAAK,sBACLvG,MAAO,Wev5DW,GAAAwwB,GAAAvrB,KACZwrB,EAAc,SAAC7X,GACjB,GAAM9U,GAAK8U,EAAOgT,OAClB4E,GAAK5D,wBAAwB9oB,EAAI0sB,EAAK7E,iBAAiB7nB,IAE3DmB,MAAK2lB,iBAAiBnM,QAAQgS,Mf45D9BlqB,IAAK,QACLvG,MAAO,Se15DL4Y,EAAQT,GAIV,GAHAS,EAAO8X,IAAIvY,GACXlT,KAAKomB,kBAAkBrQ,IAAIpC,GAC3B3T,KAAK0rB,sBACD1rB,KAAK2rB,cAAe,CACpB,GAAI3rB,KAAKsmB,gBAAiB,CACtB,GAAMZ,GAAU1lB,KAAKiS,YAAYyT,QAC3BkG,EAAS5rB,KAAKkiB,QAAQsD,KAAKE,EACjC1lB,MAAK6rB,SAASD,GAElB5rB,KAAK8rB,ef85DTxqB,IAAK,WACLvG,MAAO,Se35DF4Y,IACL,EAAAzC,EAAA9S,KAAOuV,EAAP,mBAEA3T,KAAKsqB,OAAO3W,EAAQ3T,KAAK8pB,aAAanW,EAAO5T,GAAIC,KAAK8pB,aAAanW,EAAO7T,IAC1EE,KAAKomB,kBAAkBrQ,IAAIpC,Mf85D3BrS,IAAK,oBACLvG,MAAO,We35DPiF,KAAK+rB,kBACL/rB,KAAKgsB,eACDhsB,KAAKisB,aAELjsB,KAAKkd,WACEld,KAAKksB,eAEZlsB,KAAK+nB,mBfg6DTzmB,IAAK,0CACLvG,MAAO,We55DP,MAAOiF,MAAKksB,iBfg6DZ5qB,IAAK,sBACLvG,MAAO,We75DP,MAAOiF,MAAKksB,gBAAkBlsB,KAAKisB,gBfi6DnC3qB,IAAK,yBACLvG,MAAO,We95DP,MAAOiF,MAAKmsB,afq6DZ7qB,IAAK,kBACLvG,MAAO,Seh6DK8D,GACZmB,KAAKohB,cAAc1E,YAAY7d,Mfm6D/ByC,IAAK,oBACLvG,MAAO,Sel6DO8D,GACdmB,KAAKohB,cAAcxE,cAAc/d,Mfq6DjCyC,IAAK,0BACLvG,MAAO,Sep6Da8D,EAAI8gB,GACxB3f,KAAKohB,cAAcjB,oBAAoBthB,EAAI8gB,Mfu6D3Cre,IAAK,kBACLvG,MAAO,Wer6DPiF,KAAKohB,cAActE,iBfy6DnBxb,IAAK,eACLvG,MAAO,Wev6DPiF,KAAKohB,cAAclE,cf26DnB5b,IAAK,kBACLvG,MAAO,Se16DKuiB,GACZtd,KAAKohB,cAAc/D,YAAYC,Mf66D/Bhc,IAAK,kBACLvG,MAAO,Se56DKuiB,GACZtd,KAAKohB,cAAcpC,YAAY1B,Mf+6D/Bhc,IAAK,oBACLvG,MAAO,Se76DOoX,EAAMC,EAAKf,GACzBrR,KAAKmhB,SAASiL,WAAWja,EAAMC,EAAKpS,KAAKkhB,OAAO2B,UAAWxR,Mfg7D3D/P,IAAK,kBACLvG,MAAO,Se/6DKoX,EAAMC,EAAKf,GACvBrR,KAAKmhB,SAASkL,mBAAmBla,EAAMC,EAAKpS,KAAKkhB,OAAO2B,UAAWxR,Mfk7DnE/P,IAAK,qBACLvG,MAAO,Sej7DQoX,EAAMC,GACrBpS,KAAKmhB,SAASmL,YAAYna,EAAMC,EAAKpS,KAAKkhB,OAAO2B,cfo7DjDvhB,IAAK,oBACLvG,MAAO,Wel7DPiF,KAAKmhB,SAASoL,uBAAuB,EAAG,EAAGvsB,KAAKsc,MAAOtc,KAAKgiB,Wfs7D5D1gB,IAAK,oBACLvG,MAAO,Wep7DPiF,KAAKmhB,SAASqL,eAAe,EAAG,EAAGxsB,KAAKsc,MAAOtc,KAAKgiB,QACpDhiB,KAAKmhB,SAASoL,uBAAuB,EAAG,EAAGvsB,KAAKsc,MAAOtc,KAAKgiB,Wf47D5D1gB,IAAK,eACLvG,MAAO,Ser7DE4Y,EAAQ8Y,GACjB,GAAI9Y,EAAO+R,UAAW,CAClB,GAAMgH,GAAc1sB,KAAK2sB,qBACrBhb,EAAYgC,EAAOiZ,cACnBjZ,GAAOkZ,mBACPlb,GAAwB+a,GAExB/Y,EAAOmZ,oBACPnb,GAAwB+a,GAG5B/Y,EAAOoZ,cAAa,EAAA7b,EAAAvT,gBAAegU,GACnC,IAAMqb,GAAQrZ,EAAOsZ,cAAgBR,EAAQ,GAC7C9Y,GAAO5T,GAAKitB,EAAQ/vB,KAAKiwB,IAAIvZ,EAAOhC,WACpCgC,EAAO7T,GAAKktB,EAAQ/vB,KAAKkwB,IAAIxZ,EAAOhC,efg8DxCrQ,IAAK,SACLvG,MAAO,Sex7DJ0xB,GAAO,GAAAW,GAAAptB,IACVA,MAAKkiB,QAAQ1I,QAAQ,SAAC7F,GAAayZ,EAAKC,aAAa1Z,EAAQ8Y,KACzDzsB,KAAKqiB,mBAAqBriB,KAAKstB,wBAA2B,GAC1DttB,KAAK2lB,iBAAiBnM,QAAQ,SAAC7F,GAC3BA,EAAO4Z,gBAGfvtB,KAAKqiB,qBAEDriB,KAAKwmB,UACLxmB,KAAKkiB,QAAQsL,QAAQxtB,KAAKkiB,QAAQuL,Ufq8DtCnsB,IAAK,OACLvG,MAAO,We97DPiF,KAAK0tB,oBACL1tB,KAAKkiB,QAAQ1I,QAAQxZ,KAAK2tB,WAAY3tB,MACtCA,KAAKkiB,QAAQ1I,QAAQxZ,KAAK4tB,SAAU5tB,Sf28DpCsB,IAAK,MACLvG,MAAO,Sel8DP8yB,EAAWC,GACX,GAAIA,EAAO,CACP,GAAIC,GAAgB9wB,KAAKH,MAAMikB,EAAAxV,QAASyiB,kBACxC1vB,SAAQG,KAAK,kCAAoCsvB,EAAgB,Wf28DrEzsB,IAAK,eACLvG,MAAO,Wen8DPiF,KAAKiuB,SAALlN,EAAAxV,QACAvL,KAAKiuB,SACAC,UAAUluB,KAAKmuB,OAAOpb,KAAK/S,OAC3BouB,QAAQpuB,KAAKquB,KAAKtb,KAAK/S,OACvBsuB,OAAOtuB,KAAKuuB,IAAIxb,KAAK/S,OACrBwuB,sBAAsB,IAAKxuB,KAAKkhB,OAAO6B,UACvC0L,iBAAiBzuB,KAAKkhB,OAAOwN,mBfk8DlCptB,IAAK,aACLvG,MAAO,SenoFOmB,GAEd,MAAe2F,UAAR3F,KfsoFPoF,IAAK,kBACLvG,MAAO,SepoFYmB,GAEnB,MAAe2F,UAAR3F,KfuoFPoF,IAAK,UACLvG,MAAO,SeroFI4Y,GACX,MAAOA,GAAO+R,afwoFdpkB,IAAK,uBACLvG,MAAO,SetoFiB4zB,GAExB,MAA+B,KAAvBA,EAAkB,Of0oFvB9N,MAKL,SAAUpmB,EAAQD,EAASH,GAEjC,YgBntFO,SAASu0B,GAASC,EAAYC,GAQjC,QAASC,GAAeC,EAAS7c,EAAMC,EAAKkK,EAAO0F,EAAQ3Q,GACvD2d,EAAQC,UAAY5d,EACpB2d,EAAQE,SAAS/c,EAAMC,EAAKkK,EAAO0F,GAGvC,QAASmN,GAAgBH,EAAS7c,EAAMC,EAAKkK,EAAO0F,GAChDgN,EAAQI,UAAUjd,EAAMC,EAAKkK,EAAO0F,GAGxC,QAASqN,GAAStN,EAAQzF,EAAO0F,GAC7BD,EAAOzF,MAAQA,EACfyF,EAAOC,OAASA,EAMpB,QAASmE,GAAQ7J,EAAO0F,GACpBqN,EAASR,EAAevS,EAAO0F,GAC/BqN,EAASP,EAAexS,EAAO0F,GAKnC,QAASoK,GAAWja,EAAMC,EAAKkd,EAAMje,GACjC0d,EAAeQ,EAAcpd,EAAMC,EAAKkd,EAAMA,EAAMje,GAGxD,QAASib,GAAYna,EAAMC,EAAKkd,GAC5BH,EAAgBI,EAAcpd,EAAMC,EAAKkd,EAAMA,GAGnD,QAAS9C,GAAera,EAAMC,EAAKkK,EAAO0F,GACtCmN,EAAgBI,EAAcpd,EAAMC,EAAKkK,EAAO0F,GAKpD,QAASqK,GAAmBla,EAAMC,EAAKkd,EAAMje,GACzC0d,EAAeS,EAAiBrd,EAAMC,EAAKkd,EAAMA,EAAMje,GAG3D,QAASoe,GAAoBtd,EAAMC,EAAKkd,GACpCH,EAAgBK,EAAiBrd,EAAMC,EAAKkd,EAAMA,GAGtD,QAAS/C,GAAuBpa,EAAMC,EAAKkK,EAAO0F,GAC9CmN,EAAgBK,EAAiBrd,EAAMC,EAAKkK,EAAO0F,GArDvD,GAAMuN,GAAeV,EAAWa,WAAW,MACrCF,EAAkBV,EAAcY,WAAW,KAuDjD,QACItD,aACAE,cACAE,iBACAH,qBACAoD,sBACAlD,yBACApG,WhBqpFR/qB,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,IAEXP,EgBztFgBo0B,YhB+xFV,SAAUn0B,EAAQD,EAASH,GAEjC,YAUA,SAASoQ,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAItL,WAAU,qCAEhH,QAASuU,GAA2BC,EAAMjZ,GAAQ,IAAKiZ,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOlZ,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BiZ,EAAPjZ,EAElO,QAASmZ,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI5U,WAAU,iEAAoE4U,GAAeD,GAASnY,UAAYT,OAAO8Y,OAAOD,GAAcA,EAAWpY,WAAaoW,aAAelX,MAAOiZ,EAAUzY,YAAY,EAAO2P,UAAU,EAAM5P,cAAc,KAAe2Y,IAAY7Y,OAAO+Y,eAAiB/Y,OAAO+Y,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,GAXje7Y,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,IAEXP,EAAQm1B,YAAc9tB,MiBvyFtB,IAAA+tB,GAAAv1B,EAAA,GjBizFkBG,GiB/yFLm1B,YjB+yF2B,SAAUE,GiB9yF9C,QAAAF,GAAYla,GAAM,MAAAhL,GAAAzK,KAAA2vB,GAAA/b,EAAA5T,MAAA2vB,EAAAvb,WAAAhZ,OAAAuZ,eAAAgb,IAAA/0B,KAAAoF,KACRyV,EAAM,SjBszFhB,MARA1B,GAAU4b,EAAaE,GAQhBF,GACTC,EAAUla,UAIN,SAAUjb,EAAQD,EAASH,GAEjC,YAUA,SAASoQ,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAItL,WAAU,qCAEhH,QAASuU,GAA2BC,EAAMjZ,GAAQ,IAAKiZ,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOlZ,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BiZ,EAAPjZ,EAElO,QAASmZ,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI5U,WAAU,iEAAoE4U,GAAeD,GAASnY,UAAYT,OAAO8Y,OAAOD,GAAcA,EAAWpY,WAAaoW,aAAelX,MAAOiZ,EAAUzY,YAAY,EAAO2P,UAAU,EAAM5P,cAAc,KAAe2Y,IAAY7Y,OAAO+Y,eAAiB/Y,OAAO+Y,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,GAXje7Y,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,IAEXP,EAAQs1B,eAAiBjuB,MkBv0FzB,IAAA+tB,GAAAv1B,EAAA,GlBi1FqBG,GkB/0FRs1B,elB+0FiC,SAAUD,GkB90FpD,QAAAC,GAAYra,GAAM,MAAAhL,GAAAzK,KAAA8vB,GAAAlc,EAAA5T,MAAA8vB,EAAA1b,WAAAhZ,OAAAuZ,eAAAmb,IAAAl1B,KAAAoF,KACRyV,EAAM,YlBs1FhB,MARA1B,GAAU+b,EAAgBD,GAQnBC,GACTF,EAAUla,UAIN,SAAUjb,EAAQD,EAASH,GAEjC,YmB71FO,SAAS01B,GAAkBC,GAgC9B,QAASC,GAAgBC,EAAMnV,GAC3B,KAAK,EAAA1P,EAAA7O,UAAS0zB,EAAK5uB,KACf,KAAM,IAAIjC,WAAJ,4BAA0C0b,EAA1C,qCAAoFmV,EAAK5uB,IAAzF,KACH,MAAkBO,SAAdquB,EAAKxV,MAAwBwV,EAAKxV,KAAK7e,oBAAVuZ,GAAAxK,YACpC,KAAM,IAAIvL,WAAJ,eAA6B6wB,EAAK5uB,IAAlC,iDAAsF4uB,EAAKxV,KAA3F,KACH,IAAqB7Y,SAAjBquB,EAAK3kB,QACZ,KAAM,IAAIlM,WAAJ,eAA6B6wB,EAAK5uB,IAAlC,0BAEV,OAAO,IAAK4uB,GAAKxV,KAAMwV,GAG3B,QAASC,GAAiB7uB,GACtB,MAA8BO,UAAvBuuB,EAAc9uB,GAGzB,QAAS8uB,GAAc9uB,GACnB,MAAO+uB,GAAY7K,KAAK,SAAC0K,GAAD,MAAUA,GAAK5uB,MAAQA,IAGnD,QAASgvB,GAAoBhvB,GACzB,MAAOivB,GAA+B/K,KAAK,SAACgL,GAAD,MAAyBA,GAAoBxW,WAAW1Y,MAAQA,IAG/G,QAASmvB,KACL,MAAOJ,GAAY3vB,IAAI,SAACsZ,GAAD,MAAgB,IAAA0W,GAAAC,oBAAwB3W,EAAY4W,EAAS5W,EAAW1Y,QAGnG,QAASuvB,KACL,MAAOR,GAAY3vB,IAAI,SAACsZ,GAAD,MAAgB,IAAA0W,GAAAC,oBAAwB3W,EAAY8W,EAAU9W,EAAW1Y,QAGpG,QAASyvB,KACL,MAAOV,GAAY3vB,IAAI,SAACsZ,GAAD,MAAgB,IAAA0W,GAAAC,oBAAwB3W,EAAYA,EAAWgX,qBAG1F,QAASC,GAAOf,GACZ,MAAOA,GAAK5uB,IAGhB,QAAS4vB,GAAuB5vB,EAAKvG,GACjC,MAAOq1B,GAAc9uB,GAAKkU,aAAaza,GAG3C,QAASo2B,GAAkB7vB,GACvB8vB,EAAI9vB,EAAK0vB,EAAgB1vB,IAG7B,QAAS0vB,GAAgB1vB,GACrB,IAAK6uB,EAAiB7uB,GAClB,KAAM,IAAI+vB,OAAJ,eAAyB/vB,EAAzB,oBAEV,OAAO8uB,GAAc9uB,GAAK0vB,kBAG9B,QAASM,GAAUhwB,GACf,MAAOiwB,GAAsBjwB,EAGjC,QAAS8vB,GAAI9vB,EAAKvG,GACd,IAAKo1B,EAAiB7uB,GAClB,KAAM,IAAI+vB,OAAJ,oCAA8C/vB,EAA9C,KAEV,IAAM4uB,GAAOE,EAAc9uB,EAC3B,IAAK4vB,EAAuB5vB,EAAKvG,GAE1B,EACH,EAAAsQ,EAAAjN,KAAA,uBAA2BkD,EAA3B,SAAuCvG,EAAvC,MACAu1B,EAAoBhvB,GAAKvG,MAAQA,CACjC,KACIy2B,aAAaC,QAAQH,EAAUhwB,GAAM4uB,EAAKje,YAAYyf,UAAU32B,IAClE,MAAM42B,GAEJ,MADA,EAAAtmB,EAAA3M,UAAA,wCAAiD4C,EAAjD,uDAA2GqwB,GACrGA,OARVzB,GAAK0B,aAAa72B,GAa1B,QAAS61B,GAAStvB,GACd,IAAK6uB,EAAiB7uB,GAClB,KAAM,IAAI+vB,OAAJ,oCAA8C/vB,EAA9C,KAEV,IAAM4uB,GAAOE,EAAc9uB,GACvBuwB,QACJ,KACIA,EAAaL,aAAaM,QAAQR,EAAUhwB,IAC9C,MAAMqwB,GAEJ,MADA,EAAAtmB,EAAA3M,UAAA,8CAAuD4C,EAAvD,yDAAmHqwB,GAC7GA,EAEV,GAAmB,OAAfE,EAEA,MAAO,KACJ,IAAIX,EAAuB5vB,EAAK4uB,EAAKje,YAAY8f,MAAMF,IAC1D,MAAO3B,GAAKje,YAAY8f,MAAMF,EAE9B,MAAM,IAAIxyB,WAAJ,IAAkBwyB,EAAlB,0DAAsF3B,EAAtF,MAId,QAASY,GAAUxvB,GACf,IAAK6uB,EAAiB7uB,GAClB,KAAM,IAAI+vB,OAAJ,oCAA8C/vB,EAA9C,KAEV,OAAOgvB,GAAoBhvB,GAAKvG,MAGpC,QAASi3B,MACL,EAAA3mB,EAAAjN,KAAI,iCACJiyB,EAAY3vB,IAAIuwB,GAAQzX,QAAQ2X,IAChC,EAAA9lB,EAAAjN,KAAI,SA5IR,GAAMmzB,GAAsB,aAG5B,EAAAlmB,EAAAjN,KAAI,6BACJ,IAAMiyB,GAuBN,SAA0BL,GACtB,MAAOA,GAAgBtvB,IAAIuvB,IAxBMD,IACrC,EAAA3kB,EAAAjN,KAAI,QAGJ,IAAImyB,GAAiCQ,GAuIrC,OAtIAR,GAA+B/W,QAAQ,SAACgX,GACpC,GAAMlvB,GAAMkvB,EAAoBxW,WAAW1Y,GAC3C,KACI,GAAMuwB,GAAajB,EAAStvB,GACtB2wB,EAAezB,EAAoBxW,WAAWgX,iBACjC,QAAfa,IACA,EAAAxmB,EAAAjN,KAAA,wBAA4B6zB,EAA5B,qBAA6D3wB,EAA7D,qCAEJkvB,EAAoBz1B,MAAuB,OAAf82B,EAAsBA,EAAaI,EACjE,MAAMN,GACAA,YAAatyB,YACb,EAAAgM,EAAA7M,YAAA,wBAAmCyzB,aAAnC,qBAAoE3wB,EAApE,iEAEA,EAAA+J,EAAA7M,YAAA,wBAAmCyzB,aAAnC,qBAAoE3wB,EAApE,iEA0HR4vB,yBACAE,MACAR,WACAE,YACAK,oBACAH,kBACAP,oCACAI,qCACAE,qCACAiB,mBnBssFR52B,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,IAEXP,EmBn2FgBu1B,mBAJhB,IAAA1kB,GAAAhR,EAAA,GACA+a,EAAA/a,EAAA,GACAq2B,EAAAr2B,EAAA,KnB2hGM,SAAUI,EAAQD,EAASH,GAEjC,YAiCA,SAAS6b,GAAuBha,GAAO,MAAOA,IAAOA,EAAIR,WAAaQ,GAAQqP,QAASrP,GoBhkGvF,GAAAgV,GAAA7W,EAAA,GAEA63B,EAAA73B,EAAA,IACA2mB,EAAA3mB,EAAA,GACA83B,EAAA93B,EAAA,IACA+3B,EAAA/3B,EAAA,IAEAkmB,EAAAlmB,EAAA,GACAqmB,EAAArmB,EAAA,GACAg4B,EAAAh4B,EAAA,IAEAi4B,EAAAj4B,EAAA,IACAk4B,EAAAl4B,EAAA,IACA6d,EAAA7d,EAAA,GAEAsmB,EAAAtmB,EAAA,GpB2iGIimB,EAAiBpK,EAAuByK,GoB1iG5CC,EAAAvmB,EAAA,GpB8iGIkc,EAAYL,EAAuB0K,IoB5iGtB,WA+Ib,QAAS4R,GAAalxB,GAClB,MAAO4f,IAAOhgB,KAAKuxB,QAAQjxB,SAASF,GAGxC,QAASoxB,GAAUpxB,GACf,MAAO4f,IAAOhgB,KAAKsnB,KAAKhnB,SAASF,GAGrC,QAASqxB,GAAqBrxB,GAC1B,OAASsxB,GAAapxB,SAASF,GAGnC,QAAS6a,GAAeC,GACpB,GAAIyW,GAAKC,YACL,KAAM,IAAIzB,OAAM,uDAEhB,IAAM0B,GAAiBC,GAAiB5W,EAClC6W,EAAkBC,GAAkB,EAAE9W,CAC5CyW,IAAK1M,QAAQ4M,EAAgBE,GAC7B7R,GAAcjF,eAAeC,GAIrC,QAAS+W,GAAY3T,GACjB,GAAIpD,GAAU,CACD,aAAToD,EACApD,EAAU,EACM,SAAToD,IACPpD,EAAUgX,GAEd,KACIjX,EAAeC,GACjB,MAAMuV,IACJ,EAAAzgB,EAAAxS,UAASizB,IAYjB,QAAS0B,KACL,OACIC,YAAapS,GAAOoS,YACpBC,YAAarS,GAAOqS,YACpBC,gBAAiBtS,GAAOsS,gBACxBC,gBAAiBvS,GAAOuS,iBAIhC,QAASC,KACL,GAAM7Q,GAAY3B,GAAO2B,UACnBrR,EAAa6hB,IACbM,IAKN,OAJAA,GAAiBphB,kBAAoBf,EAAW8hB,YAAczQ,EAC9D8Q,EAAiBnhB,kBAAoBhB,EAAW+hB,YAAc1Q,EAC9D8Q,EAAiBlhB,sBAAwBxV,KAAKQ,IAAI,EAAG+T,EAAWgiB,gBAAkB3Q,GAClF8Q,EAAiBjhB,sBAAwBzV,KAAKQ,IAAI,EAAG+T,EAAWiiB,gBAAkB5Q,GAC3E8Q,EAGX,QAASC,GAAkB/0B,GACvB,MAAOqiB,IAAO2S,eAAerO,KAAK,SAAAsO,GAAA,MAAiBA,GAAcj1B,KAAOA,IAG5E,QAASi1B,GAAcj1B,GACnB,GAAMk1B,GAAaH,EAAkB/0B,EACrC,IAAmBgD,SAAfkyB,EACA,KAAM,IAAI10B,WAAJ,sCAAoDR,EAApD,IAEV,OAAO,IAAAmiB,GAAA/P,OAAW8iB,EAAWl1B,GACXk1B,EAAW94B,KACX84B,EAAW1iB,MACX0iB,EAAWC,KACXD,EAAWE,KACXP,KAGtB,QAASQ,KACL,GAAMC,GAAmBtB,GAAKuB,aAAa/zB,KAAKiS,GAC5CsH,QACJ,QAAQya,GAAkBvD,UAAUva,EAAAhL,QAAQyE,kBACxC,IAAKuG,GAAAhL,QAAQ2E,mDACT0J,EAAWua,EAAmB5d,EAAAhL,QAAQgE,cAAgBgH,EAAAhL,QAAQiE,cAC9D,MACJ,KAAK+G,GAAAhL,QAAQ4E,gCACTyJ,EAAWrD,EAAAhL,QAAQgE,aACnB,MACJ,SACIqK,EAAWrD,EAAAhL,QAAQiE,gBAE3B,EAAA0B,EAAA9S,KAAA,8BAAkCwb,EAAlC,KACAwH,GAAczH,kBAAkBC,GAGpC,QAAS0a,KACL,GAAMC,GAAuB1B,GAAKnO,oBAC9B6P,GAAuB,IACvBtX,IACAiX,IACArB,GAAK2B,QAAiC,IAAzBD,EAA6BrC,EAAArR,KAAKQ,SAAW6Q,EAAArR,KAAKS,aAC/DuR,GAAKhL,SAIb,QAASvV,GAAeqB,GACpB,MAAOA,GAAO8gB,qBAGlB,QAASC,KACD7B,GAAKuB,aAAa/zB,KAAK,SAACsT,GAAD,MAAYA,GAAOghB,OAAOzjB,EAAApP,IAAIM,QACrDgf,GAAc/D,YAAY6D,GAAO/B,SAASyV,MAE1CxT,GAAcpC,YAAYkC,GAAO/B,SAASyV,MAG1C/B,GAAKuB,aAAa/zB,KAAK,SAACsT,GAAD,MAAYA,GAAOghB,OAAOzjB,EAAApP,IAAIO,OACrD+e,GAAc/D,YAAY6D,GAAO/B,SAAS0V,KAE1CzT,GAAcpC,YAAYkC,GAAO/B,SAAS0V,KAG1ChC,GAAKuB,aAAa/zB,KAAKiS,GACvB8O,GAAc/D,YAAY6D,GAAO/B,SAAS2V,OAE1C1T,GAAcpC,YAAYkC,GAAO/B,SAAS2V,OAIlD,QAASC,GAAUl2B,GACfg0B,GAAKkC,UAAUjB,EAAcj1B,IAC7B61B,IACAzhB,aAAa+hB,IACb5T,GAAcpC,YAAYkC,GAAO/B,SAAS8V,MAC1ChiB,aAAaiiB,IACbA,GAAmBriB,WAAW,WAC1BuO,GAAc/D,YAAY6D,GAAO/B,SAASsT,UAC3CvR,GAAOgH,WAGd,QAASiN,GAAat2B,GAClBg0B,GAAKsC,aAAat2B,GAClB61B,IACAzhB,aAAaiiB,IACqB,IAA9BrC,GAAKnO,qBACLtD,GAAcpC,YAAYkC,GAAO/B,SAASsT,SAE1CyC,GAAmBriB,WAAW,WAC1BuO,GAAc/D,YAAY6D,GAAO/B,SAASsT,UAC3CvR,GAAOgH,WAIlB,QAASkN,GAAwBrB,EAAYsB,GACzC,MAAOA,KAAetB,EAAWC,MAASD,EAAWC,eAAgB7zB,QAAS4zB,EAAWC,KAAKxyB,SAAS6zB,GAG3G,QAASC,GAAyBvB,EAAYsB,GAC1C,MAAOA,KAAetB,EAAWE,MAASF,EAAWE,eAAgB9zB,QAAS4zB,EAAWE,KAAKzyB,SAAS6zB,GAG3G,QAASE,GAAkBxB,EAAYsB,GAC/BD,EAAwBrB,EAAYsB,GACpCN,EAAUhB,EAAWl1B,IACdy2B,EAAyBvB,EAAYsB,IAC5CF,EAAapB,EAAWl1B,IAIhC,QAAS22B,GAAcxsB,GACnBA,EAAMysB,kBACNzsB,EAAM+S,iBAGV,QAAS2Z,GAAkBL,GACvBnU,GAAO2S,eAAera,QAAQ,SAACua,GAC3BwB,EAAkBxB,EAAYsB,KAItC,QAASM,GAAoB10B,GACzBigB,GAAO2S,eAAera,QAAQ,SAACua,GAC3BwB,EAAkBxB,EAAY7iB,EAAAvQ,MAAMyH,KAAKnH,MAIjD,QAAS20B,GAAW5sB,GAChB,GAAMyL,GAAWoe,GAAKC,YAAc+C,EACAzU,GAAcvD,oBAAsBiY,EACAC,CACxE3U,IAAc/F,WAAWrS,EAAOyL,GAGpC,QAASuhB,GAAahtB,GAClB,GAAMyL,GAAWoe,GAAKC,YAAcmD,EACA7U,GAAcvD,oBAAsBqY,EACAC,CACxE/U,IAAcpF,aAAahT,EAAOyL,GAGtC,QAAS2hB,GAAcptB,GACf6pB,GAAKC,aACLuD,IAIR,QAASN,GAAgB/sB,GACjB2pB,EAAqB3pB,EAAMF,UAC3BE,EAAM+S,gBAEV,IAAMsZ,GAAarsB,EAAMF,OACrBusB,KAAeiB,GACfC,IACO/D,EAAa6C,GACpBf,IAEAoB,EAAkBL,GAI1B,QAASc,GAAkBntB,GACvBA,EAAM+S,iBACN4Z,EAAoB3sB,EAAM/H,QAG9B,QAASs1B,KACLpsB,OAAOqsB,SAASD,SAGpB,QAASE,KACL5D,GAAKrK,OACLpH,GAAcrE,WACd8V,GAAO6D,KAGX,QAASb,GAAe7sB,GAChB2pB,EAAqB3pB,EAAMF,UAC3BE,EAAM+S,gBAEV,IAAMsZ,GAAarsB,EAAMF,OACrB0pB,GAAa6C,GACTxC,GAAK8D,yBACLF,IAEA5D,GAAK+D,oBAEFlE,EAAU2C,IAAexC,GAAKgE,sBACjCxC,GAAkBvD,UAAUva,EAAAhL,QAAQqF,0BAA2B,GAAUwQ,GAAc9F,kBAGvFmb,IAFArV,GAAcnF,WAAWiF,GAAO4V,QAAQC,mBAIrC1B,IAAeiB,KAClBjC,GAAkBvD,UAAUva,EAAAhL,QAAQsF,4BAA6B,EAC7DgiB,GAAKmE,4CAA+C5V,GAAc9F,mBAClE8F,GAAcnF,WAAWiF,GAAO4V,QAAQG,oBAAqBV,GAGjEA,KAKZ,QAASN,GAAiBjtB,GACtBA,EAAM+S,iBAGV,QAASsa,GAAkBrtB,GAEvB,GAAMsU,GAAUgD,EAAA/U,QAAKI,WAErB,OADA3C,GAAMkuB,YAAc5Z,EACbA,EAGX,QAASwY,GAAmB9sB,GACxB,GAAMqsB,GAAarsB,EAAMF,OACrB4pB,GAAU2C,GACVzX,IACOyX,IAAeiB,IACtBC,IAIR,QAASL,GAAqBltB,IAI9B,QAASyU,KACLxK,aAAa+hB,IACb/hB,aAAaiiB,GACb,KACI9T,GAActD,mBAAmBuW,GAAkB5D,qCACrD,MAAMkB,IACJ,EAAAzgB,EAAA1S,YAAW,6EACX4iB,GAActD,mBAAmBuW,GAAkBxD,sCACnDsG,EAA0BxF,GAE9BvQ,GAAc3D,eAGlB,QAASG,KACLwD,GAAc7C,oBAAoB/E,QAAQ,SAAC4d,GACvC,IACI/C,GAAkBjD,IAAIgG,EAAW91B,IAAK81B,EAAWr8B,OACnD,MAAM42B,IACJ,EAAAzgB,EAAA1S,YAAA,2BAAsC44B,EAAW91B,IAAjD,sBACA61B,EAA0BxF,MAGlC0F,IACAjW,GAAcxD,eAGlB,QAASyZ,KACL,IAEIlE,EAAYkB,GAAkBzD,SAASra,EAAAhL,QAAQ6E,oBAE/CgR,GAAc7B,eAAe8U,GAAkBzD,SAASra,EAAAhL,QAAQiF,iBAEhEqiB,GAAKyE,oBAAoBjD,GAAkBzD,SAASra,EAAAhL,QAAQuF,6BAE5DsQ,GAAc5E,iBAAiB6X,GAAkBzD,SAASra,EAAAhL,QAAQwF,gCACpE,MAAM4gB,IACJ,EAAAzgB,EAAA1S,YAAW,6EACX20B,EAAYkB,GAAkBvD,UAAUva,EAAAhL,QAAQ6E,oBAChDgR,GAAc7B,eAAe8U,GAAkBvD,UAAUva,EAAAhL,QAAQiF,iBACjEqiB,GAAKyE,oBAAoBjD,GAAkBvD,UAAUva,EAAAhL,QAAQuF,6BAC7DsQ,GAAc5E,iBAAiB6X,GAAkBvD,UAAUva,EAAAhL,QAAQwF,gCACnEomB,EAA0BxF,IAIlC,QAASwF,GAA0Bx4B,GAC3BA,EAAM1D,OAASsb,EAAAhL,QAAQiD,oBACvB4S,GAAc/D,YAAY6D,GAAO/B,SAASoY,2BAE1CnW,GAAc/D,YAAY6D,GAAO/B,SAASqY,iCAIlD,QAASva,KACLhK,aAAa+hB,IACb/hB,aAAaiiB,IACb9T,GAAcnE,gBAGlB,QAASwa,MACL,EAAAvmB,EAAA1S,YAAW,2BACX0S,EAAA5Q,SAAS4I,QACTgI,EAAArQ,MAAMqI,QAGV,QAASwuB,KACL,GAAMC,IAAqB,EAAAzmB,EAAAtS,MAAK2X,EAAAhL,QAAQqE,wBACpC+nB,aAA8Bz4B,eAC9By4B,EAAmBlf,iBAAiB,YAAa+c,GACjDmC,EAAmBlf,iBAAiB,QAASgF,IAIrD,QAASma,KACL,GAAMC,IAAqB,EAAA3mB,EAAAtS,MAAK2X,EAAAhL,QAAQsE,wBACpCgoB,aAA8B34B,eAC9B24B,EAAmBpf,iBAAiB,YAAa+c,GACjDqC,EAAmBpf,iBAAiB,QAASmF,IA6BrD,QAAS8Y,MACL,MAAO,IAAAxE,GAAArR,KAASK,IAAQ,EAAAiR,EAAAvD,UAASkJ,GAAaC,IAAiB3W,IA5hBnE,GAAM0W,KAAc,EAAA5mB,EAAAtS,MAAK,eACnBm5B,IAAiB,EAAA7mB,EAAAtS,MAAK,kBACtBo0B,GAAiB8E,GAAYxb,MAC7B4W,GAAkB4E,GAAY9V,OAC9BoR,GAAyB,EACzBkD,GAAaplB,EAAApP,IAAIgF,GACjBkxB,GAAiB9mB,EAAApP,IAAIsF,IACrB6wB,GAAe/mB,EAAApP,IAAIuF,IACnBurB,IAAgBoF,GAAgBC,IAEhC/W,GAAS9lB,OAAO2G,QAClBghB,SAAU,IACV2L,aAAc,IACd3M,OAAQ+V,GACRjV,UAAW,EACXjQ,MAAO,GACPoQ,cAAe,KACfqC,eAAgBpoB,KAAKY,GAAG,EACxBynB,cAAgBroB,KAAKY,GAAG,EACxBqlB,YAAa,IACbd,kBAAkB,EAClB8H,iBAAkB,GAClBC,gBAAiB,IACjBqJ,gBAAiB,GACjBC,gBAAiB,IACjBH,YAAa,EACbC,YAAa,EACbrL,UAAW,IACXhnB,MACIuxB,SAAYvhB,EAAApP,IAAIW,MAAOyO,EAAApP,IAAII,OAC3BsmB,MAAYtX,EAAApP,IAAIU,SAEpB2c,SAAU/jB,OAAO2G,QACbkzB,KAAS,GAAA3C,GAAA3C,YAAgBrP,EAAA/U,QAAKO,WAC9B2mB,QAAS,GAAAH,GAAA3C,YAAgBrP,EAAA/U,QAAKQ,cAC9Buc,KAAS,GAAAgK,GAAA3C,YAAgBrP,EAAA/U,QAAKS,WAC9Bwc,KAAS,GAAA8J,GAAA3C,YAAgBrP,EAAA/U,QAAKU,WAC9B4oB,IAAS,GAAAtC,GAAAzC,eAAmBxP,EAAA/U,QAAKW,UACjC0oB,KAAS,GAAArC,GAAAzC,eAAmBxP,EAAA/U,QAAKY,WACjC2oB,MAAS,GAAAvC,GAAAzC,eAAmBxP,EAAA/U,QAAKa,YACjCmrB,0BAA2B,GAAAhF,GAAAzC,eAAmBxP,EAAA/U,QAAKc,gCACnDmrB,gCAAiC,GAAAjF,GAAAzC,eAAmBxP,EAAA/U,QAAKe,wCAE7DwqB,QAAS17B,OAAO2G,QACZg1B,kBAAmB,GAAA7e,GAAA7D,mBAAuBiM,EAAA/U,QAAKuB,wBAAyB2pB,GACxEQ,oBAAqB,GAAA/e,GAAA7D,mBAAuBiM,EAAA/U,QAAKwB,0BAA2BwpB,KAEhF1C,eAAgBz4B,OAAO2G,SACjBlD,GAAI,EAAG5D,KAAM,MAAUoW,MAAO,UAAW2iB,KAAM9iB,EAAApP,IAAI,GAAoCmyB,KAAM/iB,EAAApP,IAAIgD,IACjGjG,GAAI,EAAG5D,KAAM,SAAUoW,MAAO,UAAW2iB,MAAQ9iB,EAAApP,IAAIM,KAAM8O,EAAApP,IAAIyD,GAAwB0uB,MAAQ/iB,EAAApP,IAAIO,IAAK6O,EAAApP,IAAIuD,KAC5GxG,GAAI,EAAG5D,KAAM,SAAUoW,MAAO,UAAW2iB,KAAM9iB,EAAApP,IAAI4C,EAAoCuvB,KAAM/iB,EAAApP,IAAI4F,QACjG7I,GAAI,EAAG5D,KAAM,QAAUoW,MAAO,UAAW2iB,KAAM9iB,EAAApP,IAAIgB,WAAoCmxB,KAAM/iB,EAAApP,IAAImB,aACjGpE,GAAI,EAAG5D,KAAM,OAAUoW,MAAO,UAAW2iB,MAAQ9iB,EAAApP,IAAI2E,OAAQyK,EAAApP,IAAIc,IAAKsO,EAAApP,IAAIa,WAAasxB,MAAQ/iB,EAAApP,IAAIuE,SAAU6K,EAAApP,IAAIY,WACjH7D,GAAI,EAAG5D,KAAM,OAAUoW,MAAO,UAAW2iB,KAAM9iB,EAAAvQ,MAAM2H,KAAkC2rB,KAAM/iB,EAAAvQ,MAAM6H,WAIvG6nB,GAAcj1B,OAAO2G,SAEnB2Y,yBACApZ,IAAKiV,EAAAhL,QAAQuF,2BACbtF,MAAO8U,EAAA/U,QAAKwC,6BACZtC,YAAa6U,EAAA/U,QAAKyC,yCAClBzC,SAAS,IAGTmP,yBACApZ,IAAKiV,EAAAhL,QAAQqF,sBACbpF,MAAO8U,EAAA/U,QAAK0C,wBACZxC,YAAa6U,EAAA/U,QAAK2C,oCAClB3C,SAAS,IAGTmP,yBACApZ,IAAKiV,EAAAhL,QAAQsF,wBACbrF,MAAO8U,EAAA/U,QAAK4C,0BACZ1C,YAAa6U,EAAA/U,QAAK6C,sCAClB7C,SAAS,IAGTmP,yBACApZ,IAAKiV,EAAAhL,QAAQwF,8BACbvF,MAAO8U,EAAA/U,QAAK8C,gCACZ5C,YAAa6U,EAAA/U,QAAK+C,4CAClB/C,SAAS,IAGTmP,6BACApZ,IAAKiV,EAAAhL,QAAQyE,gBACbxE,MAAO8U,EAAA/U,QAAKyB,kBACZvB,YAAa6U,EAAA/U,QAAK0B,8BAClBqI,QACIiB,EAAAhL,QAAQ0E,iCACRsG,EAAAhL,QAAQ2E,mDACRqG,EAAAhL,QAAQ4E,iCAEZoF,QACI+K,EAAA/U,QAAK2B,iCACLoT,EAAA/U,QAAK4B,mDACLmT,EAAA/U,QAAK6B,iCAET7B,QAASgL,EAAAhL,QAAQ2E,qDAGjBwK,6BACApZ,IAAKiV,EAAAhL,QAAQ6E,kBACb5E,MAAO8U,EAAA/U,QAAK8B,oBACZ5B,YAAa6U,EAAA/U,QAAK+B,gCAClBgI,QACIiB,EAAAhL,QAAQ8E,yBACRkG,EAAAhL,QAAQ+E,4BACRiG,EAAAhL,QAAQgF,yBAEZgF,QACI+K,EAAA/U,QAAKgC,yBACL+S,EAAA/U,QAAKiC,4BACL8S,EAAA/U,QAAKkC,yBAETlC,QAASgL,EAAAhL,QAAQgF,0BAGjBmK,6BACApZ,IAAKiV,EAAAhL,QAAQiF,eACbhF,MAAO8U,EAAA/U,QAAKmC,iBACZjC,YAAa6U,EAAA/U,QAAKoC,6BAClB2H,QACIiB,EAAAhL,QAAQkF,qBACR8F,EAAAhL,QAAQmF,+BACR6F,EAAAhL,QAAQoF,uBAEZ4E,QACI+K,EAAA/U,QAAKqC,qBACL0S,EAAA/U,QAAKsC,+BACLyS,EAAA/U,QAAKuC,uBAETvC,QAASgL,EAAAhL,QAAQkF,wBAInB4jB,GAAoB,GAAAhC,GAAAtC,kBAAsBM,KAuXhD,YACI,EAAAnf,EAAA9S,KAAI,8BAGJs5B,IACAE,IAGA94B,SAAS2Z,iBAAiB,UAAWmd,GACrC92B,SAAS2Z,iBAAiB,YAAaud,GACvCl3B,SAAS2Z,iBAAiB,cAAe+c,GACzCrrB,OAAOsO,iBAAiB,eAAgB2d,GACxCjsB,OAAOsO,iBAAiB,OAAQgf,GAGhC34B,SAAS2Z,iBAAiB,UAAWvH,EAAA5Q,SAASyI,UAAUgK,KAAnB7B,EAAA5Q,WACrCxB,SAAS2Z,iBAAiB,QAASvH,EAAA5Q,SAAS2I,QAAQ8J,KAAjB7B,EAAA5Q,WACnCxB,SAAS2Z,iBAAiB,YAAavH,EAAArQ,MAAMuI,YAAY2J,KAAlB7B,EAAArQ,QACvC/B,SAAS2Z,iBAAiB,UAAWvH,EAAArQ,MAAMwI,UAAU0J,KAAhB7B,EAAArQ,SAErC,EAAAqQ,EAAA9S,KAAI,WASR,IAAMgjB,KAAgB,EAAAgR,EAAAjc,eAAc+K,IAChC2R,GAAO6D,KAEPxB,UACAF,GAAgBniB,WAAW,WAC3BuO,GAAc/D,YAAY6D,GAAO/B,SAAS8V,OAC3C/T,GAAOgH,UAEVmP,MAGIa,UAAW,iBAAMhX,KACjBiX,QAAS,iBAAMtF,KACfkC,UAAW,SAACqD,GACR,GAAMzkB,GAASqN,EAAA/P,OAAO8V,SAASqR,GAAcA,EAAa,GAAApX,GAAA/P,OAAWmnB,EACrEvF,IAAKkC,UAAUphB,SpBihGrB,SAAUlZ,EAAQD,EAASH,GAEjC,YASA,SAASoQ,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAItL,WAAU,qCANhHjE,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,GAGX,IAAI8P,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAItQ,GAAI,EAAGA,EAAIsQ,EAAMtO,OAAQhC,IAAK,CAAE,GAAIuQ,GAAaD,EAAMtQ,EAAIuQ,GAAW1P,WAAa0P,EAAW1P,aAAc,EAAO0P,EAAW3P,cAAe,EAAU,SAAW2P,KAAYA,EAAWC,UAAW,GAAM9P,OAAOC,eAAe0P,EAAQE,EAAW3J,IAAK2J,IAAiB,MAAO,UAAUN,EAAaQ,EAAYC,GAAiJ,MAA9HD,IAAYL,EAAiBH,EAAY9O,UAAWsP,GAAiBC,GAAaN,EAAiBH,EAAaS,GAAqBT,KAIphBnQ,GqBhmHCiuB,MrBgmHe,WqB/lHxB,QAAAA,GAAYvG,GAASzX,EAAAzK,KAAAyoB,GAEjBzoB,KAAK0Z,WrB2nHT,MAtBA7O,GAAa4d,IACTnnB,IAAK,MACLvG,MAAO,SqBpmHP4Y,GACA3T,KAAK0Z,QAAQwC,KAAKvI,MrBumHlBrS,IAAK,qBACLvG,MAAO,SqBrmHQ8D,GACf,IAAK,GAAInE,GAAI,EAAGA,EAAIsF,KAAK0Z,QAAQhd,OAAQhC,IACrC,GAAIsF,KAAK0Z,QAAQhf,GAAG+qB,MAAM5mB,GACtB,MAAOnE,EAGf,OAAOsF,MAAK0Z,QAAQhd,UrBwmHpB4E,IAAK,aACLvG,MAAO,WqBrmHP,MAAOiF,MAAK0Z,YrB0mHT+O,MAIH,CAEF,SAAUhuB,EAAQD,EAASH,GAEjC,YsBroHO,SAAS0X,KAAQ,GAAI3U,MAAKC,EAAE,CAAE2C,MAAKq4B,UAAU,WAAW,MAAOj7B,GAAEV,OAAOW,GAAG2C,KAAKs4B,QAAQ,SAAS59B,GAAG,MAAO0C,GAAEmN,QAAQ7P,MAAM,GAAGsF,KAAK8qB,QAAQ,WAAW,MAAO,KAAI1tB,EAAEV,QAAQsD,KAAK0T,QAAQ,SAASrW,GAAGD,EAAE8e,KAAK7e,IAAI2C,KAAKgrB,QAAQ,WAAW,GAAG,IAAI5tB,EAAEV,OAAO,CAAC,GAAI5B,GAAEsC,EAAEC,EAAuC,OAApC,KAAIA,GAAGD,EAAEV,SAASU,EAAEA,EAAEm7B,MAAMl7B,GAAGA,EAAE,GAAUvC,IAAIkF,KAAKw4B,KAAK,WAAW,MAAO,GAAEp7B,EAAEV,OAAOU,EAAEC,GAAG,QtBwoHrWjC,OAAOC,eAAeb,EAAS,cAC7BO,OAAO,IAETP,EsB3oHgBuX,StBkqHV,SAAUtX,EAAQD,EAASH,GAEjC,YACA,IAAIo+B,GAAgCC,CAEpCt9B,QAAOC,eAAeb,EAAS,cAC7BO,OAAO,GAGuB,mBAAX49B,SAAgCA,OAAOC;;;;;;AAS5Dp+B,EAAQ+Q,SuB9qHQ,SAASnO,GAAG,QAASC,GAAED,GAAG,GAAGu0B,EAAEkH,EAAEz7B,EAAE,YAAO07B,EAAEr9B,EAAE4B,GAAU,KAAIrC,GAAGoC,EAAEu0B,EAAEA,EAAEv0B,EAAE27B,EAAE37B,EAAEpC,GAAGoC,EAAE47B,EAAE,MAAMC,EAAE,IAAIC,EAAE,IAAID,EAAED,EAAE57B,EAAE87B,EAAE,GAAGA,IAAIx+B,EAAE,EAAEM,GAAGF,GAAG,GAAGq+B,EAAEr+B,GAAGE,GAAGF,IAAIJ,GAAG,IAAI,CAACG,GAAE,CAAG,OAAMmB,EAAEhB,EAAEF,GAAG0oB,EAAEyV,EAAEp+B,GAAGA,GAAE,EAAGi+B,EAAEr9B,EAAE4B,GAAG,GAAkSy7B,GAA9Rh+B,EAAE,IAAI,GAAGE,EAAE,EAAE22B,EAAE,EAAEsH,EAAE,GAAGD,EAAE,EAAEE,EAAE,EAAEx+B,EAAE,EAAEm+B,EAAE,EAAEO,GAAE,EAAGz+B,GAAE,EAAGE,GAAE,EAAGY,EAAE2B,EAAEi8B,uBAAuB,WAAW,GAAiBh8B,GAAErC,EAAfoC,EAAEk8B,KAAKC,KAAU,OAAO,UAAS5H,GAAG,MAAOt0B,GAAEi8B,KAAKC,MAAMv+B,EAAEiC,KAAKQ,IAAI,EAAE3C,GAAGuC,EAAED,IAAIA,EAAEC,EAAErC,EAAE6X,WAAW,WAAW8e,EAAEt0B,EAAErC,IAAIA,OAAOG,EAAEiC,EAAEo8B,sBAAsBvmB,aAAalX,EAAE,aAAag9B,EAAEh9B,EAAEo9B,EAAEp9B,EAAEC,EAAED,EAAEynB,EAAEznB,CAAIqB,GAAE6wB,UAAUwL,sBAAsB,WAAW,MAAO3+B,IAAG0zB,sBAAsB,SAASpxB,GAAG,MAAOtC,GAAEsC,EAAE4C,MAAM05B,OAAO,WAAW,MAAOT,IAAGU,iBAAiB,WAAW,MAAO,KAAId,GAAGpK,iBAAiB,SAASrxB,GAAG,MAAM,UAAoBA,IAAIA,EAAE,EAAE,GAAG,IAAIA,EAAE4C,KAAKipB,OAAO4P,EAAE,IAAIz7B,EAAE4C,MAAMguB,gBAAgB,WAAW,GAAI5wB,GAAEpC,CAAE,OAAOA,GAAE,EAAEoC,GAAGw8B,SAAS,SAASx8B,GAAG,MAAO27B,GAAE37B,GAAG27B,EAAE/4B,MAAMkuB,UAAU,SAAS9wB,GAAG,MAAO+7B,GAAE/7B,GAAG+7B,EAAEn5B,MAAMouB,QAAQ,SAAShxB,GAAG,MAAOpB,GAAEoB,GAAGpB,EAAEgE,MAAMsuB,OAAO,SAASlxB,GAAG,MAAOomB,GAAEpmB,GAAGomB,EAAExjB,MAAM6nB,MAAM,WAAW,MAAOltB,KAAIA,GAAE,EAAGm+B,EAAEr9B,EAAE,SAAS2B,GAAGpB,EAAE,GAAGo9B,GAAE,EAAGzH,EAAEv0B,EAAE47B,EAAE57B,EAAE87B,EAAE,EAAEJ,EAAEr9B,EAAE4B,MAAM2C,MAAMipB,KAAK,WAAW,MAAOmQ,IAAE,EAAGz+B,GAAE,EAAGQ,EAAE29B,GAAG94B,MAAM65B,UAAU,WAAW,MAAOT,KAA0CX,EAAOr7B,EAAP,SAAAyE,UAAA62B,EAAA,kBAAAD,KAAA79B,KAAAJ,EAAAH,EAAAG,EAAAC,GAAAg+B,KAAAh+B,EAAAD,QAAAk+B,IAA0EvuB,SvBqvH/tC,SAAU1P,EAAQD,EAASH,GAEjC,YAkBA,SAASoQ,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAItL,WAAU,qCAEhH,QAASuU,GAA2BC,EAAMjZ,GAAQ,IAAKiZ,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOlZ,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BiZ,EAAPjZ,EAElO,QAASmZ,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI5U,WAAU,iEAAoE4U,GAAeD,GAASnY,UAAYT,OAAO8Y,OAAOD,GAAcA,EAAWpY,WAAaoW,aAAelX,MAAOiZ,EAAUzY,YAAY,EAAO2P,UAAU,EAAM5P,cAAc,KAAe2Y,IAAY7Y,OAAO+Y,eAAiB/Y,OAAO+Y,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,GAnBje7Y,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,IAEXP,EAAQs/B,uBAAyBj4B,MAEjC,IAAIgJ,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAItQ,GAAI,EAAGA,EAAIsQ,EAAMtO,OAAQhC,IAAK,CAAE,GAAIuQ,GAAaD,EAAMtQ,EAAIuQ,GAAW1P,WAAa0P,EAAW1P,aAAc,EAAO0P,EAAW3P,cAAe,EAAU,SAAW2P,KAAYA,EAAWC,UAAW,GAAM9P,OAAOC,eAAe0P,EAAQE,EAAW3J,IAAK2J,IAAiB,MAAO,UAAUN,EAAaQ,EAAYC,GAAiJ,MAA9HD,IAAYL,EAAiBH,EAAY9O,UAAWsP,GAAiBC,GAAaN,EAAiBH,EAAaS,GAAqBT,MAE5hBmK,EAAO,QAAStZ,GAAIG,EAAQC,EAAUmZ,GAA2B,OAAXpZ,IAAiBA,EAAS+Y,SAAS7Y,UAAW,IAAImZ,GAAO5Z,OAAO6Z,yBAAyBtZ,EAAQC,EAAW,IAAaiG,SAATmT,EAAoB,CAAE,GAAIE,GAAS9Z,OAAOuZ,eAAehZ,EAAS,OAAe,QAAXuZ,EAAmB,OAAkC1Z,EAAI0Z,EAAQtZ,EAAUmZ,GAAoB,GAAI,SAAWC,GAAQ,MAAOA,GAAKja,KAAgB,IAAIG,GAAS8Z,EAAKxZ,GAAK,IAAeqG,SAAX3G,EAA4C,MAAOA,GAAON,KAAKma,IwBvwH5dglB,GADA1/B,EAAA,GACAA,EAAA,KAEAgR,EAAAhR,EAAA,ExBmxH6BG,GwBjxHhBs/B,uBxBixHiD,SAAUtZ,GwBhxHpE,QAAAsZ,GAAYxuB,GACR,GADcb,EAAAzK,KAAA85B,KACT,EAAAzuB,EAAA/O,OAAMgP,EAAK9N,QAAS,EAAA6N,EAAA/O,OAAMgP,EAAK7N,KAChC,KAAM,IAAI4B,WAAJ,uCAAqDiM,EAAK9N,IAA1D,QAAqE8N,EAAK7N,IAA1E,oBAAiG6N,EAAKhK,IAAtG,MAFI,IAAA+Q,GAAAuB,EAAA5T,MAAA85B,EAAA1lB,WAAAhZ,OAAAuZ,eAAAmlB,IAAAl/B,KAAAoF,KAIRsL,GAJQ,OAKd+G,GAAK7U,IAAM8N,EAAK9N,IAChB6U,EAAK5U,IAAM6N,EAAK7N,IACX4U,EAAKmD,aAAalK,EAAKC,UACxBuJ,EAAAglB,EAAAj+B,UAAAuY,WAAAhZ,OAAAuZ,eAAAmlB,EAAAj+B,WAAA,eAAAwW,GAAAzX,KAAAyX,EAAmB/G,EAAKC,SARd8G,ExBqzHlB,MApCA0B,GAAU+lB,EAAwBtZ,GAmBlC3V,EAAaivB,IACTx4B,IAAK,eACLvG,MAAO,SwB1xHEA,GACT,OAAO,EAAAsQ,EAAA/O,OAAMvB,IAAUA,GAASiF,KAAKxC,KAAOzC,GAASiF,KAAKvC,SxB6xH1D6D,IAAK,YACLvG,MAAO,SwB3xHMA,GACb,MAAOA,GAAM2G,cxB8xHbJ,IAAK,QACLvG,MAAO,SwB5xHE2Q,GACT,MAAOiT,UAASjT,OxBgyHbouB,GACTC,EAAkB/jB,kBAId,SAAUvb,EAAQD,EAASH,GAEjC,YAOA,SAASoQ,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAItL,WAAU,qCAJhHjE,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,GAKeP,GyB30Hbm2B,oBACT,QAAAA,GAAY3W,EAAYjf,GACpB,GAD2B0P,EAAAzK,KAAA2wB,IACtB3W,EAAWxE,aAAaza,GACzB,KAAM,IAAIsE,WAAatE,EAAjB,wCAA8Dif,EAAW1Y,IAAzE,IAEVtB,MAAKga,WAAaA,EAClBha,KAAKjF,MAAQA","file":"zatacka.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 18);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.isObject = isObject;\nexports.isNumber = isNumber;\nexports.isPositiveNumber = isPositiveNumber;\nexports.isInt = isInt;\nexports.isPositiveInt = isPositiveInt;\nexports.isString = isString;\nexports.isNonEmptyString = isNonEmptyString;\nexports.arePositiveNumbers = arePositiveNumbers;\nexports.round = round;\nexports.sameAbs = sameAbs;\nexports.randomFloat = randomFloat;\nexports.normalizeAngle = normalizeAngle;\nexports.radToDeg = radToDeg;\nexports.distanceToDuration = distanceToDuration;\nexports.log = log;\nexports.logWarning = logWarning;\nexports.logError = logError;\nexports.byID = byID;\nexports.isHTMLElement = isHTMLElement;\nexports.flush = flush;\nexports.forfor = forfor;\nexports.anyKeyBeingPressed = anyKeyBeingPressed;\nexports.anyMouseButtonBeingPressed = anyMouseButtonBeingPressed;\nexports.anyInputBeingPressed = anyInputBeingPressed;\nexports.isMouseButton = isMouseButton;\nexports.isKeyList = isKeyList;\nexports.isFKey = isFKey;\nvar typeOf = function (global) {\n    return function (obj) {\n        if (obj === global) {\n            return \"global\";\n        }\n        return {}.toString.call(obj).match(/\\s([a-z|A-Z]+)/)[1].toLowerCase();\n    };\n}(undefined);\n\nvar CONSOLE_PREFIX = \"[Zatacka] \";\n\nvar KEY = exports.KEY = Object.freeze({ BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, PAUSE: 19, CAPS_LOCK: 20, ESCAPE: 27, SPACE: 32, PAGE_UP: 33, PAGE_DOWN: 34, END: 35, HOME: 36, LEFT_ARROW: 37, UP_ARROW: 38, RIGHT_ARROW: 39, DOWN_ARROW: 40, INSERT: 45, DELETE: 46, \"0\": 48, \"1\": 49, \"2\": 50, \"3\": 51, \"4\": 52, \"5\": 53, \"6\": 54, \"7\": 55, \"8\": 56, \"9\": 57, A: 65, B: 66, C: 67, D: 68, E: 69, F: 70, G: 71, H: 72, I: 73, J: 74, K: 75, L: 76, M: 77, N: 78, O: 79, P: 80, Q: 81, R: 82, S: 83, T: 84, U: 85, V: 86, W: 87, X: 88, Y: 89, Z: 90, LEFT_META: 91, RIGHT_META: 92, SELECT: 93, NUMPAD_0: 96, NUMPAD_1: 97, NUMPAD_2: 98, NUMPAD_3: 99, NUMPAD_4: 100, NUMPAD_5: 101, NUMPAD_6: 102, NUMPAD_7: 103, NUMPAD_8: 104, NUMPAD_9: 105, MULTIPLY: 106, ADD: 107, SUBTRACT: 109, DECIMAL: 110, DIVIDE: 111, F1: 112, F2: 113, F3: 114, F4: 115, F5: 116, F6: 117, F7: 118, F8: 119, F9: 120, F10: 121, F11: 122, F12: 123, NUM_LOCK: 144, SCROLL_LOCK: 145, SEMICOLON: 186, EQUALS: 187, COMMA: 188, DASH: 189, PERIOD: 190, FORWARD_SLASH: 191, GRAVE_ACCENT: 192, OPEN_BRACKET: 219, BACK_SLASH: 220, CLOSE_BRACKET: 221, SINGLE_QUOTE: 222 });\n\nvar MOUSE = exports.MOUSE = Object.freeze(function () {\n    var offset = 1000;\n    return Object.freeze({\n        unpack: function unpack(offseted) {\n            return offseted - offset;\n        },\n        pack: function pack(standard) {\n            return standard + offset;\n        },\n        LEFT: offset + 0,\n        RIGHT: offset + 2,\n        MIDDLE: offset + 1,\n        MOUSE4: offset + 3,\n        MOUSE5: offset + 4\n    });\n}());\n\nvar F_KEYS = exports.F_KEYS = Object.freeze([KEY.F1, KEY.F2, KEY.F3, KEY.F4, KEY.F5, KEY.F6, KEY.F7, KEY.F8, KEY.F9, KEY.F10, KEY.F11, KEY.F12]);\n\nvar MOUSE_BUTTONS = exports.MOUSE_BUTTONS = Object.freeze([MOUSE.LEFT, MOUSE.RIGHT, MOUSE.MIDDLE, MOUSE.MOUSE4, MOUSE.MOUSE5]);\n\nfunction isObject(obj) {\n    return typeOf(obj) === \"object\";\n}\n\nfunction isNumber(n) {\n    return typeOf(n) === \"number\";\n}\n\nfunction isPositiveNumber(n) {\n    return isNumber(n) && n > 0;\n}\n\nfunction isInt(n) {\n    return isNumber(n) && n % 1 === 0;\n}\n\nfunction isPositiveInt(n) {\n    return isInt(n) && n > 0;\n}\n\nfunction isString(s) {\n    return typeOf(s) === \"string\";\n}\n\nfunction isNonEmptyString(s) {\n    return isString(s) && s.length > 0;\n}\n\nfunction arePositiveNumbers(numbers) {\n    return numbers.every(isPositiveNumber);\n}\n\nfunction round(number, decimals) {\n    return Math.round(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n}\n\nfunction sameAbs(a, b) {\n    return Math.abs(a) === Math.abs(b);\n}\n\n/**\r\n * Generates a random float between min (inclusive) and max (exclusive).\r\n *\r\n * @param {Number} min\r\n *   Minimum value (inclusive).\r\n * @param {Number} max\r\n *   Maximum value (exclusive).\r\n */\nfunction randomFloat(min, max) {\n    return Math.random() * (max - min) + min;\n}\n\nfunction normalizeAngle(a) {\n    var pi = Math.PI;\n    var angle = a % (2 * pi);\n    angle = (angle + 2 * pi) % (2 * pi);\n    if (angle > pi) {\n        angle = angle - 2 * pi;\n    }\n    return angle;\n}\n\nfunction radToDeg(radians) {\n    return 180 / Math.PI * radians;\n}\n\nfunction distanceToDuration(distance, velocity) {\n    return distance / velocity * 1000; // milliseconds\n}\n\nfunction log(str) {\n    console.log(CONSOLE_PREFIX + str);\n}\n\nfunction logWarning(str) {\n    console.warn(CONSOLE_PREFIX + str);\n}\n\nfunction logError(str) {\n    console.error(CONSOLE_PREFIX + str);\n}\n\nfunction byID(id) {\n    return document.getElementById(id);\n}\n\nfunction isHTMLElement(elem) {\n    return elem instanceof HTMLElement;\n}\n\nfunction flush(node) {\n    if (isHTMLElement(node)) {\n        node.textContent = \"\";\n    } else {\n        throw new TypeError(node + \" is not a DOM node.\");\n    }\n}\n\nfunction forfor(y_start, y_end, x_start, x_end, func, arg) {\n    for (var y = y_start; y < y_end; y++) {\n        for (var x = x_start; x < x_end; x++) {\n            func.call(this, x, y, arg);\n        }\n    }\n}\n\nvar Keyboard = exports.Keyboard = {\n    pressed: {},\n    isDown: function isDown(keyCode) {\n        return !!this.pressed[keyCode];\n    },\n    onKeydown: function onKeydown(event) {\n        this.pressed[event.keyCode] = true;\n    },\n    onKeyup: function onKeyup(event) {\n        delete this.pressed[event.keyCode];\n    },\n    reset: function reset() {\n        this.pressed = {};\n    }\n};\n\nvar Mouse = exports.Mouse = {\n    pressed: {},\n    isDown: function isDown(mouseButtonNumber) {\n        return this.pressed[mouseButtonNumber];\n    },\n    onMousedown: function onMousedown(event) {\n        this.pressed[event.button] = true;\n    },\n    onMouseup: function onMouseup(event) {\n        delete this.pressed[event.button];\n    },\n    reset: function reset() {\n        this.pressed = {};\n    }\n};\n\nfunction anyKeyBeingPressed(keyCodes) {\n    return Array.isArray(keyCodes) && keyCodes.some(Keyboard.isDown, Keyboard);\n}\n\nfunction anyMouseButtonBeingPressed(mouseButtons) {\n    return Array.isArray(mouseButtons) && mouseButtons.map(MOUSE.unpack).some(Mouse.isDown, Mouse);\n}\n\nfunction anyInputBeingPressed(keysOrMouseButtons) {\n    return anyKeyBeingPressed(keysOrMouseButtons) || anyMouseButtonBeingPressed(keysOrMouseButtons);\n}\n\nfunction isMouseButton(button) {\n    return isPositiveInt(button) && Object.keys(MOUSE).some(function (buttonName) {\n        return MOUSE.hasOwnProperty(buttonName);\n    });\n}\n\nfunction isKeyList(keys) {\n    return Array.isArray(keys) && keys.length > 0 && keys.every(isPositiveInt);\n}\n\nfunction isFKey(key) {\n    return F_KEYS.includes(key);\n}\n\nvar PLATFORM = exports.PLATFORM = function () {\n    var strings = {\n        os_id_windows: \"Win\",\n        os_id_mac: \"Mac\",\n        os_id_linux: \"Linux\",\n        os_id_unix: \"X11\",\n\n        os_name_windows: \"Windows\",\n        os_name_mac: \"Mac\",\n        os_name_linux: \"Linux\",\n        os_name_unix: \"UNIX\",\n        os_name_unknown: \"Unknown\"\n    };\n\n    return {\n        getOS: function getOS() {\n            var ua = window.navigator.userAgent || window.navigator.appVersion;\n            if (isNonEmptyString(ua)) {\n                if (ua.indexOf(strings.os_id_windows) > -1) {\n                    return strings.os_name_windows;\n                }\n                if (ua.indexOf(strings.os_id_mac) > -1) {\n                    return strings.os_name_mac;\n                }\n                if (ua.indexOf(strings.os_id_linux) > -1) {\n                    return strings.os_name_linux;\n                }\n                if (ua.indexOf(strings.os_id_unix) > -1) {\n                    return strings.os_name_unix;\n                }\n            }\n            return strings.os_name_unknown;\n        },\n        getFullscreenShortcut: function getFullscreenShortcut() {\n            switch (PLATFORM.getOS()) {\n                case strings.os_name_mac:\n                    return \"mac\";\n                    break;\n                default:\n                    return \"default\";\n            }\n        }\n    };\n}();\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Preference = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _PreferencesUtilities = __webpack_require__(4);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Preference = exports.Preference = function () {\n    function Preference(data) {\n        _classCallCheck(this, Preference);\n\n        if (!(0, _PreferencesUtilities.isString)(data.key)) {\n            throw new TypeError(\"key must be a string (found \" + data.key + \"). More info: \" + data);\n        } else if (data.default === undefined) {\n            throw new TypeError(\"Preference '\" + data.key + \"' must have a default value.\");\n        }\n        this.key = data.key;\n        this.label = data.label;\n        this.default = data.default;\n        this.description = data.description;\n    }\n\n    _createClass(Preference, [{\n        key: \"isValidValue\",\n        value: function isValidValue(value) {\n            return (0, _PreferencesUtilities.isString)(value);\n        }\n    }, {\n        key: \"invalidValue\",\n        value: function invalidValue(value) {\n            throw new TypeError(value + \" is not a valid value for preference '\" + this.key + \"'.\");\n        }\n    }, {\n        key: \"getDefaultValue\",\n        value: function getDefaultValue() {\n            return this.default;\n        }\n    }], [{\n        key: \"stringify\",\n        value: function stringify(value) {\n            return value.toString();\n        }\n    }, {\n        key: \"parse\",\n        value: function parse(stringifiedValue) {\n            return stringifiedValue;\n        }\n    }]);\n\n    return Preference;\n}();\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n        value: true\n});\n\nexports.default = function () {\n        var KEY_SHIFT = \"⇧\";\n        var KEY_CMD = \"⌘\";\n        var KEY_PROCEED = \"Space or Enter\";\n        var KEY_QUIT = \"Esc\";\n\n        return Object.freeze({\n                hint_unload: \"Are you sure you want to unload the page?\",\n                hint_start: \"Press <kbd>Space</kbd> to start\",\n                hint_popup: \"It is recommended to run Kurve in its own window without history (to avoid switching tabs or navigating back in history mid-game). To do that, please allow popups or <a href=\\\"ZATACKA.html\\\" target=\\\"_blank\\\">click here</a>.\",\n                hint_pick: \"Pick your desired color by pressing the corresponding LEFT key (e.g. M for Orange).\",\n                hint_proceed: \"Press \" + KEY_PROCEED + \" to start!\",\n                hint_next: \"Press \" + KEY_PROCEED + \" to proceed, or \" + KEY_QUIT + \" to quit.\",\n                hint_quit: \"Press \" + KEY_PROCEED + \" to start over.\",\n                hint_alt: \"Alt plus some other keys may cause undesired behavior (e.g. switching windows).\",\n                hint_ctrl: \"Ctrl plus some other keys may cause undesired behavior (e.g. closing the tab).\",\n                hint_mouse: \"Make sure to keep the mouse cursor inside the browser window.\",\n                hint_preferences_access_denied: \"Could not save/load settings because access to localStorage was denied by the browser. This might be caused by \\\"third-party site data\\\" being blocked or similar.\",\n                hint_preferences_localstorage_failed: \"Could not save/load settings because access to localStorage failed.\",\n\n                keyboard_fullscreen_mac: \"<kbd>\" + KEY_CMD + \" + Ctrl + F</kbd> and/or <kbd>\" + KEY_CMD + \" + \" + KEY_SHIFT + \" + F</kbd>\",\n                keyboard_fullscreen_standard: \"<kbd>F11</kbd>\",\n\n                getFullscreenHint: function getFullscreenHint(shortcut) {\n                        return \"Press \" + shortcut + \" to toggle fullscreen\";\n                },\n\n                label_button_alert_ok: \"OK\",\n                label_button_confirm_yes: \"Yes\",\n                label_button_confirm_no: \"No\",\n\n                label_text_confirm_quit: \"Are you sure you want to quit?\",\n                label_text_confirm_reload: \"Are you sure you want to reload the application?\",\n\n                pref_label_cursor: \"Cursor\",\n                pref_label_description_cursor: \"Control how the cursor behaves when the game is running.\",\n                pref_label_cursor_always_visible: \"Always visible\",\n                pref_label_cursor_hidden_when_mouse_used_by_player: \"Hidden when mouse used by player\",\n                pref_label_cursor_always_hidden: \"Always hidden\",\n\n                pref_label_edge_fix: \"Edge fix\",\n                pref_label_description_edge_fix: \"Shrink the playing field slightly to make the edge visible if the monitor is exactly the same height or width as the game.\",\n                pref_label_edge_fix_full: \"Full\",\n                pref_label_edge_fix_minimal: \"Minimal\",\n                pref_label_edge_fix_off: \"Off\",\n\n                pref_label_hints: \"Hints\",\n                pref_label_description_hints: \"Hints may be redundant for experienced Kurve players.\",\n                pref_label_hints_all: \"All\",\n                pref_label_hints_warnings_only: \"Warnings only\",\n                pref_label_hints_none: \"None\",\n\n                pref_label_prevent_spawnkill: \"Prevent spawnkills\",\n                pref_label_description_prevent_spawnkill: \"Enforce a minimum distance between player spawns.\",\n\n                pref_label_confirm_quit: \"Confirm quit\",\n                pref_label_description_confirm_quit: \"Ask for confirmation before quitting to the main menu.\",\n\n                pref_label_confirm_reload: \"Confirm reload\",\n                pref_label_description_confirm_reload: \"Ask for confirmation before reloading the application.\",\n\n                pref_label_allow_blurry_scaling: \"Allow blurry scaling\",\n                pref_label_description_allow_blurry_scaling: \"Let the game use the available screen area more efficiently at the expense of visual quality. Can be useful if the game is very small on your screen.\"\n        });\n}();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = Object.freeze({\n    game_url: \"ZATACKA.html\",\n\n    error_name_security: \"SecurityError\",\n\n    class_hidden: \"hidden\",\n    class_active: \"active\",\n    class_dialog: \"dialog\",\n    class_dialog_alert: \"alert\",\n    class_dialog_confirmation: \"confirmation\",\n    class_description: \"description\",\n    class_half_width: \"half-width\",\n    class_right_hand_side: \"right-hand-side\",\n    class_blurry: \"blurry\",\n    class_nocursor: \"nocursor\",\n    class_tempcursor: \"tempcursor\",\n    class_hints_warnings_only: \"hints-warnings-only\",\n    class_hints_none: \"hints-none\",\n    html_name_preference_prefix: \"preference-\",\n\n    cursor_hidden: \"hidden\",\n    cursor_visible: \"visible\",\n\n    id_start_hint: \"start-hint\",\n    id_fullscreen_hint: \"fullscreen-hint\",\n    id_popup_hint: \"popup-hint\",\n    id_button_show_settings: \"button-show-settings\",\n    id_button_hide_settings: \"button-hide-settings\",\n\n    pref_number_type_integer: \"integer\",\n    pref_number_type_float: \"float\",\n\n    pref_key_cursor: \"cursor\",\n    pref_value_cursor_always_visible: \"always_visible\",\n    pref_value_cursor_hidden_when_mouse_used_by_player: \"hidden_when_mouse_used_by_player\",\n    pref_value_cursor_always_hidden: \"always_hidden\",\n\n    pref_key_edge_fix: \"edge_fix\",\n    pref_value_edge_fix_full: \"full\",\n    pref_value_edge_fix_minimal: \"minimal\",\n    pref_value_edge_fix_off: \"off\",\n\n    pref_key_hints: \"hints\",\n    pref_value_hints_all: \"all\",\n    pref_value_hints_warnings_only: \"warnings\",\n    pref_value_hints_none: \"none\",\n\n    pref_key_confirm_quit: \"confirm_quit\",\n    pref_key_confirm_reload: \"confirm_reload\",\n    pref_key_prevent_spawnkill: \"prevent_spawnkill\",\n    pref_key_allow_blurry_scaling: \"allow_blurry_scaling\"\n});\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.log = log;\nexports.logWarning = logWarning;\nexports.logError = logError;\nexports.isObject = isObject;\nexports.isNumber = isNumber;\nexports.isPositiveNumber = isPositiveNumber;\nexports.isInt = isInt;\nexports.isPositiveInt = isPositiveInt;\nexports.isString = isString;\nexports.isNonEmptyString = isNonEmptyString;\nexports.arePositiveNumbers = arePositiveNumbers;\nexports.round = round;\nvar typeOf = function (global) {\n    return function (obj) {\n        if (obj === global) {\n            return \"global\";\n        }\n        return {}.toString.call(obj).match(/\\s([a-z|A-Z]+)/)[1].toLowerCase();\n    };\n}(undefined);\n\nvar CONSOLE_PREFIX = \"[Preferences] \";\n\nfunction log(string) {\n    console.log(CONSOLE_PREFIX + string);\n}\n\nfunction logWarning(string) {\n    console.warn(CONSOLE_PREFIX + string);\n}\n\nfunction logError(string) {\n    console.error(CONSOLE_PREFIX + string);\n}\n\nfunction isObject(obj) {\n    return typeOf(obj) === \"object\";\n}\n\nfunction isNumber(n) {\n    return typeOf(n) === \"number\";\n}\n\nfunction isPositiveNumber(n) {\n    return isNumber(n) && n > 0;\n}\n\nfunction isInt(n) {\n    return isNumber(n) && n % 1 === 0;\n}\n\nfunction isPositiveInt(n) {\n    return isInt(n) && n > 0;\n}\n\nfunction isString(s) {\n    return typeOf(s) === \"string\";\n}\n\nfunction isNonEmptyString(s) {\n    return isString(s) && s.length > 0;\n}\n\nfunction arePositiveNumbers(numbers) {\n    return numbers.every(isPositiveNumber);\n}\n\nfunction round(number, decimals) {\n    return Math.round(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Player = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utilities = __webpack_require__(0);\n\nvar _Queue = __webpack_require__(21);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Player = exports.Player = function () {\n    function Player(id) {\n        var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Player \" + id;\n        var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"white\";\n        var L_keys = arguments[3];\n        var R_keys = arguments[4];\n        var holeConfig = arguments[5];\n\n        _classCallCheck(this, Player);\n\n        if (!(0, _utilities.isPositiveInt)(id)) {\n            throw new TypeError(\"Cannot create a player with ID \" + id + \". Only positive integers are accepted.\");\n        }\n        this.id = id;\n        this.name = name;\n        this.color = color;\n        this.alive = false;\n        this.holy = false;\n        this.x = null;\n        this.y = null;\n        this.direction = 0;\n        this.velocity = 0;\n        this.maxSpeed = undefined;\n        this.lastPosition = null;\n        this.queuedDraws = new _Queue.Queue();\n        this.holeTimer = null;\n        this.holeConfig = null;\n\n        if (!this.constructor.isHoleConfig(holeConfig)) {\n            (0, _utilities.logWarning)(\"Creating player \" + this.name + \" with no hole configuration because \" + holeConfig + \" is not a valid hole configuration.\");\n        } else {\n            this.holeConfig = holeConfig;\n        }\n\n        if ((0, _utilities.isPositiveInt)(L_keys)) {\n            this.L_keys = [L_keys];\n        } else if ((0, _utilities.isKeyList)(L_keys)) {\n            this.L_keys = L_keys;\n        } else {\n            (0, _utilities.logWarning)(\"Creating player \\\"\" + this.name + \"\\\" without any LEFT key(s).\");\n            this.L_keys = [];\n        }\n\n        if ((0, _utilities.isPositiveInt)(R_keys)) {\n            this.R_keys = [R_keys];\n        } else if ((0, _utilities.isKeyList)(R_keys)) {\n            this.R_keys = R_keys;\n        } else {\n            (0, _utilities.logWarning)(\"Creating player \\\"\" + this.name + \"\\\" without any RIGHT key(s).\");\n            this.R_keys = [];\n        }\n    }\n\n    _createClass(Player, [{\n        key: \"isAlive\",\n\n\n        // CHECKERS\n\n        value: function isAlive() {\n            return this.alive;\n        }\n    }, {\n        key: \"justWasAt\",\n        value: function justWasAt(left, top) {\n            return this.lastPosition.left === left && this.lastPosition.top === top;\n        }\n    }, {\n        key: \"isHoly\",\n        value: function isHoly() {\n            return this.holy;\n        }\n    }, {\n        key: \"isPressingLeft\",\n        value: function isPressingLeft() {\n            return (0, _utilities.anyInputBeingPressed)(this.L_keys);\n        }\n    }, {\n        key: \"isPressingRight\",\n        value: function isPressingRight() {\n            return (0, _utilities.anyInputBeingPressed)(this.R_keys);\n        }\n    }, {\n        key: \"hasID\",\n        value: function hasID(id) {\n            return this.id === id;\n        }\n    }, {\n        key: \"hasMouseButton\",\n        value: function hasMouseButton(button) {\n            return (0, _utilities.isMouseButton)(button) && (this.L_keys.includes(button) || this.R_keys.includes(button));\n        }\n    }, {\n        key: \"usesAnyMouseButton\",\n        value: function usesAnyMouseButton() {\n            var _this = this;\n\n            return _utilities.MOUSE_BUTTONS.some(function (button) {\n                return _this.hasMouseButton(button);\n            });\n        }\n    }, {\n        key: \"hasKey\",\n        value: function hasKey(key) {\n            return this.L_keys.includes(key) || this.R_keys.includes(key);\n        }\n\n        // GETTERS\n\n    }, {\n        key: \"getID\",\n        value: function getID() {\n            return this.id;\n        }\n    }, {\n        key: \"getName\",\n        value: function getName() {\n            return this.name;\n        }\n    }, {\n        key: \"getColor\",\n        value: function getColor() {\n            return this.color;\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            return this.name;\n        }\n    }, {\n        key: \"getLastPosition\",\n        value: function getLastPosition() {\n            return this.lastPosition;\n        }\n    }, {\n        key: \"getVelocity\",\n        value: function getVelocity() {\n            return this.velocity;\n        }\n    }, {\n        key: \"getDirection\",\n        value: function getDirection() {\n            return this.direction;\n        }\n    }, {\n        key: \"randomPaddedHoleSize\",\n        value: function randomPaddedHoleSize() {\n            return (0, _utilities.randomFloat)(this.holeConfig.minPaddedHoleSize, this.holeConfig.maxPaddedHoleSize);\n        }\n    }, {\n        key: \"randomPaddedHoleInterval\",\n        value: function randomPaddedHoleInterval() {\n            return (0, _utilities.randomFloat)(this.holeConfig.minPaddedHoleInterval, this.holeConfig.maxPaddedHoleInterval);\n        }\n    }, {\n        key: \"firstHoleDelay\",\n        value: function firstHoleDelay() {\n            return (0, _utilities.distanceToDuration)(this.randomPaddedHoleInterval() - this.holeConfig.minPaddedHoleInterval, this.velocity);\n        }\n\n        // SETTERS\n\n    }, {\n        key: \"setMaxSpeed\",\n        value: function setMaxSpeed(speed) {\n            this.maxSpeed = speed;\n        }\n    }, {\n        key: \"setDirection\",\n        value: function setDirection(direction) {\n            this.direction = direction;\n        }\n\n        // DOERS\n\n    }, {\n        key: \"start\",\n        value: function start() {\n            (0, _utilities.log)(this + \" starting.\");\n            this.alive = true;\n            this.velocity = this.maxSpeed;\n            if (this.constructor.isHoleConfig(this.holeConfig)) {\n                this.holeTimer = setTimeout(this.startCreatingHoles.bind(this), this.firstHoleDelay());\n            }\n        }\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            this.alive = false;\n            this.velocity = 0;\n            clearTimeout(this.holeTimer);\n        }\n    }, {\n        key: \"reset\",\n        value: function reset() {\n            this.holy = false;\n            this.lastPosition = null;\n            this.queuedDraws = new _Queue.Queue();\n        }\n\n        /**\r\n         * Called when the player does something that causes it do die.\r\n         * @param {String} cause The cause of death.\r\n         */\n\n    }, {\n        key: \"die\",\n        value: function die(cause) {\n            this.alive = false;\n            clearTimeout(this.holeTimer);\n            (0, _utilities.log)(this + \" \" + (cause || \"died\") + \" at (\" + (0, _utilities.round)(this.x, 2) + \", \" + (0, _utilities.round)(this.y, 2) + \").\");\n        }\n    }, {\n        key: \"beAt\",\n        value: function beAt(left, top) {\n            this.lastPosition = {\n                \"left\": left,\n                \"top\": top\n            };\n        }\n    }, {\n        key: \"beginHole\",\n        value: function beginHole() {\n            this.holy = true;\n            var paddedHoleSize = this.randomPaddedHoleSize();\n            var paddedHoleDuration = (0, _utilities.distanceToDuration)(paddedHoleSize, this.velocity);\n            this.holeTimer = setTimeout(this.endHole.bind(this), paddedHoleDuration);\n        }\n    }, {\n        key: \"endHole\",\n        value: function endHole() {\n            this.holy = false;\n            var paddedHoleInterval = this.randomPaddedHoleInterval();\n            var paddedHoleIntervalDuration = (0, _utilities.distanceToDuration)(paddedHoleInterval, this.velocity);\n            this.holeTimer = setTimeout(this.beginHole.bind(this), paddedHoleIntervalDuration);\n        }\n    }, {\n        key: \"startCreatingHoles\",\n        value: function startCreatingHoles() {\n            this.beginHole();\n        }\n    }, {\n        key: \"enqueueDraw\",\n        value: function enqueueDraw() {\n            this.queuedDraws.enqueue({ \"x\": this.x, \"y\": this.y });\n        }\n    }], [{\n        key: \"isPlayer\",\n        value: function isPlayer(player) {\n            return player instanceof Player;\n        }\n    }, {\n        key: \"isHoleConfig\",\n        value: function isHoleConfig(holeConfig) {\n            return (0, _utilities.isObject)(holeConfig) && (0, _utilities.arePositiveNumbers)([holeConfig.minPaddedHoleSize, holeConfig.maxPaddedHoleSize, holeConfig.minPaddedHoleInterval, holeConfig.maxPaddedHoleInterval]);\n        }\n    }]);\n\n    return Player;\n}();\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ConfirmationDialog = undefined;\n\nvar _Dialog2 = __webpack_require__(9);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ConfirmationDialog = exports.ConfirmationDialog = function (_Dialog) {\n    _inherits(ConfirmationDialog, _Dialog);\n\n    function ConfirmationDialog(question, callback) {\n        _classCallCheck(this, ConfirmationDialog);\n\n        if (!(callback instanceof Function)) {\n            throw new TypeError(\"callback must be a function (found \" + callback + \").\");\n        }\n\n        var _this = _possibleConstructorReturn(this, (ConfirmationDialog.__proto__ || Object.getPrototypeOf(ConfirmationDialog)).call(this, question));\n\n        _this.callback = callback;\n        return _this;\n    }\n\n    return ConfirmationDialog;\n}(_Dialog2.Dialog);\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BooleanPreference = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Preference2 = __webpack_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar BooleanPreference = exports.BooleanPreference = function (_Preference) {\n    _inherits(BooleanPreference, _Preference);\n\n    function BooleanPreference(data) {\n        _classCallCheck(this, BooleanPreference);\n\n        var _this = _possibleConstructorReturn(this, (BooleanPreference.__proto__ || Object.getPrototypeOf(BooleanPreference)).call(this, data));\n\n        if (!(data.default === true || data.default === false)) {\n            _get(BooleanPreference.prototype.__proto__ || Object.getPrototypeOf(BooleanPreference.prototype), \"invalidValue\", _this).call(_this, data.default);\n        }\n        return _this;\n    }\n\n    _createClass(BooleanPreference, [{\n        key: \"isValidValue\",\n        value: function isValidValue(value) {\n            return value === true || value === false;\n        }\n    }], [{\n        key: \"stringify\",\n        value: function stringify(value) {\n            return value.toString();\n        }\n    }, {\n        key: \"parse\",\n        value: function parse(stringifiedValue) {\n            return stringifiedValue === \"true\";\n        }\n    }]);\n\n    return BooleanPreference;\n}(_Preference2.Preference);\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MultichoicePreference = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Preference2 = __webpack_require__(1);\n\nvar _PreferencesUtilities = __webpack_require__(4);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MultichoicePreference = exports.MultichoicePreference = function (_Preference) {\n    _inherits(MultichoicePreference, _Preference);\n\n    function MultichoicePreference(data) {\n        _classCallCheck(this, MultichoicePreference);\n\n        if (!isNonEmptyStringArray(data.values)) {\n            throw new TypeError(\"values must be a non-empty string array (found \" + data.values + \" for preference '\" + data.key + \"').\");\n        }\n\n        var _this = _possibleConstructorReturn(this, (MultichoicePreference.__proto__ || Object.getPrototypeOf(MultichoicePreference)).call(this, data));\n\n        _this.values = data.values;\n        _this.labels = data.labels;\n        if (!_this.isValidValue(data.default)) {\n            _get(MultichoicePreference.prototype.__proto__ || Object.getPrototypeOf(MultichoicePreference.prototype), \"invalidValue\", _this).call(_this, data.default);\n        }\n\n        function isNonEmptyStringArray(strings) {\n            return strings instanceof Array && strings.length > 0 && strings.every(_PreferencesUtilities.isString);\n        }\n        return _this;\n    }\n\n    _createClass(MultichoicePreference, [{\n        key: \"isValidValue\",\n        value: function isValidValue(value) {\n            return this.values.indexOf(value) > -1;\n        }\n    }], [{\n        key: \"stringify\",\n        value: function stringify(value) {\n            return value;\n        }\n    }, {\n        key: \"parse\",\n        value: function parse(stringifiedValue) {\n            return stringifiedValue;\n        }\n    }]);\n\n    return MultichoicePreference;\n}(_Preference2.Preference);\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Dialog = undefined;\n\nvar _utilities = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Dialog = exports.Dialog = function Dialog(text) {\n    _classCallCheck(this, Dialog);\n\n    if (!(0, _utilities.isString)(text)) {\n        throw new TypeError(\"text must be a string (found \" + text + \").\");\n    }\n    this.text = text;\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Message = exports.Message = function () {\n    function Message(text, styleClass) {\n        _classCallCheck(this, Message);\n\n        this.text = text;\n        this.class = styleClass;\n    }\n\n    _createClass(Message, [{\n        key: \"toHTMLElement\",\n        value: function toHTMLElement() {\n            var p = document.createElement(\"p\");\n            p.textContent = this.text;\n            p.classList.add(this.class);\n            p.classList.add(\"message\");\n            return p;\n        }\n    }]);\n\n    return Message;\n}();\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RangePreference = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Preference2 = __webpack_require__(1);\n\nvar _PreferencesUtilities = __webpack_require__(4);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RangePreference = exports.RangePreference = function (_Preference) {\n    _inherits(RangePreference, _Preference);\n\n    function RangePreference(data) {\n        _classCallCheck(this, RangePreference);\n\n        if (!(0, _PreferencesUtilities.isNumber)(data.min) || !(0, _PreferencesUtilities.isNumber)(data.max)) {\n            throw new TypeError(\"min and max must be numbers (found \" + data.min + \" and \" + data.max + \" for preference '\" + data.key + \"').\");\n        } else if (data.min > data.max) {\n            throw new TypeError(\"min cannot be greater than max (found \" + data.min + \" and \" + data.max + \" for preference '\" + data.key + \"', respectively).\");\n        }\n\n        var _this = _possibleConstructorReturn(this, (RangePreference.__proto__ || Object.getPrototypeOf(RangePreference)).call(this, data));\n\n        _this.min = data.min;\n        _this.max = data.max;\n        if (!_this.isValidValue(data.default)) {\n            _get(RangePreference.prototype.__proto__ || Object.getPrototypeOf(RangePreference.prototype), \"invalidValue\", _this).call(_this, data.default);\n        }\n        return _this;\n    }\n\n    _createClass(RangePreference, [{\n        key: \"isValidValue\",\n        value: function isValidValue(value) {\n            return (0, _PreferencesUtilities.isNumber)(value) && value >= this.min && value <= this.max;\n        }\n    }], [{\n        key: \"stringify\",\n        value: function stringify(value) {\n            return value.toString();\n        }\n    }, {\n        key: \"parse\",\n        value: function parse(stringifiedValue) {\n            return parseFloat(stringifiedValue);\n        }\n    }]);\n\n    return RangePreference;\n}(_Preference2.Preference);\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.GUIController = GUIController;\n\nvar _Preference = __webpack_require__(1);\n\nvar _BooleanPreference = __webpack_require__(7);\n\nvar _RangePreference = __webpack_require__(11);\n\nvar _IntegerRangePreference = __webpack_require__(23);\n\nvar _MultichoicePreference = __webpack_require__(8);\n\nvar _Dialog = __webpack_require__(9);\n\nvar _ConfirmationDialog = __webpack_require__(6);\n\nvar _utilities = __webpack_require__(0);\n\nvar _ZatackaEn_US = __webpack_require__(2);\n\nvar _ZatackaEn_US2 = _interopRequireDefault(_ZatackaEn_US);\n\nvar _strings = __webpack_require__(3);\n\nvar _strings2 = _interopRequireDefault(_strings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction GUIController(cfg) {\n\n    var config = cfg;\n    var lobby = (0, _utilities.byID)(\"lobby\");\n    var controls = (0, _utilities.byID)(\"controls\");\n    var canvas_main = (0, _utilities.byID)(\"canvas_main\");\n    var canvas_overlay = (0, _utilities.byID)(\"canvas_overlay\");\n    var left = (0, _utilities.byID)(\"left\");\n    var scoreboard = (0, _utilities.byID)(\"scoreboard\");\n    var results = (0, _utilities.byID)(\"results\");\n    var KONEC_HRY = (0, _utilities.byID)(\"KONEC_HRY\");\n    var messagesContainer = (0, _utilities.byID)(\"messages\");\n    // const settingsContainer = byID(\"settings\");\n    var dialogsOverlay = (0, _utilities.byID)(\"dialogs\");\n    var settingsForm = (0, _utilities.byID)(\"settings-form\");\n\n    var ORIGINAL_LEFT_WIDTH = left.offsetWidth;\n    var MULTICHOICE_LABEL_MAX_LENGTH_FOR_HALFWIDTH_FIELDSET = 22; // More characters than this will result in a full-width div/fieldset.\n    var FLOAT_RANGE_PREFERENCE_STEP = 0.01;\n\n    var BUTTON_TAG_NAME = \"button\";\n    var BUTTON_NODE_CLASS = HTMLButtonElement;\n\n    var LABEL_ALERT_OK = _ZatackaEn_US2.default.label_button_alert_ok;\n    var LABEL_CONFIRM_YES = _ZatackaEn_US2.default.label_button_confirm_yes;\n    var LABEL_CONFIRM_NO = _ZatackaEn_US2.default.label_button_confirm_no;\n\n    var showingSettings = false;\n    var currentMessages = [];\n    var queuedDialogs = [];\n    var currentDialogWithBox = null;\n\n    var DialogWithBox = function DialogWithBox(dialog, box) {\n        _classCallCheck(this, DialogWithBox);\n\n        this.dialog = dialog;\n        this.box = box;\n    };\n\n    // PRIVATE FUNCTIONS\n\n    function hideLobby() {\n        (0, _utilities.log)(\"Hiding lobby.\");\n        lobby.classList.add(_strings2.default.class_hidden);\n    }\n\n    function showLobby() {\n        (0, _utilities.log)(\"Showing lobby.\");\n        lobby.classList.remove(_strings2.default.class_hidden);\n    }\n\n    function showDialogsOverlay() {\n        dialogsOverlay.classList.remove(_strings2.default.class_hidden);\n    }\n\n    function hideDialogsOverlay() {\n        dialogsOverlay.classList.add(_strings2.default.class_hidden);\n    }\n\n    function isLobbyEntry(element) {\n        return (0, _utilities.isHTMLElement)(element) && element.children.length >= 2;\n    }\n\n    function isButton(element) {\n        return element instanceof BUTTON_NODE_CLASS;\n    }\n\n    function showDialogRightAway(dialog) {\n        var dialogBox = dialogHTMLElement(dialog);\n        currentDialogWithBox = new DialogWithBox(dialog, dialogBox);\n        setTemporaryCursorVisibility(true);\n        showDialogsOverlay();\n        dialogsOverlay.appendChild(dialogBox);\n        // A dialog should have its last button focused:\n        dialogBox.querySelector(\"button:last-of-type\").focus();\n    }\n\n    function currentDialogClosed() {\n        currentDialogWithBox.box.remove();\n        currentDialogWithBox = null;\n        if (anyQueuedDialogs()) {\n            // There is at least one dialog waiting. Show it:\n            showDialogRightAway(queuedDialogs.shift());\n        } else {\n            // No more dialogs. Restore:\n            setTemporaryCursorVisibility(false);\n            hideDialogsOverlay();\n        }\n    }\n\n    function anyQueuedDialogs() {\n        return queuedDialogs.length > 0;\n    }\n\n    function escapeShouldCloseCurrentDialog() {\n        return currentDialogWithBox.dialog instanceof _ConfirmationDialog.ConfirmationDialog;\n    }\n\n    function dialogHTMLElementBoilerplate(text) {\n        var dialogBox = document.createElement(\"div\");\n        dialogBox.classList.add(_strings2.default.class_dialog);\n        var label = document.createElement(\"p\");\n        label.textContent = text;\n        dialogBox.appendChild(label);\n        return dialogBox;\n    }\n\n    function alertDialogHTMLElement(dialog) {\n        var alertDialogBox = dialogHTMLElementBoilerplate(dialog.text);\n        alertDialogBox.classList.add(_strings2.default.class_dialog_alert);\n        var buttonOK = document.createElement(\"button\");\n        buttonOK.textContent = LABEL_ALERT_OK;\n        alertDialogBox.appendChild(buttonOK);\n\n        function alertDialogEventHandler() {\n            currentDialogClosed();\n        }\n        // Event listener:\n        buttonOK.addEventListener(\"click\", alertDialogEventHandler);\n\n        return alertDialogBox;\n    }\n\n    function confirmationDialogHTMLElement(confirmationDialog) {\n        var confirmationDialogBox = dialogHTMLElementBoilerplate(confirmationDialog.text);\n        confirmationDialogBox.classList.add(_strings2.default.class_dialog_confirmation);\n        var buttonYes = document.createElement(\"button\");\n        buttonYes.textContent = LABEL_CONFIRM_YES;\n        var buttonNo = document.createElement(\"button\");\n        buttonNo.textContent = LABEL_CONFIRM_NO;\n        confirmationDialogBox.appendChild(buttonYes);\n        confirmationDialogBox.appendChild(buttonNo);\n\n        function confirmationDialogEventHandler(response) {\n            return function () {\n                currentDialogClosed();\n                if (response === true) {\n                    confirmationDialog.callback();\n                }\n            };\n        }\n        // Event listeners:\n        buttonYes.addEventListener(\"click\", confirmationDialogEventHandler(true));\n        buttonNo.addEventListener(\"click\", confirmationDialogEventHandler(false));\n\n        return confirmationDialogBox;\n    }\n\n    function dialogHTMLElement(dialog) {\n        if (dialog instanceof _ConfirmationDialog.ConfirmationDialog) {\n            return confirmationDialogHTMLElement(dialog);\n        } else if (dialog instanceof _Dialog.Dialog) {\n            return alertDialogHTMLElement(dialog);\n        }\n        throw new TypeError(dialog + \" is not a valid dialog.\");\n    }\n\n    function resetScoreboardEntry(entry) {\n        entry.classList.remove(\"active\");\n    }\n\n    function resetScoreboard() {\n        Array.from(scoreboard.children).forEach(resetScoreboardEntry);\n    }\n\n    function resetResults() {\n        Array.from(results.children).forEach(resetScoreboardEntry);\n    }\n\n    function setCursorBehavior(behavior) {\n        switch (behavior) {\n            case _strings2.default.cursor_visible:\n                document.body.classList.remove(_strings2.default.class_nocursor);\n                break;\n            case _strings2.default.cursor_hidden:\n                document.body.classList.add(_strings2.default.class_nocursor);\n                break;\n            default:\n                (0, _utilities.logError)(\"Cannot set cursor behavior to '\" + behavior + \"'.\");\n        }\n    }\n\n    function setTemporaryCursorVisibility(tempCursorActive) {\n        if (tempCursorActive) {\n            document.body.classList.add(_strings2.default.class_tempcursor);\n        } else {\n            document.body.classList.remove(_strings2.default.class_tempcursor);\n        }\n    }\n\n    function settingsEntryShouldBeHalfWidth(preference) {\n        if (preference instanceof _MultichoicePreference.MultichoicePreference) {\n            var longestValueLabel = preference.labels.reduce(function (acc, current) {\n                return current.length > acc.length ? current : acc;\n            });\n            return longestValueLabel.length <= MULTICHOICE_LABEL_MAX_LENGTH_FOR_HALFWIDTH_FIELDSET;\n        } else {\n            return false;\n        }\n    }\n\n    function settingsEntryHTMLElement(preference, preferenceValue) {\n        if (!(preference instanceof _Preference.Preference)) {\n            throw new TypeError(preference + \" is not a preference.\");\n        }\n\n        // Common\n        var div = document.createElement(\"div\");\n        var label = document.createElement(\"label\");\n        label.textContent = preference.label;\n        label.setAttribute(\"for\", \"\" + _strings2.default.html_name_preference_prefix + preference.key);\n        var description = document.createElement(\"aside\");\n        description.textContent = preference.description;\n        description.classList.add(_strings2.default.class_description);\n\n        // Boolean\n        if (preference instanceof _BooleanPreference.BooleanPreference) {\n            var input = document.createElement(\"input\");\n            input.type = \"checkbox\";\n            input.dataset.key = preference.key;\n            input.id = _strings2.default.html_name_preference_prefix + preference.key;\n            input.checked = preferenceValue === true;\n            div.appendChild(input);\n            div.appendChild(label);\n        }\n\n        // Multichoice\n        else if (preference instanceof _MultichoicePreference.MultichoicePreference) {\n                var fieldset = document.createElement(\"fieldset\");\n                var legend = document.createElement(\"legend\");\n                legend.textContent = preference.label;\n                fieldset.appendChild(legend);\n                preference.values.forEach(function (value, index) {\n                    var id = _strings2.default.html_name_preference_prefix + preference.key + \"-\" + preference.values[index];\n                    var radioButton = document.createElement(\"input\");\n                    radioButton.type = \"radio\";\n                    radioButton.id = id;\n                    radioButton.name = _strings2.default.html_name_preference_prefix + preference.key;\n                    radioButton.value = value;\n                    radioButton.dataset.key = preference.key;\n                    radioButton.checked = preferenceValue === value;\n                    var radioButtonLabel = document.createElement(\"label\");\n                    radioButtonLabel.textContent = preference.labels[index];\n                    radioButtonLabel.setAttribute(\"for\", id);\n                    fieldset.appendChild(radioButton);\n                    fieldset.appendChild(radioButtonLabel);\n                });\n                div.appendChild(fieldset);\n                if (settingsEntryShouldBeHalfWidth(preference)) {\n                    div.classList.add(_strings2.default.class_half_width);\n                }\n            }\n\n            // Range\n            else if (preference instanceof _RangePreference.RangePreference) {\n                    var isIntegerRange = preference instanceof _IntegerRangePreference.IntegerRangePreference;\n                    div.appendChild(label);\n                    var _input = document.createElement(\"input\");\n                    _input.type = \"number\";\n                    _input.dataset.key = preference.key;\n                    _input.dataset.numberType = isIntegerRange ? _strings2.default.pref_number_type_integer : _strings2.default.pref_number_type_float;\n                    _input.name = _strings2.default.html_name_preference_prefix + preference.key;\n                    _input.setAttribute(\"step\", isIntegerRange ? 1 : FLOAT_RANGE_PREFERENCE_STEP);\n                    _input.setAttribute(\"min\", preference.min);\n                    _input.setAttribute(\"max\", preference.max);\n                    _input.value = preferenceValue;\n                    div.appendChild(_input);\n                }\n\n        div.appendChild(description);\n        return div;\n    }\n\n    // PUBLIC API\n\n    function keyPressed(event, callback) {\n        if (isShowingDialog()) {\n            var currentlyFocusedButton = currentDialogWithBox.box.querySelector(BUTTON_TAG_NAME + \":focus\");\n            var shiftIsDown = _utilities.Keyboard.isDown(_utilities.KEY.SHIFT);\n            var previousButton = void 0,\n                nextButton = void 0;\n            if (isButton(currentlyFocusedButton)) {\n                previousButton = isButton(currentlyFocusedButton.previousSibling) ? currentlyFocusedButton.previousSibling : null;\n                nextButton = isButton(currentlyFocusedButton.nextSibling) ? currentlyFocusedButton.nextSibling : null;\n            }\n            switch (event.keyCode) {\n                case _utilities.KEY.SPACE:\n                case _utilities.KEY.ENTER:\n                    // Necessary because buttons do not automatically react to Space until keyup, making them feel sluggish compared to when Enter is used.\n                    if (isButton(currentlyFocusedButton)) {\n                        currentlyFocusedButton.click();\n                    }\n                    break;\n                case _utilities.KEY.ESCAPE:\n                    if (escapeShouldCloseCurrentDialog()) {\n                        currentDialogClosed();\n                    }\n                    break;\n                case _utilities.KEY.TAB:\n                    event.preventDefault();\n                    if (shiftIsDown) {\n                        if (isButton(previousButton)) {\n                            previousButton.focus();\n                        }\n                    } else if (isButton(nextButton)) {\n                        nextButton.focus();\n                    }\n                    break;\n                case _utilities.KEY.LEFT_ARROW:\n                    if (isButton(previousButton)) {\n                        previousButton.focus();\n                    }\n                    break;\n                case _utilities.KEY.RIGHT_ARROW:\n                    if (isButton(nextButton)) {\n                        nextButton.focus();\n                    }\n                    break;\n                default:\n                    callback(event);\n            }\n        } else {\n            callback(event);\n        }\n    }\n\n    function mouseClicked(event, callback) {\n        if (isShowingDialog()) {\n            // Do nothing particular, but consume the event.\n        } else {\n            callback(event);\n        }\n    }\n\n    function showDialog(dialog) {\n        if (isShowingDialog()) {\n            queuedDialogs.push(dialog);\n        } else {\n            showDialogRightAway(dialog);\n        }\n    }\n\n    function isShowingDialog() {\n        return currentDialogWithBox !== null;\n    }\n\n    function setEdgePadding(padding) {\n        left.style.width = ORIGINAL_LEFT_WIDTH + padding + \"px\";\n    }\n\n    function setBlurryScaling(allowed) {\n        document.body.classList[allowed === true ? \"add\" : \"remove\"](_strings2.default.class_blurry);\n    }\n\n    function playerReady(id) {\n        var index = id - 1;\n        var entry = controls.children[index];\n        if (!isLobbyEntry(entry)) {\n            (0, _utilities.logWarning)(\"Cannot mark player \" + id + \" as ready because controls.children[\" + index + \"] (\" + controls.children[index] + \") is not a valid lobby entry.\");\n        } else {\n            entry.children[1].classList.add(_strings2.default.class_active);\n        }\n    }\n\n    function playerUnready(id) {\n        var index = id - 1;\n        var entry = controls.children[index];\n        if (!isLobbyEntry(entry)) {\n            (0, _utilities.logWarning)(\"Cannot mark player \" + id + \" as unready because controls.children[\" + index + \"] (\" + controls.children[index] + \") is not a valid lobby entry.\");\n        } else {\n            entry.children[1].classList.remove(_strings2.default.class_active);\n        }\n    }\n\n    function allPlayersUnready() {\n        for (var id = 1; id <= controls.children.length; id++) {\n            playerUnready(id);\n        }\n    }\n\n    function gameStarted() {\n        hideLobby();\n    }\n\n    function gameQuit() {\n        hideKonecHry();\n        showLobby();\n        clearMessages();\n        resetScoreboard();\n        resetResults();\n        allPlayersUnready();\n        setCursorBehavior(_strings2.default.cursor_visible);\n    }\n\n    function konecHry() {\n        showKonecHry();\n        resetScoreboard();\n    }\n\n    function showKonecHry() {\n        KONEC_HRY.classList.remove(_strings2.default.class_hidden);\n    }\n\n    function hideKonecHry() {\n        KONEC_HRY.classList.add(_strings2.default.class_hidden);\n    }\n\n    function showMessage(message) {\n        if (!currentMessages.includes(message)) {\n            currentMessages.push(message);\n        }\n        updateMessages(currentMessages);\n    }\n\n    function showSettings() {\n        showingSettings = true;\n        settings.classList.remove(_strings2.default.class_hidden);\n    }\n\n    function hideSettings() {\n        showingSettings = false;\n        settings.classList.add(_strings2.default.class_hidden);\n    }\n\n    function isShowingSettings() {\n        return showingSettings;\n    }\n\n    function updateSettingsForm(preferencesWithData) {\n        (0, _utilities.flush)(settingsForm);\n        var settingsEntries = preferencesWithData.map(function (preferenceWithData) {\n            return settingsEntryHTMLElement(preferenceWithData.preference, preferenceWithData.value);\n        });\n        // Add special class to half-width divs on the right hand side:\n        var consecutiveHalfWidthDivs = 0;\n        for (var i = 0; i < settingsEntries.length; i++) {\n            var currentEntry = settingsEntries[i];\n            if (currentEntry.classList.contains(_strings2.default.class_half_width)) {\n                consecutiveHalfWidthDivs++;\n                if (consecutiveHalfWidthDivs % 2 === 0) {\n                    // Even number of consecutive half-width divs, so this one will be on the right hand side.\n                    currentEntry.classList.add(_strings2.default.class_right_hand_side);\n                }\n            } else {\n                consecutiveHalfWidthDivs = 0;\n            }\n        }\n        settingsEntries.forEach(function (settingsEntry) {\n            settingsForm.appendChild(settingsEntry);\n        });\n    }\n\n    function parseSettingsForm() {\n        var newSettings = [];\n        // <input> elements:\n        var inputs = settingsForm.querySelectorAll(\"input\");\n        Array.from(inputs).forEach(function (input) {\n            if (input.type === \"checkbox\") {\n                // checkbox\n                newSettings.push({ key: input.dataset.key, value: input.checked });\n            } else if (input.type === \"radio\") {\n                // radio\n                if (input.checked === true) {\n                    newSettings.push({ key: input.dataset.key, value: input.value });\n                }\n            } else if (input.type === \"number\") {\n                // number\n                newSettings.push({ key: input.dataset.key, value: (input.dataset.numberType === _strings2.default.pref_number_type_integer ? parseInt : parseFloat)(input.value) });\n            } else {\n                // text\n                newSettings.push({ key: input.dataset.key, value: input.value.toString() });\n            }\n        });\n        // <select> elements:\n        var selects = settingsForm.querySelectorAll(\"select\");\n        Array.from(selects).forEach(function (select) {\n            newSettings.push({ key: select.dataset.key, value: select.options[select.selectedIndex].value });\n        });\n        return newSettings;\n    }\n\n    function hideMessage(message) {\n        currentMessages = currentMessages.filter(function (msg) {\n            return msg !== message;\n        });\n        updateMessages(currentMessages);\n    }\n\n    function updateMessages(messages) {\n        if (!(0, _utilities.isHTMLElement)(messagesContainer)) {\n            (0, _utilities.logWarning)(\"Cannot update messages because \" + messagesContainer + \" is not an HTML element.\");\n        } else {\n            (0, _utilities.flush)(messagesContainer);\n            messages.forEach(function (message) {\n                messagesContainer.insertBefore(message.toHTMLElement(), null);\n            });\n        }\n    }\n\n    function clearMessages() {\n        currentMessages = [];\n        updateMessages(currentMessages);\n    }\n\n    function setMessageMode(mode) {\n        (0, _utilities.log)(\"Setting message mode to \" + mode + \".\");\n        switch (mode) {\n            case _strings2.default.pref_value_hints_warnings_only:\n                messagesContainer.classList.remove(_strings2.default.class_hints_none);\n                messagesContainer.classList.add(_strings2.default.class_hints_warnings_only);\n                break;\n            case _strings2.default.pref_value_hints_none:\n                messagesContainer.classList.remove(_strings2.default.class_hints_warnings_only);\n                messagesContainer.classList.add(_strings2.default.class_hints_none);\n                break;\n            default:\n                messagesContainer.classList.remove(_strings2.default.class_hints_warnings_only);\n                messagesContainer.classList.remove(_strings2.default.class_hints_none);\n        }\n    }\n\n    function updateBoard(board, id, newScore) {\n        if (!(0, _utilities.isHTMLElement)(board)) {\n            (0, _utilities.logWarning)(\"Cannot update any entry in \" + board + \" because it is not an HTML element.\");\n        } else {\n            var entry = board.children[id - 1];\n            if (!(0, _utilities.isHTMLElement)(entry)) {\n                (0, _utilities.logWarning)(\"Cannot update score of player \" + id + \" because \" + entry + \" is not an HTML element.\");\n            } else {\n                // The entry is an HTML element; let's update it!\n                var digitClassFactory = function digitClassFactory(digit) {\n                    return \"d\" + digit;\n                };\n                var createDigit = function createDigit() {\n                    return document.createElement(\"div\");\n                };\n                // Turn 528 into [\"d5\", \"d2\", \"d8\"]:\n                var newScoreDigitClasses = newScore.toString().split(\"\").map(digitClassFactory);\n                // Remove everything from the entry element before we insert new digits:\n                (0, _utilities.flush)(entry);\n                entry.classList.add(\"active\");\n                newScoreDigitClasses.forEach(function (digitClass, index) {\n                    var digitElement = createDigit(); // A completely clean element ...\n                    digitElement.classList.add(newScoreDigitClasses[index]); // ... that now has a digit class.\n                    entry.appendChild(digitElement);\n                });\n            }\n        }\n    }\n\n    function updateScoreOfPlayer(id, newScore) {\n        updateBoard(scoreboard, id, newScore);\n        updateBoard(results, id, newScore);\n    }\n\n    return {\n        keyPressed: keyPressed,\n        mouseClicked: mouseClicked,\n        playerReady: playerReady,\n        playerUnready: playerUnready,\n        gameStarted: gameStarted,\n        gameQuit: gameQuit,\n        konecHry: konecHry,\n        showDialog: showDialog,\n        isShowingDialog: isShowingDialog,\n        showSettings: showSettings,\n        hideSettings: hideSettings,\n        isShowingSettings: isShowingSettings,\n        updateSettingsForm: updateSettingsForm,\n        parseSettingsForm: parseSettingsForm,\n        updateScoreOfPlayer: updateScoreOfPlayer,\n        updateMessages: updateMessages,\n        showMessage: showMessage,\n        hideMessage: hideMessage,\n        clearMessages: clearMessages,\n        setMessageMode: setMessageMode,\n        setCursorBehavior: setCursorBehavior,\n        setBlurryScaling: setBlurryScaling,\n        setEdgePadding: setEdgePadding\n    };\n}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Game = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _mainloopMin = __webpack_require__(22);\n\nvar _mainloopMin2 = _interopRequireDefault(_mainloopMin);\n\nvar _Player = __webpack_require__(5);\n\nvar _Round = __webpack_require__(19);\n\nvar _utilities = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Game = exports.Game = function () {\n    function Game(config, renderer, guiController) {\n        _classCallCheck(this, Game);\n\n        // Class variables:\n        this.constructor.PRACTICE = \"practice\";\n        this.constructor.COMPETITIVE = \"competitive\";\n        this.constructor.DEFAULT_MODE = this.constructor.PRACTICE;\n        this.constructor.DEFAULT_TARGET_SCORE = 10;\n        this.constructor.MAX_TARGET_SCORE = 1000;\n        this.constructor.MAX_PLAYERS = 255; // since we use a Uint8Array\n        this.constructor.MAX_QUOTA_THAT_SPAWN_CIRCLES_MAY_FILL = 0.5; // out of available spawn area\n        this.constructor.DESIRED_MINIMUM_SPAWN_DISTANCE_TURNING_RADIUS_FACTOR = 1;\n        this.constructor.KONEC_HRY = \"KONEC HRY!\";\n\n        if (renderer === undefined) {\n            throw new TypeError(\"Cannot create a Game with no renderer.\");\n        } else if (!this.constructor.isRenderer(renderer)) {\n            throw new TypeError(renderer + \" is not a valid renderer.\");\n        }\n\n        if (guiController === undefined) {\n            throw new TypeError(\"Cannot create a Game with no GUI controller.\");\n        } else if (!this.constructor.isGUIController(guiController)) {\n            throw new TypeError(guiController + \" is not a valid GUI controller.\");\n        }\n\n        // Instance variables:\n        this.config = config;\n        this.width = config.canvas.width;\n        this.height = config.canvas.height;\n        this.pixels = null; // The actual array is created in start(), because the canvas width and height may have changed by then.\n        this.players = [];\n        this.rounds = [];\n        this.renderer = renderer;\n        this.guiController = guiController;\n        this.mode = this.constructor.DEFAULT_MODE;\n        this.preventSpawnkill = config.preventSpawnkill;\n        this.totalNumberOfTicks = 0;\n        this.targetScore = null;\n        this.initMainLoop();\n        this.started = false;\n        this.ended = false;\n        this.proceedHintTimer = null;\n        this.quitHintTimer = null;\n    }\n\n    _createClass(Game, [{\n        key: \"edgeOfSquare\",\n        value: function edgeOfSquare(coordinate) {\n            return Math.round(coordinate - this.config.thickness / 2);\n        }\n    }, {\n        key: \"maxPlayers\",\n        value: function maxPlayers() {\n            return this.constructor.MAX_PLAYERS;\n        }\n    }, {\n        key: \"maxTicksBetweenDraws\",\n        value: function maxTicksBetweenDraws() {\n            return Math.max(Math.floor(this.config.tickrate / this.config.speed), 1);\n        }\n\n        // Computes the angle change for one tick when turning, in radians:\n\n    }, {\n        key: \"computeAngleChange\",\n        value: function computeAngleChange() {\n            return this.config.speed / (this.config.tickrate * this.config.turningRadius);\n        }\n    }, {\n        key: \"computeSpawnArea\",\n        value: function computeSpawnArea() {\n            return {\n                x_min: this.config.spawnMargin,\n                y_min: this.config.spawnMargin,\n                x_max: this.width - this.config.spawnMargin,\n                y_max: this.height - this.config.spawnMargin\n            };\n        }\n    }, {\n        key: \"computeFrontCornerPixel\",\n        value: function computeFrontCornerPixel(edge, dir) {\n            var t = this.config.thickness;\n            var cf = 100;\n            return (cf * edge + cf * (t - 1) / 2 + cf * dir * (t - 1) / 2) / cf;\n        }\n    }, {\n        key: \"computeFrontEdgePixel\",\n        value: function computeFrontEdgePixel(edge, dir_parallel, dir_perpendicular, i) {\n            var t = this.config.thickness;\n            return edge + Math.abs(dir_parallel) * (t - 1) / 2 + dir_parallel * (t - 1) / 2 + Math.abs(dir_perpendicular) * i;\n        }\n    }, {\n        key: \"computeHitbox\",\n        value: function computeHitbox(player, left, top) {\n            var hitboxPixels = [];\n            var lastPosition = player.getLastPosition();\n            var dir_horizontal = left - lastPosition.left; // positive => going right; negative => going left\n            var dir_vertical = top - lastPosition.top; // positive => going down;  negative => going up\n            if ((0, _utilities.sameAbs)(dir_horizontal, dir_vertical)) {\n                // \"45 degree\" draw\n                var frontPixel_left = this.computeFrontCornerPixel(left, dir_horizontal);\n                var frontPixel_top = this.computeFrontCornerPixel(top, dir_vertical);\n                hitboxPixels.push(this.pixelAddress(frontPixel_left, frontPixel_top));\n            } else {\n                // \"90 degree\" draw\n                for (var i = 0; i < this.config.thickness; i++) {\n                    var _frontPixel_left = this.computeFrontEdgePixel(left, dir_horizontal, dir_vertical, i);\n                    var _frontPixel_top = this.computeFrontEdgePixel(top, dir_vertical, dir_horizontal, i);\n                    hitboxPixels.push(this.pixelAddress(_frontPixel_left, _frontPixel_top));\n                }\n            }\n            return hitboxPixels;\n        }\n    }, {\n        key: \"desiredMinimumSpawnDistance\",\n        value: function desiredMinimumSpawnDistance() {\n            // to closest opponent\n            // This is calculated by multiplying the turning radius with a constant factor and then adding the Kurve thickness.\n            var turningRadiusPart = this.config.turningRadius * this.constructor.DESIRED_MINIMUM_SPAWN_DISTANCE_TURNING_RADIUS_FACTOR;\n            return (0, _utilities.round)(this.config.thickness + turningRadiusPart, 2);\n        }\n    }, {\n        key: \"safeMinimumSpawnDistance\",\n        value: function safeMinimumSpawnDistance() {\n            // to closest opponent, without risking infinite or too much sampling\n            var spawnAreaCoordinates = this.computeSpawnArea();\n            var availableSpawnArea = (spawnAreaCoordinates.x_max - spawnAreaCoordinates.x_min) * (spawnAreaCoordinates.y_max - spawnAreaCoordinates.y_min);\n            var maximumSafeDistance = Math.sqrt(this.constructor.MAX_QUOTA_THAT_SPAWN_CIRCLES_MAY_FILL * availableSpawnArea / (this.getNumberOfPlayers() * Math.PI));\n            return Math.min(this.desiredMinimumSpawnDistance(), (0, _utilities.round)(maximumSafeDistance, 2));\n        }\n    }, {\n        key: \"isSafeSpawnPosition\",\n        value: function isSafeSpawnPosition(pos) {\n            function distanceBetween(pos1, pos2) {\n                return Math.sqrt(Math.pow(pos2.x - pos1.x, 2) + Math.pow(pos2.y - pos1.y, 2));\n            }\n            for (var i = 0; i < this.players.length; i++) {\n                var playerPos = { x: this.players[i].x, y: this.players[i].y };\n                if (distanceBetween(playerPos, pos) < this.safeMinimumSpawnDistance()) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }, {\n        key: \"safeSpawnPosition\",\n        value: function safeSpawnPosition() {\n            var safePos = void 0;\n            do {\n                safePos = this.randomSpawnPosition();\n            } while (!this.isSafeSpawnPosition(safePos));\n            return safePos;\n        }\n    }, {\n        key: \"randomSpawnPosition\",\n        value: function randomSpawnPosition() {\n            var spawnArea = this.computeSpawnArea();\n            return {\n                x: (0, _utilities.randomFloat)(spawnArea.x_min, spawnArea.x_max),\n                y: (0, _utilities.randomFloat)(spawnArea.y_min, spawnArea.y_max)\n            };\n        }\n    }, {\n        key: \"randomSpawnAngle\",\n        value: function randomSpawnAngle() {\n            return (0, _utilities.randomFloat)(this.config.minSpawnAngle, this.config.maxSpawnAngle);\n        }\n    }, {\n        key: \"pixelAddress\",\n        value: function pixelAddress(x, y) {\n            return y * this.width + x;\n        }\n    }, {\n        key: \"pixelAddressToCoordinates\",\n        value: function pixelAddressToCoordinates(addr) {\n            var x = addr % this.width;\n            var y = (addr - x) / this.width;\n            return \"(\" + x + \", \" + y + \")\";\n        }\n\n        // GETTERS\n\n    }, {\n        key: \"getMode\",\n        value: function getMode() {\n            return this.mode;\n        }\n    }, {\n        key: \"getTargetScore\",\n        value: function getTargetScore() {\n            return this.targetScore;\n        }\n    }, {\n        key: \"getPlayers\",\n        value: function getPlayers() {\n            return this.players;\n        }\n\n        // Returns the player with the specified ID, or undefined if no such player exists:\n\n    }, {\n        key: \"getPlayerByID\",\n        value: function getPlayerByID(id) {\n            return this.players.find(function (player) {\n                return player.hasID(id);\n            });\n        }\n    }, {\n        key: \"getLivePlayers\",\n        value: function getLivePlayers() {\n            var isAlive = this.constructor.isAlive;\n            return this.players.filter(isAlive);\n        }\n    }, {\n        key: \"getNumberOfPlayers\",\n        value: function getNumberOfPlayers() {\n            return this.players.length;\n        }\n    }, {\n        key: \"getNumberOfLivePlayers\",\n        value: function getNumberOfLivePlayers() {\n            return this.getLivePlayers().length;\n        }\n    }, {\n        key: \"getScoreOfPlayer\",\n        value: function getScoreOfPlayer(id) {\n            var accumulateScore = function accumulateScore(sum, round) {\n                return sum + round.getSuccessOfPlayer(id);\n            };\n            return this.rounds.reduce(accumulateScore, 0);\n        }\n    }, {\n        key: \"getCurrentRound\",\n        value: function getCurrentRound() {\n            return this.rounds[this.rounds.length - 1];\n        }\n\n        // SETTERS\n\n    }, {\n        key: \"setMode\",\n        value: function setMode(mode) {\n            if (mode === this.constructor.COMPETITIVE || mode === this.constructor.PRACTICE) {\n                (0, _utilities.log)(\"Setting game mode to \" + mode + \".\");\n                this.mode = mode;\n            } else {\n                (0, _utilities.logError)(mode + \" is not a valid game mode. Keeping \" + this.getMode() + \".\");\n            }\n        }\n    }, {\n        key: \"setTargetScore\",\n        value: function setTargetScore(score) {\n            var ts = this.constructor.DEFAULT_TARGET_SCORE;\n            var mts = this.constructor.MAX_TARGET_SCORE;\n            // Neither floats nor negative numbers are allowed:\n            if ((0, _utilities.isInt)(score) && score > 0) {\n                // Check if the desired target score is allowed:\n                if (score > mts) {\n                    // It is too high. Fall back to max value:\n                    (0, _utilities.logWarning)(score + \" is larger than the maximum allowed target score of \" + mts + \". Falling back to \" + mts + \".\");\n                    ts = mts;\n                } else {\n                    // The desired target score is OK!\n                    (0, _utilities.log)(\"Setting target score to \" + score + \".\");\n                    ts = score;\n                }\n            } else {\n                (0, _utilities.logWarning)(score + \" is not a valid target score. Defaulting to \" + ts + \".\");\n            }\n            this.targetScore = ts;\n        }\n    }, {\n        key: \"setSize\",\n        value: function setSize(width, height) {\n            this.width = width;\n            this.height = height;\n            this.renderer.setSize(width, height);\n        }\n    }, {\n        key: \"setPreventSpawnkill\",\n        value: function setPreventSpawnkill(mode) {\n            this.preventSpawnkill = mode;\n        }\n\n        // CHECKERS\n\n    }, {\n        key: \"isStarted\",\n        value: function isStarted() {\n            return this.started;\n        }\n    }, {\n        key: \"isEnded\",\n        value: function isEnded() {\n            return this.ended;\n        }\n\n        /** Returns true if a round is over (including when KONEC HRY is being shown). */\n\n    }, {\n        key: \"isPostRound\",\n        value: function isPostRound() {\n            return this.getCurrentRound().getResults().length === this.getNumberOfPlayers();\n        }\n    }, {\n        key: \"isLive\",\n        value: function isLive() {\n            if (this.isCompetitive()) {\n                return this.getNumberOfLivePlayers() > 1;\n            } else {\n                return this.getNumberOfLivePlayers() > 0;\n            }\n        }\n\n        // Caution: Returns true if called during the spawn procedure, since it only checks whether the game is live or not.\n\n    }, {\n        key: \"isRoundOver\",\n        value: function isRoundOver() {\n            return !this.isLive();\n        }\n    }, {\n        key: \"isGameOver\",\n        value: function isGameOver() {\n            var _this = this;\n\n            var hasReachedTargetScore = function hasReachedTargetScore(player) {\n                return _this.getScoreOfPlayer(player.getID()) >= _this.getTargetScore();\n            };\n            return !this.isLive() && this.isCompetitive() && this.players.some(hasReachedTargetScore);\n        }\n    }, {\n        key: \"isCompetitive\",\n        value: function isCompetitive() {\n            return this.getMode() === this.constructor.COMPETITIVE;\n        }\n    }, {\n        key: \"isOccupiedPixelAddress\",\n        value: function isOccupiedPixelAddress(addr) {\n            return this.pixels[addr] > 0;\n        }\n    }, {\n        key: \"isCrashing\",\n        value: function isCrashing(player, left, top) {\n            var hitboxPixels = this.computeHitbox(player, left, top);\n            return hitboxPixels.some(this.isOccupiedPixelAddress, this);\n        }\n\n        /**\r\n         * Checks whether a draw at the specified coordinates is inside the field.\r\n         * @param {Number} left The x coordinate of the left edge of the draw.\r\n         * @param {Number} top  The y coordinate of the top edge of the draw.\r\n         */\n\n    }, {\n        key: \"isOnField\",\n        value: function isOnField(left, top) {\n            return left >= 0 && top >= 0 && left + this.config.thickness <= this.width && top + this.config.thickness <= this.height;\n        }\n\n        /** \r\n         * Checks whether there is a player with a specific ID in the game.\r\n         * @param {Number} id The ID to check for.\r\n         */\n\n    }, {\n        key: \"hasPlayer\",\n        value: function hasPlayer(id) {\n            return _Player.Player.isPlayer(this.getPlayerByID(id));\n        }\n\n        // DOERS\n\n        /** \r\n         * Adds a player to the game.\r\n         * @param {Player} player The player to add.\r\n         */\n\n    }, {\n        key: \"addPlayer\",\n        value: function addPlayer(player) {\n            var maxPlayers = this.maxPlayers();\n            if (!_Player.Player.isPlayer(player)) {\n                throw new TypeError(\"Cannot add \" + player + \" to the game because it is not a player.\");\n            } else if (player.getID() > maxPlayers) {\n                throw new RangeError(\"Cannot add \" + player + \" to the game because player IDs larger than \" + maxPlayers + \" are not supported.\");\n            } else if (this.hasPlayer(player.getID())) {\n                (0, _utilities.logWarning)(\"Not adding \" + player + \" to the game because there is already a player with ID \" + player.getID() + \".\");\n            } else {\n                (0, _utilities.log)(player + \" ready!\");\n                this.players.push(player);\n                player.setMaxSpeed(this.config.speed);\n                this.GUI_playerReady(player.getID());\n            }\n        }\n\n        /** \r\n         * Removes a player from the game.\r\n         * @param {Number} id The ID of the player to remove.\r\n         */\n\n    }, {\n        key: \"removePlayer\",\n        value: function removePlayer(id) {\n            var playerToRemove = this.getPlayerByID(id);\n            // Notify GUI iff the player exists:\n            if (_Player.Player.isPlayer(playerToRemove)) {\n                (0, _utilities.log)(playerToRemove + \" unready!\");\n                this.GUI_playerUnready(id);\n            }\n            // Update this.players:\n            this.players = this.players.filter(function (player) {\n                return player !== playerToRemove;\n            });\n        }\n\n        /** Starts the game. */\n\n    }, {\n        key: \"start\",\n        value: function start() {\n            var _this2 = this;\n\n            if (this.isCompetitive()) {\n                this.setTargetScore(this.constructor.calculateTargetScore(this.getNumberOfPlayers()));\n                this.players.forEach(function (player) {\n                    _this2.GUI_updateScoreOfPlayer(player.getID(), 0);\n                });\n            }\n            (0, _utilities.log)(\"Starting game!\");\n            this.GUI_gameStarted();\n            _mainloopMin2.default.start();\n            this.started = true;\n            this.pixels = new Uint8Array(this.width * this.height);\n            this.beginNewRound();\n        }\n\n        /** Announce KONEC HRY, show results etc. */\n\n    }, {\n        key: \"konecHry\",\n        value: function konecHry() {\n            (0, _utilities.log)(this.constructor.KONEC_HRY);\n            this.ended = true;\n            this.GUI_konecHry();\n            this.quitHintTimer = setTimeout(this.showQuitHint.bind(this), this.config.hintDelay);\n        }\n    }, {\n        key: \"quit\",\n        value: function quit() {\n            clearTimeout(this.quitHintTimer);\n            clearTimeout(this.proceedHintTimer);\n        }\n    }, {\n        key: \"clearField\",\n        value: function clearField() {\n            this.pixels.fill(0);\n            this.Render_clearField();\n        }\n    }, {\n        key: \"showProceedHint\",\n        value: function showProceedHint() {\n            this.GUI_showMessage(this.config.messages.next);\n        }\n    }, {\n        key: \"hideProceedHint\",\n        value: function hideProceedHint() {\n            clearTimeout(this.proceedHintTimer);\n            this.GUI_hideMessage(this.config.messages.next);\n        }\n    }, {\n        key: \"showQuitHint\",\n        value: function showQuitHint() {\n            this.GUI_showMessage(this.config.messages.quit);\n        }\n    }, {\n        key: \"hideQuitHint\",\n        value: function hideQuitHint() {\n            clearTimeout(this.quitHintTimer);\n            this.GUI_hideMessage(this.config.messages.quit);\n        }\n    }, {\n        key: \"beginNewRound\",\n        value: function beginNewRound() {\n            this.rounds.push(new _Round.Round());\n            (0, _utilities.log)(\"======== ROUND \" + this.rounds.length + \" ========\");\n            this.resetPlayers();\n            this.clearField();\n            // Sort the players by their IDs so they spawn in the correct order:\n            this.sortPlayers();\n            this.spawnAndStartPlayers();\n        }\n    }, {\n        key: \"endRound\",\n        value: function endRound() {\n            this.stopPlayers();\n            this.proceedHintTimer = setTimeout(this.showProceedHint.bind(this), this.config.hintDelay);\n        }\n    }, {\n        key: \"sortPlayers\",\n        value: function sortPlayers() {\n            this.players.sort(function (a, b) {\n                return a.getID() - b.getID();\n            });\n        }\n    }, {\n        key: \"startPlayer\",\n        value: function startPlayer(player) {\n            player.start();\n        }\n    }, {\n        key: \"stopPlayer\",\n        value: function stopPlayer(player) {\n            player.stop();\n        }\n    }, {\n        key: \"resetPlayer\",\n        value: function resetPlayer(player) {\n            player.reset();\n        }\n\n        /** Starts all players. */\n\n    }, {\n        key: \"startPlayers\",\n        value: function startPlayers() {\n            this.players.forEach(this.startPlayer);\n        }\n    }, {\n        key: \"stopPlayers\",\n        value: function stopPlayers() {\n            this.players.forEach(this.stopPlayer);\n        }\n    }, {\n        key: \"resetPlayers\",\n        value: function resetPlayers() {\n            this.players.forEach(this.resetPlayer);\n        }\n    }, {\n        key: \"occupyPixel\",\n        value: function occupyPixel(x, y, id) {\n            this.pixels[this.pixelAddress(x, y)] = id;\n        }\n    }, {\n        key: \"occupy\",\n        value: function occupy(player, left, top) {\n            var right = left + this.config.thickness;\n            var bottom = top + this.config.thickness;\n            var id = player.getID();\n            (0, _utilities.forfor)(top, bottom, left, right, this.occupyPixel.bind(this), id);\n            this.Render_drawSquare(left, top, player.getColor());\n        }\n    }, {\n        key: \"flicker\",\n        value: function flicker(player) {\n            var _this3 = this;\n\n            var stopFlickering = function stopFlickering() {\n                clearInterval(flickerTicker);\n                var left = _this3.edgeOfSquare(player.x);\n                var top = _this3.edgeOfSquare(player.y);\n                _this3.Render_drawSquare(left, top, player.getColor());\n            };\n            var self = this;\n            var left = this.edgeOfSquare(player.x);\n            var top = this.edgeOfSquare(player.y);\n            var color = player.getColor();\n            var isVisible = false;\n            var flickerTicker = setInterval(function () {\n                if (isVisible) {\n                    _this3.Render_clearSquare(left, top);\n                } else {\n                    _this3.Render_drawSquare(left, top, color);\n                }\n                isVisible = !isVisible;\n            }, 1000 / this.config.flickerFrequency);\n            setTimeout(stopFlickering, self.config.flickerDuration);\n        }\n    }, {\n        key: \"spawn\",\n        value: function spawn(player, position, direction) {\n            (0, _utilities.log)(player + \" spawning at (\" + (0, _utilities.round)(position.x, 2) + \", \" + (0, _utilities.round)(position.y, 2) + \").\");\n            player.x = position.x;\n            player.y = position.y;\n            player.direction = direction;\n            var left = this.edgeOfSquare(player.x);\n            var top = this.edgeOfSquare(player.y);\n            player.beAt(left, top);\n            this.occupy(player, left, top);\n            this.flicker(player);\n        }\n\n        /** Spawns and then starts all players. */\n\n    }, {\n        key: \"spawnAndStartPlayers\",\n        value: function spawnAndStartPlayers() {\n            var self = this;\n            (0, _utilities.log)(\"Spawnkill prevention is \" + (this.preventSpawnkill ? \"enabled. No two players will spawn within \" + self.safeMinimumSpawnDistance() + \" Kuxels of each other.\" : \"disabled. Players may spawn arbitrarily close to each other.\"));\n            // Spawn each player, then wait for it to finish flickering before spawning the next one:\n            (function spawnPlayer(i) {\n                if (i < self.players.length) {\n                    var spawnPosition = self.preventSpawnkill ? self.safeSpawnPosition() : self.randomSpawnPosition();\n                    self.spawn(self.players[i], spawnPosition, self.randomSpawnAngle());\n                    setTimeout(function () {\n                        return spawnPlayer(++i);\n                    }, self.config.flickerDuration);\n                } else {\n                    // All players have spawned. Start them!\n                    self.startPlayers();\n                }\n            })(0);\n        }\n\n        /**\r\n         * Draws a specific player.\r\n         */\n\n    }, {\n        key: \"drawPlayer\",\n        value: function drawPlayer(player) {\n            var thickness = this.config.thickness;\n            while (player.isAlive() && !player.queuedDraws.isEmpty()) {\n                var color = player.getColor();\n                var lastPosition = player.getLastPosition();\n                var currentDraw = player.queuedDraws.dequeue();\n                var left = this.edgeOfSquare(currentDraw.x);\n                var top = this.edgeOfSquare(currentDraw.y);\n                if (!player.justWasAt(left, top)) {\n                    // The new position is not identical to the last one.\n                    var diff_left = left - player.getLastPosition().left;\n                    var diff_top = top - player.getLastPosition().top;\n                    if (!this.isOnField(left, top)) {\n                        // The player wants to draw outside the playing field => DIE.\n                        this.death(player, \"crashed into the wall\");\n                        this.occupy(player, lastPosition.left, lastPosition.top);\n                    } else if (this.isCrashing(player, left, top)) {\n                        // The player wants to draw on a spot occupied by a Kurve => DIE.\n                        this.death(player, \"crashed\");\n                        this.occupy(player, lastPosition.left, lastPosition.top);\n                    } else {\n                        // The player is not dying.\n                        player.beAt(left, top);\n                        if (!player.isHoly()) {\n                            // The player is not holy, so it should draw.\n                            this.occupy(player, left, top);\n                        }\n                    }\n                }\n            }\n        }\n    }, {\n        key: \"drawHead\",\n        value: function drawHead(player) {\n            if (player.isAlive()) {\n                var lastPosition = player.getLastPosition();\n                var left = lastPosition.left;\n                var top = lastPosition.top;\n                var color = player.getColor();\n                this.Render_drawHead(left, top, color);\n            }\n        }\n    }, {\n        key: \"updateGUIScoreboard\",\n        value: function updateGUIScoreboard() {\n            var _this4 = this;\n\n            var updateScore = function updateScore(player) {\n                var id = player.getID();\n                _this4.GUI_updateScoreOfPlayer(id, _this4.getScoreOfPlayer(id));\n            };\n            this.getLivePlayers().forEach(updateScore);\n        }\n    }, {\n        key: \"death\",\n        value: function death(player, cause) {\n            player.die(cause);\n            this.getCurrentRound().add(player);\n            this.updateGUIScoreboard();\n            if (this.isRoundOver()) {\n                if (this.isCompetitive()) {\n                    var isAlive = this.constructor.isAlive;\n                    var winner = this.players.find(isAlive);\n                    this.winRound(winner);\n                }\n                this.endRound();\n            }\n        }\n    }, {\n        key: \"winRound\",\n        value: function winRound(player) {\n            (0, _utilities.log)(player + \" won the round.\");\n            // Ugly fix for the bug where the winner's head disappears when the round ends:\n            this.occupy(player, this.edgeOfSquare(player.x), this.edgeOfSquare(player.y));\n            this.getCurrentRound().add(player);\n        }\n    }, {\n        key: \"proceedKeyPressed\",\n        value: function proceedKeyPressed() {\n            this.hideProceedHint();\n            this.hideQuitHint();\n            if (this.isGameOver()) {\n                // The game is over, so we should show KONEC HRY:\n                this.konecHry();\n            } else if (this.isPostRound()) {\n                // We are post round and the game is not over, so we should proceed to the next round:\n                this.beginNewRound();\n            }\n        }\n    }, {\n        key: \"shouldShowReloadConfirmationOnReloadKey\",\n        value: function shouldShowReloadConfirmationOnReloadKey() {\n            return this.isPostRound();\n        }\n    }, {\n        key: \"shouldQuitOnQuitKey\",\n        value: function shouldQuitOnQuitKey() {\n            return this.isPostRound() && !this.isGameOver();\n        }\n    }, {\n        key: \"shouldQuitOnProceedKey\",\n        value: function shouldQuitOnProceedKey() {\n            return this.isEnded();\n        }\n\n        // RENDERER AND GUI CONTROLLER COMMUNICATION\n\n    }, {\n        key: \"GUI_playerReady\",\n        value: function GUI_playerReady(id) {\n            this.guiController.playerReady(id);\n        }\n    }, {\n        key: \"GUI_playerUnready\",\n        value: function GUI_playerUnready(id) {\n            this.guiController.playerUnready(id);\n        }\n    }, {\n        key: \"GUI_updateScoreOfPlayer\",\n        value: function GUI_updateScoreOfPlayer(id, newScore) {\n            this.guiController.updateScoreOfPlayer(id, newScore);\n        }\n    }, {\n        key: \"GUI_gameStarted\",\n        value: function GUI_gameStarted() {\n            this.guiController.gameStarted();\n        }\n    }, {\n        key: \"GUI_konecHry\",\n        value: function GUI_konecHry() {\n            this.guiController.konecHry();\n        }\n    }, {\n        key: \"GUI_showMessage\",\n        value: function GUI_showMessage(message) {\n            this.guiController.showMessage(message);\n        }\n    }, {\n        key: \"GUI_hideMessage\",\n        value: function GUI_hideMessage(message) {\n            this.guiController.hideMessage(message);\n        }\n    }, {\n        key: \"Render_drawSquare\",\n        value: function Render_drawSquare(left, top, color) {\n            this.renderer.drawSquare(left, top, this.config.thickness, color);\n        }\n    }, {\n        key: \"Render_drawHead\",\n        value: function Render_drawHead(left, top, color) {\n            this.renderer.drawSquare_overlay(left, top, this.config.thickness, color);\n        }\n    }, {\n        key: \"Render_clearSquare\",\n        value: function Render_clearSquare(left, top) {\n            this.renderer.clearSquare(left, top, this.config.thickness);\n        }\n    }, {\n        key: \"Render_clearHeads\",\n        value: function Render_clearHeads() {\n            this.renderer.clearRectangle_overlay(0, 0, this.width, this.height);\n        }\n    }, {\n        key: \"Render_clearField\",\n        value: function Render_clearField() {\n            this.renderer.clearRectangle(0, 0, this.width, this.height);\n            this.renderer.clearRectangle_overlay(0, 0, this.width, this.height);\n        }\n\n        // MAIN LOOP\n\n\n    }, {\n        key: \"updatePlayer\",\n        value: function updatePlayer(player, delta) {\n            if (player.isAlive()) {\n                var angleChange = this.computeAngleChange();\n                var direction = player.getDirection();\n                if (player.isPressingLeft()) {\n                    direction = direction + angleChange; // let compound assignment not optimizable in V8\n                }\n                if (player.isPressingRight()) {\n                    direction = direction - angleChange; // let compound assignment not optimizable in V8\n                }\n                // We use normalizeAngle so the angle stays in the interval -pi < dir <= pi:\n                player.setDirection((0, _utilities.normalizeAngle)(direction));\n                var theta = player.getVelocity() * delta / 1000;\n                player.x += theta * Math.cos(player.direction);\n                player.y -= theta * Math.sin(player.direction);\n            }\n        }\n\n        /**\r\n         * Updates everything on each tick.\r\n         * @param {Number} delta\r\n         *   The amount of time since the last update, in seconds.\r\n         */\n\n    }, {\n        key: \"update\",\n        value: function update(delta) {\n            var _this5 = this;\n\n            this.players.forEach(function (player) {\n                _this5.updatePlayer(player, delta);\n            });\n            if (this.totalNumberOfTicks % this.maxTicksBetweenDraws() === 0) {\n                this.getLivePlayers().forEach(function (player) {\n                    player.enqueueDraw();\n                });\n            }\n            this.totalNumberOfTicks++;\n            // Cycle players so the players take turns being prioritized:\n            if (this.isLive()) {\n                this.players.unshift(this.players.pop());\n            }\n        }\n\n        /**\r\n         * Draws all players.\r\n         */\n\n    }, {\n        key: \"draw\",\n        value: function draw() {\n            this.Render_clearHeads();\n            this.players.forEach(this.drawPlayer, this);\n            this.players.forEach(this.drawHead, this);\n        }\n\n        /**\r\n         * Updates the FPS counter etc.\r\n         * @param {Number} framerate\r\n         *   The smoothed frames per second.\r\n         * @param {Boolean} panic\r\n         *   Whether the main loop panicked because the simulation fell too far behind real time.\r\n         */\n\n    }, {\n        key: \"end\",\n        value: function end(framerate, panic) {\n            if (panic) {\n                var discardedTime = Math.round(_mainloopMin2.default.resetFrameDelta());\n                console.warn(\"Main loop panicked. Discarding \" + discardedTime + \"ms.\");\n            }\n        }\n\n        /**\r\n         * Initiates the main loop.\r\n         */\n\n    }, {\n        key: \"initMainLoop\",\n        value: function initMainLoop() {\n            this.MainLoop = _mainloopMin2.default;\n            this.MainLoop.setUpdate(this.update.bind(this)).setDraw(this.draw.bind(this)).setEnd(this.end.bind(this)).setSimulationTimestep(1000 / this.config.tickrate).setMaxAllowedFPS(this.config.maxFramerate);\n        }\n    }], [{\n        key: \"isRenderer\",\n        value: function isRenderer(obj) {\n            // TODO\n            return obj !== undefined;\n        }\n    }, {\n        key: \"isGUIController\",\n        value: function isGUIController(obj) {\n            // TODO\n            return obj !== undefined;\n        }\n    }, {\n        key: \"isAlive\",\n        value: function isAlive(player) {\n            return player.isAlive();\n        }\n    }, {\n        key: \"calculateTargetScore\",\n        value: function calculateTargetScore(numberOfPlayers) {\n            // Default target score is (n-1) * 10 for n players:\n            return (numberOfPlayers - 1) * 10;\n        }\n    }]);\n\n    return Game;\n}();\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Renderer = Renderer;\nfunction Renderer(mainCanvas, overlayCanvas) {\n\n    var context_main = mainCanvas.getContext(\"2d\");\n    var context_overlay = overlayCanvas.getContext(\"2d\");\n\n    // PRIVATE FUNCTIONS:\n\n    function _drawRectangle(context, left, top, width, height, color) {\n        context.fillStyle = color;\n        context.fillRect(left, top, width, height);\n    }\n\n    function _clearRectangle(context, left, top, width, height) {\n        context.clearRect(left, top, width, height);\n    }\n\n    function _setSize(canvas, width, height) {\n        canvas.width = width;\n        canvas.height = height;\n    }\n\n    // PUBLIC API:\n\n    function setSize(width, height) {\n        _setSize(mainCanvas, width, height);\n        _setSize(overlayCanvas, width, height);\n    }\n\n    // Main canvas:\n\n    function drawSquare(left, top, size, color) {\n        _drawRectangle(context_main, left, top, size, size, color);\n    }\n\n    function clearSquare(left, top, size) {\n        _clearRectangle(context_main, left, top, size, size);\n    }\n\n    function clearRectangle(left, top, width, height) {\n        _clearRectangle(context_main, left, top, width, height);\n    }\n\n    // Overlay canvas:\n\n    function drawSquare_overlay(left, top, size, color) {\n        _drawRectangle(context_overlay, left, top, size, size, color);\n    }\n\n    function clearSquare_overlay(left, top, size) {\n        _clearRectangle(context_overlay, left, top, size, size);\n    }\n\n    function clearRectangle_overlay(left, top, width, height) {\n        _clearRectangle(context_overlay, left, top, width, height);\n    }\n\n    return {\n        drawSquare: drawSquare,\n        clearSquare: clearSquare,\n        clearRectangle: clearRectangle,\n        drawSquare_overlay: drawSquare_overlay,\n        clearSquare_overlay: clearSquare_overlay,\n        clearRectangle_overlay: clearRectangle_overlay,\n        setSize: setSize\n    };\n}\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InfoMessage = undefined;\n\nvar _Message2 = __webpack_require__(10);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar InfoMessage = exports.InfoMessage = function (_Message) {\n    _inherits(InfoMessage, _Message);\n\n    function InfoMessage(text) {\n        _classCallCheck(this, InfoMessage);\n\n        return _possibleConstructorReturn(this, (InfoMessage.__proto__ || Object.getPrototypeOf(InfoMessage)).call(this, text, \"info\"));\n    }\n\n    return InfoMessage;\n}(_Message2.Message);\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.WarningMessage = undefined;\n\nvar _Message2 = __webpack_require__(10);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WarningMessage = exports.WarningMessage = function (_Message) {\n    _inherits(WarningMessage, _Message);\n\n    function WarningMessage(text) {\n        _classCallCheck(this, WarningMessage);\n\n        return _possibleConstructorReturn(this, (WarningMessage.__proto__ || Object.getPrototypeOf(WarningMessage)).call(this, text, \"warning\"));\n    }\n\n    return WarningMessage;\n}(_Message2.Message);\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PreferenceManager = PreferenceManager;\n\nvar _PreferencesUtilities = __webpack_require__(4);\n\nvar _Preference = __webpack_require__(1);\n\nvar _PreferenceWithValue = __webpack_require__(24);\n\nfunction PreferenceManager(preferencesData) {\n    var LOCALSTORAGE_PREFIX = \"pref_key_\";\n\n    // Parse and validate preferences:\n    (0, _PreferencesUtilities.log)(\"Validating preferences ...\");\n    var PREFERENCES = parsePreferences(preferencesData);\n    (0, _PreferencesUtilities.log)(\"Done.\");\n\n    // Initialize cached preference database:\n    var CACHED_PREFERENCES_WITH_VALUES = getAllPreferencesWithDefaultValues();\n    CACHED_PREFERENCES_WITH_VALUES.forEach(function (preferenceWithValue) {\n        var key = preferenceWithValue.preference.key;\n        try {\n            var savedValue = getSaved(key);\n            var _defaultValue = preferenceWithValue.preference.getDefaultValue();\n            if (savedValue === null) {\n                (0, _PreferencesUtilities.log)(\"Using default value '\" + _defaultValue + \"' for preference '\" + key + \"' since there was no saved value.\");\n            }\n            preferenceWithValue.value = savedValue !== null ? savedValue : _defaultValue;\n        } catch (e) {\n            if (e instanceof TypeError) {\n                (0, _PreferencesUtilities.logWarning)(\"Using default value '\" + defaultValue + \"' for preference '\" + key + \"' since the saved value in localStorage was not a valid one.\");\n            } else {\n                (0, _PreferencesUtilities.logWarning)(\"Using default value '\" + defaultValue + \"' for preference '\" + key + \"' since no saved value could be loaded from localStorage.\");\n            }\n        }\n    });\n\n    function parsePreferences(preferencesData) {\n        return preferencesData.map(parsePreference);\n    }\n\n    function parsePreference(pref, index) {\n        if (!(0, _PreferencesUtilities.isString)(pref.key)) {\n            throw new TypeError(\"'The preference at index \" + index + \" does not have a valid key (found \" + pref.key + \").\");\n        } else if (pref.type === undefined || !(pref.type.prototype instanceof _Preference.Preference)) {\n            throw new TypeError(\"Preference '\" + pref.key + \"' does not use a valid preference type (found \" + pref.type + \").\");\n        } else if (pref.default === undefined) {\n            throw new TypeError(\"Preference '\" + pref.key + \"' has no default value.\");\n        }\n        return new pref.type(pref);\n    }\n\n    function preferenceExists(key) {\n        return getPreference(key) !== undefined;\n    }\n\n    function getPreference(key) {\n        return PREFERENCES.find(function (pref) {\n            return pref.key === key;\n        });\n    }\n\n    function getCachedPreference(key) {\n        return CACHED_PREFERENCES_WITH_VALUES.find(function (preferenceWithValue) {\n            return preferenceWithValue.preference.key === key;\n        });\n    }\n\n    function getAllPreferencesWithValues_saved() {\n        // throws SecurityError etc\n        return PREFERENCES.map(function (preference) {\n            return new _PreferenceWithValue.PreferenceWithValue(preference, getSaved(preference.key));\n        });\n    }\n\n    function getAllPreferencesWithValues_cached() {\n        return PREFERENCES.map(function (preference) {\n            return new _PreferenceWithValue.PreferenceWithValue(preference, getCached(preference.key));\n        });\n    }\n\n    function getAllPreferencesWithDefaultValues() {\n        return PREFERENCES.map(function (preference) {\n            return new _PreferenceWithValue.PreferenceWithValue(preference, preference.getDefaultValue());\n        });\n    }\n\n    function getKey(pref) {\n        return pref.key;\n    }\n\n    function isValidPreferenceValue(key, value) {\n        return getPreference(key).isValidValue(value);\n    }\n\n    function setToDefaultValue(key) {\n        // throws SecurityError etc\n        set(key, getDefaultValue(key));\n    }\n\n    function getDefaultValue(key) {\n        if (!preferenceExists(key)) {\n            throw new Error(\"Preference '\" + key + \"' does not exist.\");\n        }\n        return getPreference(key).getDefaultValue();\n    }\n\n    function LS_prefix(key) {\n        return LOCALSTORAGE_PREFIX + key;\n    }\n\n    function set(key, value) {\n        // throws SecurityError etc\n        if (!preferenceExists(key)) {\n            throw new Error(\"There is no preference with key '\" + key + \"'.\");\n        }\n        var pref = getPreference(key);\n        if (!isValidPreferenceValue(key, value)) {\n            pref.invalidValue(value);\n        } else {\n            (0, _PreferencesUtilities.log)(\"Setting preference '\" + key + \"' to '\" + value + \"'.\");\n            getCachedPreference(key).value = value;\n            try {\n                localStorage.setItem(LS_prefix(key), pref.constructor.stringify(value));\n            } catch (e) {\n                (0, _PreferencesUtilities.logError)(\"Failed to save value for preference '\" + key + \"' to localStorage. The following error was thrown:\\n\" + e);\n                throw e; // likely a SecurityError, but could be others as well\n            }\n        }\n    }\n\n    function getSaved(key) {\n        // throws SecurityError, TypeError etc\n        if (!preferenceExists(key)) {\n            throw new Error(\"There is no preference with key '\" + key + \"'.\");\n        }\n        var pref = getPreference(key);\n        var savedValue = void 0;\n        try {\n            savedValue = localStorage.getItem(LS_prefix(key));\n        } catch (e) {\n            (0, _PreferencesUtilities.logError)(\"Failed to load saved value for preference '\" + key + \"' from localStorage. The following error was thrown:\\n\" + e);\n            throw e; // likely a SecurityError, but could be others as well\n        }\n        if (savedValue === null) {\n            // There was no saved value.\n            return null;\n        } else if (isValidPreferenceValue(key, pref.constructor.parse(savedValue))) {\n            return pref.constructor.parse(savedValue);\n        } else {\n            throw new TypeError(\"'\" + savedValue + \"' could not be parsed to a valid value for preference '\" + pref + \"'.\");\n        }\n    }\n\n    function getCached(key) {\n        if (!preferenceExists(key)) {\n            throw new Error(\"There is no preference with key '\" + key + \"'.\");\n        }\n        return getCachedPreference(key).value;\n    }\n\n    function setAllToDefault() {\n        (0, _PreferencesUtilities.log)(\"Resetting all preferences ...\");\n        PREFERENCES.map(getKey).forEach(setToDefaultValue);\n        (0, _PreferencesUtilities.log)(\"Done.\");\n    }\n\n    return {\n        isValidPreferenceValue: isValidPreferenceValue,\n        set: set,\n        getSaved: getSaved,\n        getCached: getCached,\n        setToDefaultValue: setToDefaultValue,\n        getDefaultValue: getDefaultValue,\n        getAllPreferencesWithValues_saved: getAllPreferencesWithValues_saved,\n        getAllPreferencesWithValues_cached: getAllPreferencesWithValues_cached,\n        getAllPreferencesWithDefaultValues: getAllPreferencesWithDefaultValues,\n        setAllToDefault: setAllToDefault\n    };\n}\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _utilities = __webpack_require__(0);\n\nvar _Game = __webpack_require__(13);\n\nvar _Player = __webpack_require__(5);\n\nvar _Renderer = __webpack_require__(14);\n\nvar _GUIController = __webpack_require__(12);\n\nvar _BooleanPreference = __webpack_require__(7);\n\nvar _MultichoicePreference = __webpack_require__(8);\n\nvar _PreferenceManager = __webpack_require__(17);\n\nvar _InfoMessage = __webpack_require__(15);\n\nvar _WarningMessage = __webpack_require__(16);\n\nvar _ConfirmationDialog = __webpack_require__(6);\n\nvar _ZatackaEn_US = __webpack_require__(2);\n\nvar _ZatackaEn_US2 = _interopRequireDefault(_ZatackaEn_US);\n\nvar _strings = __webpack_require__(3);\n\nvar _strings2 = _interopRequireDefault(_strings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Zatacka = function () {\n\n    var canvas_main = (0, _utilities.byID)(\"canvas_main\");\n    var canvas_overlay = (0, _utilities.byID)(\"canvas_overlay\");\n    var ORIGINAL_WIDTH = canvas_main.width;\n    var ORIGINAL_HEIGHT = canvas_main.height;\n    var TOTAL_BORDER_THICKNESS = 4;\n    var KEY_RELOAD = _utilities.KEY.F5;\n    var KEY_FULLSCREEN = _utilities.KEY.F11;\n    var KEY_DEVTOOLS = _utilities.KEY.F12;\n    var ALLOWED_KEYS = [KEY_FULLSCREEN, KEY_DEVTOOLS]; // not to be intercepted by our event handler\n\n    var config = Object.freeze({\n        tickrate: 600, // Hz\n        maxFramerate: 300, // Hz\n        canvas: canvas_main,\n        thickness: 3, // Kuxels\n        speed: 60, // Kuxels per second\n        turningRadius: 28.5, // Kuxels (NB: _radius_)\n        minSpawnAngle: -Math.PI / 2, // radians\n        maxSpawnAngle: Math.PI / 2, // radians\n        spawnMargin: 100, // Kuxels\n        preventSpawnkill: false,\n        flickerFrequency: 20, // Hz, when spawning\n        flickerDuration: 830, // ms, when spawning\n        minHoleInterval: 90, // Kuxels\n        maxHoleInterval: 300, // Kuxels\n        minHoleSize: 5, // Kuxels\n        maxHoleSize: 9, // Kuxels\n        hintDelay: 3000, // ms\n        keys: {\n            \"proceed\": [_utilities.KEY.SPACE, _utilities.KEY.ENTER],\n            \"quit\": [_utilities.KEY.ESCAPE]\n        },\n        messages: Object.freeze({\n            pick: new _InfoMessage.InfoMessage(_ZatackaEn_US2.default.hint_pick),\n            proceed: new _InfoMessage.InfoMessage(_ZatackaEn_US2.default.hint_proceed),\n            next: new _InfoMessage.InfoMessage(_ZatackaEn_US2.default.hint_next),\n            quit: new _InfoMessage.InfoMessage(_ZatackaEn_US2.default.hint_quit),\n            alt: new _WarningMessage.WarningMessage(_ZatackaEn_US2.default.hint_alt),\n            ctrl: new _WarningMessage.WarningMessage(_ZatackaEn_US2.default.hint_ctrl),\n            mouse: new _WarningMessage.WarningMessage(_ZatackaEn_US2.default.hint_mouse),\n            preferences_access_denied: new _WarningMessage.WarningMessage(_ZatackaEn_US2.default.hint_preferences_access_denied),\n            preferences_localstorage_failed: new _WarningMessage.WarningMessage(_ZatackaEn_US2.default.hint_preferences_localstorage_failed)\n        }),\n        dialogs: Object.freeze({\n            confirmation_quit: new _ConfirmationDialog.ConfirmationDialog(_ZatackaEn_US2.default.label_text_confirm_quit, quitGame),\n            confirmation_reload: new _ConfirmationDialog.ConfirmationDialog(_ZatackaEn_US2.default.label_text_confirm_reload, reload)\n        }),\n        defaultPlayers: Object.freeze([{ id: 1, name: \"Red\", color: \"#FF2800\", keyL: _utilities.KEY[\"1\"], keyR: _utilities.KEY.Q }, { id: 2, name: \"Yellow\", color: \"#C3C300\", keyL: [_utilities.KEY.CTRL, _utilities.KEY.Z], keyR: [_utilities.KEY.ALT, _utilities.KEY.X] }, { id: 3, name: \"Orange\", color: \"#FF7900\", keyL: _utilities.KEY.M, keyR: _utilities.KEY.COMMA }, { id: 4, name: \"Green\", color: \"#00CB00\", keyL: _utilities.KEY.LEFT_ARROW, keyR: _utilities.KEY.DOWN_ARROW }, { id: 5, name: \"Pink\", color: \"#DF51B6\", keyL: [_utilities.KEY.DIVIDE, _utilities.KEY.END, _utilities.KEY.PAGE_DOWN], keyR: [_utilities.KEY.MULTIPLY, _utilities.KEY.PAGE_UP] }, { id: 6, name: \"Blue\", color: \"#00A2CB\", keyL: _utilities.MOUSE.LEFT, keyR: _utilities.MOUSE.RIGHT }])\n    });\n\n    var PREFERENCES = Object.freeze([{\n        type: _BooleanPreference.BooleanPreference,\n        key: _strings2.default.pref_key_prevent_spawnkill,\n        label: _ZatackaEn_US2.default.pref_label_prevent_spawnkill,\n        description: _ZatackaEn_US2.default.pref_label_description_prevent_spawnkill,\n        default: false\n    }, {\n        type: _BooleanPreference.BooleanPreference,\n        key: _strings2.default.pref_key_confirm_quit,\n        label: _ZatackaEn_US2.default.pref_label_confirm_quit,\n        description: _ZatackaEn_US2.default.pref_label_description_confirm_quit,\n        default: true\n    }, {\n        type: _BooleanPreference.BooleanPreference,\n        key: _strings2.default.pref_key_confirm_reload,\n        label: _ZatackaEn_US2.default.pref_label_confirm_reload,\n        description: _ZatackaEn_US2.default.pref_label_description_confirm_reload,\n        default: true\n    }, {\n        type: _BooleanPreference.BooleanPreference,\n        key: _strings2.default.pref_key_allow_blurry_scaling,\n        label: _ZatackaEn_US2.default.pref_label_allow_blurry_scaling,\n        description: _ZatackaEn_US2.default.pref_label_description_allow_blurry_scaling,\n        default: false\n    }, {\n        type: _MultichoicePreference.MultichoicePreference,\n        key: _strings2.default.pref_key_cursor,\n        label: _ZatackaEn_US2.default.pref_label_cursor,\n        description: _ZatackaEn_US2.default.pref_label_description_cursor,\n        values: [_strings2.default.pref_value_cursor_always_visible, _strings2.default.pref_value_cursor_hidden_when_mouse_used_by_player, _strings2.default.pref_value_cursor_always_hidden],\n        labels: [_ZatackaEn_US2.default.pref_label_cursor_always_visible, _ZatackaEn_US2.default.pref_label_cursor_hidden_when_mouse_used_by_player, _ZatackaEn_US2.default.pref_label_cursor_always_hidden],\n        default: _strings2.default.pref_value_cursor_hidden_when_mouse_used_by_player\n    }, {\n        type: _MultichoicePreference.MultichoicePreference,\n        key: _strings2.default.pref_key_edge_fix,\n        label: _ZatackaEn_US2.default.pref_label_edge_fix,\n        description: _ZatackaEn_US2.default.pref_label_description_edge_fix,\n        values: [_strings2.default.pref_value_edge_fix_full, _strings2.default.pref_value_edge_fix_minimal, _strings2.default.pref_value_edge_fix_off],\n        labels: [_ZatackaEn_US2.default.pref_label_edge_fix_full, _ZatackaEn_US2.default.pref_label_edge_fix_minimal, _ZatackaEn_US2.default.pref_label_edge_fix_off],\n        default: _strings2.default.pref_value_edge_fix_off\n    }, {\n        type: _MultichoicePreference.MultichoicePreference,\n        key: _strings2.default.pref_key_hints,\n        label: _ZatackaEn_US2.default.pref_label_hints,\n        description: _ZatackaEn_US2.default.pref_label_description_hints,\n        values: [_strings2.default.pref_value_hints_all, _strings2.default.pref_value_hints_warnings_only, _strings2.default.pref_value_hints_none],\n        labels: [_ZatackaEn_US2.default.pref_label_hints_all, _ZatackaEn_US2.default.pref_label_hints_warnings_only, _ZatackaEn_US2.default.pref_label_hints_none],\n        default: _strings2.default.pref_value_hints_all\n    }]);\n\n    var preferenceManager = new _PreferenceManager.PreferenceManager(PREFERENCES);\n\n    function isProceedKey(key) {\n        return config.keys.proceed.includes(key);\n    }\n\n    function isQuitKey(key) {\n        return config.keys.quit.includes(key);\n    }\n\n    function shouldPreventDefault(key) {\n        return !ALLOWED_KEYS.includes(key);\n    }\n\n    function setEdgePadding(padding) {\n        if (game.isStarted()) {\n            throw new Error(\"Cannot change edge padding when the game is running.\");\n        } else {\n            var newCanvasWidth = ORIGINAL_WIDTH - padding;\n            var newCanvasHeight = ORIGINAL_HEIGHT - 2 * padding;\n            game.setSize(newCanvasWidth, newCanvasHeight);\n            guiController.setEdgePadding(padding);\n        }\n    }\n\n    function setEdgeMode(mode) {\n        var padding = 0;\n        if (mode === \"minimal\") {\n            padding = 1;\n        } else if (mode === \"full\") {\n            padding = TOTAL_BORDER_THICKNESS;\n        }\n        try {\n            setEdgePadding(padding);\n        } catch (e) {\n            (0, _utilities.logError)(e);\n        }\n    }\n\n    function setPreventSpawnkill(mode) {\n        if (game.isStarted()) {\n            throw new Error(\"Cannot change edge padding when the game is running.\");\n        } else {\n            game.setPreventSpawnkill(mode);\n        }\n    }\n\n    function getHoleConfig() {\n        return {\n            minHoleSize: config.minHoleSize,\n            maxHoleSize: config.maxHoleSize,\n            minHoleInterval: config.minHoleInterval,\n            maxHoleInterval: config.maxHoleInterval\n        };\n    }\n\n    function getPaddedHoleConfig() {\n        var thickness = config.thickness;\n        var holeConfig = getHoleConfig();\n        var paddedHoleConfig = {};\n        paddedHoleConfig.minPaddedHoleSize = holeConfig.minHoleSize + thickness;\n        paddedHoleConfig.maxPaddedHoleSize = holeConfig.maxHoleSize + thickness;\n        paddedHoleConfig.minPaddedHoleInterval = Math.max(0, holeConfig.minHoleInterval - thickness);\n        paddedHoleConfig.maxPaddedHoleInterval = Math.max(0, holeConfig.maxHoleInterval - thickness);\n        return paddedHoleConfig;\n    }\n\n    function defaultPlayerData(id) {\n        return config.defaultPlayers.find(function (defaultPlayer) {\n            return defaultPlayer.id === id;\n        });\n    }\n\n    function defaultPlayer(id) {\n        var playerData = defaultPlayerData(id);\n        if (playerData === undefined) {\n            throw new TypeError(\"There is no default player with ID \" + id + \".\");\n        }\n        return new _Player.Player(playerData.id, playerData.name, playerData.color, playerData.keyL, playerData.keyR, getPaddedHoleConfig());\n    }\n\n    function applyCursorBehavior() {\n        var mouseIsBeingUsed = game.getPlayers().some(hasMouseButton);\n        var behavior = void 0;\n        switch (preferenceManager.getCached(_strings2.default.pref_key_cursor)) {\n            case _strings2.default.pref_value_cursor_hidden_when_mouse_used_by_player:\n                behavior = mouseIsBeingUsed ? _strings2.default.cursor_hidden : _strings2.default.cursor_visible;\n                break;\n            case _strings2.default.pref_value_cursor_always_hidden:\n                behavior = _strings2.default.cursor_hidden;\n                break;\n            default:\n                behavior = _strings2.default.cursor_visible;\n        }\n        (0, _utilities.log)(\"Setting cursor behavior to \" + behavior + \".\");\n        guiController.setCursorBehavior(behavior);\n    }\n\n    function proceedKeyPressedInLobby() {\n        var numberOfReadyPlayers = game.getNumberOfPlayers();\n        if (numberOfReadyPlayers > 0) {\n            clearMessages();\n            applyCursorBehavior();\n            game.setMode(numberOfReadyPlayers === 1 ? _Game.Game.PRACTICE : _Game.Game.COMPETITIVE);\n            game.start();\n        }\n    }\n\n    function hasMouseButton(player) {\n        return player.usesAnyMouseButton();\n    }\n\n    function checkForDangerousInput() {\n        if (game.getPlayers().some(function (player) {\n            return player.hasKey(_utilities.KEY.CTRL);\n        })) {\n            guiController.showMessage(config.messages.ctrl);\n        } else {\n            guiController.hideMessage(config.messages.ctrl);\n        }\n\n        if (game.getPlayers().some(function (player) {\n            return player.hasKey(_utilities.KEY.ALT);\n        })) {\n            guiController.showMessage(config.messages.alt);\n        } else {\n            guiController.hideMessage(config.messages.alt);\n        }\n\n        if (game.getPlayers().some(hasMouseButton)) {\n            guiController.showMessage(config.messages.mouse);\n        } else {\n            guiController.hideMessage(config.messages.mouse);\n        }\n    }\n\n    function addPlayer(id) {\n        game.addPlayer(defaultPlayer(id));\n        checkForDangerousInput();\n        clearTimeout(hintPickTimer);\n        guiController.hideMessage(config.messages.pick);\n        clearTimeout(hintProceedTimer);\n        hintProceedTimer = setTimeout(function () {\n            guiController.showMessage(config.messages.proceed);\n        }, config.hintDelay);\n    }\n\n    function removePlayer(id) {\n        game.removePlayer(id);\n        checkForDangerousInput();\n        clearTimeout(hintProceedTimer);\n        if (game.getNumberOfPlayers() === 0) {\n            guiController.hideMessage(config.messages.proceed);\n        } else {\n            hintProceedTimer = setTimeout(function () {\n                guiController.showMessage(config.messages.proceed);\n            }, config.hintDelay);\n        }\n    }\n\n    function defaultPlayerHasLeftKey(playerData, pressedKey) {\n        return pressedKey === playerData.keyL || playerData.keyL instanceof Array && playerData.keyL.includes(pressedKey);\n    }\n\n    function defaultPlayerHasRightKey(playerData, pressedKey) {\n        return pressedKey === playerData.keyR || playerData.keyR instanceof Array && playerData.keyR.includes(pressedKey);\n    }\n\n    function addOrRemovePlayer(playerData, pressedKey) {\n        if (defaultPlayerHasLeftKey(playerData, pressedKey)) {\n            addPlayer(playerData.id);\n        } else if (defaultPlayerHasRightKey(playerData, pressedKey)) {\n            removePlayer(playerData.id);\n        }\n    }\n\n    function eventConsumer(event) {\n        event.stopPropagation();\n        event.preventDefault();\n    }\n\n    function keyPressedInLobby(pressedKey) {\n        config.defaultPlayers.forEach(function (playerData) {\n            addOrRemovePlayer(playerData, pressedKey);\n        });\n    }\n\n    function mouseClickedInLobby(button) {\n        config.defaultPlayers.forEach(function (playerData) {\n            addOrRemovePlayer(playerData, _utilities.MOUSE.pack(button));\n        });\n    }\n\n    function keyHandler(event) {\n        var callback = game.isStarted() ? gameKeyHandler : guiController.isShowingSettings() ? settingsKeyHandler : lobbyKeyHandler;\n        guiController.keyPressed(event, callback);\n    }\n\n    function mouseHandler(event) {\n        var callback = game.isStarted() ? gameMouseHandler : guiController.isShowingSettings() ? settingsMouseHandler : lobbyMouseHandler;\n        guiController.mouseClicked(event, callback);\n    }\n\n    function unloadHandler(event) {\n        if (game.isStarted()) {\n            gameUnloadHandler();\n        }\n    }\n\n    function lobbyKeyHandler(event) {\n        if (shouldPreventDefault(event.keyCode)) {\n            event.preventDefault();\n        }\n        var pressedKey = event.keyCode;\n        if (pressedKey === KEY_RELOAD) {\n            reload();\n        } else if (isProceedKey(pressedKey)) {\n            proceedKeyPressedInLobby();\n        } else {\n            keyPressedInLobby(pressedKey);\n        }\n    }\n\n    function lobbyMouseHandler(event) {\n        event.preventDefault();\n        mouseClickedInLobby(event.button);\n    }\n\n    function reload() {\n        window.location.reload();\n    }\n\n    function quitGame() {\n        game.quit();\n        guiController.gameQuit();\n        game = newGame();\n    }\n\n    function gameKeyHandler(event) {\n        if (shouldPreventDefault(event.keyCode)) {\n            event.preventDefault();\n        }\n        var pressedKey = event.keyCode;\n        if (isProceedKey(pressedKey)) {\n            if (game.shouldQuitOnProceedKey()) {\n                quitGame();\n            } else {\n                game.proceedKeyPressed();\n            }\n        } else if (isQuitKey(pressedKey) && game.shouldQuitOnQuitKey()) {\n            if (preferenceManager.getCached(_strings2.default.pref_key_confirm_quit) === true && !guiController.isShowingDialog()) {\n                guiController.showDialog(config.dialogs.confirmation_quit);\n            } else {\n                quitGame();\n            }\n        } else if (pressedKey === KEY_RELOAD) {\n            if (preferenceManager.getCached(_strings2.default.pref_key_confirm_reload) === true) {\n                if (game.shouldShowReloadConfirmationOnReloadKey() && !guiController.isShowingDialog()) {\n                    guiController.showDialog(config.dialogs.confirmation_reload, reload);\n                }\n            } else {\n                reload();\n            }\n        }\n    }\n\n    function gameMouseHandler(event) {\n        event.preventDefault();\n    }\n\n    function gameUnloadHandler(event) {\n        // A simple trick to prevent accidental unloading of the entire game.\n        var message = _ZatackaEn_US2.default.hint_unload;\n        event.returnValue = message; // Gecko, Trident, Chrome 34+\n        return message; // Gecko, Webkit, Chrome <34\n    }\n\n    function settingsKeyHandler(event) {\n        var pressedKey = event.keyCode;\n        if (isQuitKey(pressedKey)) {\n            hideSettings();\n        } else if (pressedKey === KEY_RELOAD) {\n            reload();\n        }\n    }\n\n    function settingsMouseHandler(event) {\n        // Intentionally empty.\n    }\n\n    function showSettings() {\n        clearTimeout(hintPickTimer);\n        clearTimeout(hintProceedTimer);\n        try {\n            guiController.updateSettingsForm(preferenceManager.getAllPreferencesWithValues_saved());\n        } catch (e) {\n            (0, _utilities.logWarning)(\"Could not load settings from localStorage. Using cached settings instead.\");\n            guiController.updateSettingsForm(preferenceManager.getAllPreferencesWithValues_cached());\n            handleSettingsAccessError(e);\n        }\n        guiController.showSettings();\n    }\n\n    function hideSettings() {\n        guiController.parseSettingsForm().forEach(function (newSetting) {\n            try {\n                preferenceManager.set(newSetting.key, newSetting.value);\n            } catch (e) {\n                (0, _utilities.logWarning)(\"Could not save setting '\" + newSetting.key + \"' to localStorage.\");\n                handleSettingsAccessError(e);\n            }\n        });\n        applySettings();\n        guiController.hideSettings();\n    }\n\n    function applySettings() {\n        try {\n            // Edge fix:\n            setEdgeMode(preferenceManager.getSaved(_strings2.default.pref_key_edge_fix));\n            // Hints:\n            guiController.setMessageMode(preferenceManager.getSaved(_strings2.default.pref_key_hints));\n            // Prevent spawnkill:\n            game.setPreventSpawnkill(preferenceManager.getSaved(_strings2.default.pref_key_prevent_spawnkill));\n            // Blurry scaling:\n            guiController.setBlurryScaling(preferenceManager.getSaved(_strings2.default.pref_key_allow_blurry_scaling));\n        } catch (e) {\n            (0, _utilities.logWarning)(\"Could not load settings from localStorage. Using cached settings instead.\");\n            setEdgeMode(preferenceManager.getCached(_strings2.default.pref_key_edge_fix));\n            guiController.setMessageMode(preferenceManager.getCached(_strings2.default.pref_key_hints));\n            game.setPreventSpawnkill(preferenceManager.getCached(_strings2.default.pref_key_prevent_spawnkill));\n            guiController.setBlurryScaling(preferenceManager.getCached(_strings2.default.pref_key_allow_blurry_scaling));\n            handleSettingsAccessError(e);\n        }\n    }\n\n    function handleSettingsAccessError(error) {\n        if (error.name === _strings2.default.error_name_security) {\n            guiController.showMessage(config.messages.preferences_access_denied);\n        } else {\n            guiController.showMessage(config.messages.preferences_localstorage_failed);\n        }\n    }\n\n    function clearMessages() {\n        clearTimeout(hintPickTimer);\n        clearTimeout(hintProceedTimer);\n        guiController.clearMessages();\n    }\n\n    function blurHandler() {\n        (0, _utilities.logWarning)(\"Application lost focus.\");\n        _utilities.Keyboard.reset();\n        _utilities.Mouse.reset();\n    }\n\n    function addShowSettingsButtonEventListener() {\n        var showSettingsButton = (0, _utilities.byID)(_strings2.default.id_button_show_settings);\n        if (showSettingsButton instanceof HTMLElement) {\n            showSettingsButton.addEventListener(\"mousedown\", eventConsumer);\n            showSettingsButton.addEventListener(\"click\", showSettings);\n        }\n    }\n\n    function addHideSettingsButtonEventListener() {\n        var hideSettingsButton = (0, _utilities.byID)(_strings2.default.id_button_hide_settings);\n        if (hideSettingsButton instanceof HTMLElement) {\n            hideSettingsButton.addEventListener(\"mousedown\", eventConsumer);\n            hideSettingsButton.addEventListener(\"click\", hideSettings);\n        }\n    }\n\n    function addEventListeners() {\n        (0, _utilities.log)(\"Adding event listeners ...\");\n\n        // Hide/show settings:\n        addShowSettingsButtonEventListener();\n        addHideSettingsButtonEventListener();\n\n        // General event handlers:\n        document.addEventListener(\"keydown\", keyHandler);\n        document.addEventListener(\"mousedown\", mouseHandler);\n        document.addEventListener(\"contextmenu\", eventConsumer);\n        window.addEventListener(\"beforeunload\", unloadHandler);\n        window.addEventListener(\"blur\", blurHandler);\n\n        // Player input:\n        document.addEventListener(\"keydown\", _utilities.Keyboard.onKeydown.bind(_utilities.Keyboard));\n        document.addEventListener(\"keyup\", _utilities.Keyboard.onKeyup.bind(_utilities.Keyboard));\n        document.addEventListener(\"mousedown\", _utilities.Mouse.onMousedown.bind(_utilities.Mouse));\n        document.addEventListener(\"mouseup\", _utilities.Mouse.onMouseup.bind(_utilities.Mouse));\n\n        (0, _utilities.log)(\"Done.\");\n    }\n\n    addEventListeners();\n\n    function newGame() {\n        return new _Game.Game(config, (0, _Renderer.Renderer)(canvas_main, canvas_overlay), guiController);\n    }\n\n    var guiController = (0, _GUIController.GUIController)(config);\n    var game = newGame();\n\n    var hintProceedTimer = void 0;\n    var hintPickTimer = setTimeout(function () {\n        guiController.showMessage(config.messages.pick);\n    }, config.hintDelay);\n\n    applySettings();\n\n    return {\n        getConfig: function getConfig() {\n            return config;\n        },\n        getGame: function getGame() {\n            return game;\n        },\n        addPlayer: function addPlayer(playerOrID) {\n            var player = _Player.Player.isPlayer(playerOrID) ? playerOrID : new _Player.Player(playerOrID);\n            game.addPlayer(player);\n        }\n    };\n}();\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Round = exports.Round = function () {\n    function Round(players) {\n        _classCallCheck(this, Round);\n\n        // A list of the players in the order they died (winner also included):\n        this.results = [];\n    }\n\n    _createClass(Round, [{\n        key: \"add\",\n        value: function add(player) {\n            this.results.push(player);\n        }\n    }, {\n        key: \"getSuccessOfPlayer\",\n        value: function getSuccessOfPlayer(id) {\n            for (var i = 0; i < this.results.length; i++) {\n                if (this.results[i].hasID(id)) {\n                    return i;\n                }\n            }\n            return this.results.length;\n        }\n    }, {\n        key: \"getResults\",\n        value: function getResults() {\n            return this.results;\n        }\n    }]);\n\n    return Round;\n}();\n\n/***/ }),\n/* 20 */,\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Queue = Queue;\n//code.stephenmorley.org\nfunction Queue() {\n  var a = [],\n      b = 0;this.getLength = function () {\n    return a.length - b;\n  };this.hasItem = function (i) {\n    return a.indexOf(i) !== -1;\n  };this.isEmpty = function () {\n    return 0 === a.length;\n  };this.enqueue = function (b) {\n    a.push(b);\n  };this.dequeue = function () {\n    if (0 !== a.length) {\n      var c = a[b];2 * ++b >= a.length && (a = a.slice(b), b = 0);return c;\n    }\n  };this.peek = function () {\n    return 0 < a.length ? a[b] : void 0;\n  };\n};\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * mainloop.js 1.0.1-20150816\r\n *\r\n * @author Isaac Sukin (http://www.isaacsukin.com/)\r\n * @license MIT\r\n */\n\nexports.default = !function (a) {\n  function b(a) {\n    if (e + j > a) return u = n(b), void 0;for (d += a - e, e = a, q(a, d), a > g + 1e3 && (f = .25 * h + .75 * f, g = a, h = 0), h++, i = 0; d >= c;) {\n      if (r(c), d -= c, ++i >= 240) {\n        m = !0;break;\n      }\n    }s(d / c), t(f, m), m = !1, u = n(b);\n  }var c = 1e3 / 60,\n      d = 0,\n      e = 0,\n      f = 60,\n      g = 0,\n      h = 0,\n      i = 0,\n      j = 0,\n      k = !1,\n      l = !1,\n      m = !1,\n      n = a.requestAnimationFrame || function () {\n    var a = Date.now(),\n        b,\n        d;return function (e) {\n      return b = Date.now(), d = Math.max(0, c - (b - a)), a = b + d, setTimeout(function () {\n        e(b + d);\n      }, d);\n    };\n  }(),\n      o = a.cancelAnimationFrame || clearTimeout,\n      p = function p() {},\n      q = p,\n      r = p,\n      s = p,\n      t = p,\n      u;a.MainLoop = { getSimulationTimestep: function getSimulationTimestep() {\n      return c;\n    }, setSimulationTimestep: function setSimulationTimestep(a) {\n      return c = a, this;\n    }, getFPS: function getFPS() {\n      return f;\n    }, getMaxAllowedFPS: function getMaxAllowedFPS() {\n      return 1e3 / j;\n    }, setMaxAllowedFPS: function setMaxAllowedFPS(a) {\n      return \"undefined\" == typeof a && (a = 1 / 0), 0 === a ? this.stop() : j = 1e3 / a, this;\n    }, resetFrameDelta: function resetFrameDelta() {\n      var a = d;return d = 0, a;\n    }, setBegin: function setBegin(a) {\n      return q = a || q, this;\n    }, setUpdate: function setUpdate(a) {\n      return r = a || r, this;\n    }, setDraw: function setDraw(a) {\n      return s = a || s, this;\n    }, setEnd: function setEnd(a) {\n      return t = a || t, this;\n    }, start: function start() {\n      return l || (l = !0, u = n(function (a) {\n        s(1), k = !0, e = a, g = a, h = 0, u = n(b);\n      })), this;\n    }, stop: function stop() {\n      return k = !1, l = !1, o(u), this;\n    }, isRunning: function isRunning() {\n      return k;\n    } },  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (a.MainLoop),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : \"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) && (module.exports = a.MainLoop);\n}(window);\n//# sourceMappingURL=mainloop.min.js.map\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.IntegerRangePreference = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Preference = __webpack_require__(1);\n\nvar _RangePreference2 = __webpack_require__(11);\n\nvar _PreferencesUtilities = __webpack_require__(4);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IntegerRangePreference = exports.IntegerRangePreference = function (_RangePreference) {\n    _inherits(IntegerRangePreference, _RangePreference);\n\n    function IntegerRangePreference(data) {\n        _classCallCheck(this, IntegerRangePreference);\n\n        if (!(0, _PreferencesUtilities.isInt)(data.min) || !(0, _PreferencesUtilities.isInt)(data.max)) {\n            throw new TypeError(\"min and max must be integers (found \" + data.min + \" and \" + data.max + \" for preference '\" + data.key + \"').\");\n        }\n\n        var _this = _possibleConstructorReturn(this, (IntegerRangePreference.__proto__ || Object.getPrototypeOf(IntegerRangePreference)).call(this, data));\n\n        _this.min = data.min;\n        _this.max = data.max;\n        if (!_this.isValidValue(data.default)) {\n            _get(IntegerRangePreference.prototype.__proto__ || Object.getPrototypeOf(IntegerRangePreference.prototype), \"invalidValue\", _this).call(_this, data.default);\n        }\n        return _this;\n    }\n\n    _createClass(IntegerRangePreference, [{\n        key: \"isValidValue\",\n        value: function isValidValue(value) {\n            return (0, _PreferencesUtilities.isInt)(value) && value >= this.min && value <= this.max;\n        }\n    }], [{\n        key: \"stringify\",\n        value: function stringify(value) {\n            return value.toString();\n        }\n    }, {\n        key: \"parse\",\n        value: function parse(stringifiedValue) {\n            return parseInt(stringifiedValue);\n        }\n    }]);\n\n    return IntegerRangePreference;\n}(_RangePreference2.RangePreference);\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PreferenceWithValue = exports.PreferenceWithValue = function PreferenceWithValue(preference, value) {\n    _classCallCheck(this, PreferenceWithValue);\n\n    if (!preference.isValidValue(value)) {\n        throw new TypeError(value + \" is not a valid value for preference \" + preference.key + \".\");\n    }\n    this.preference = preference;\n    this.value = value;\n};\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// zatacka.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5ad4a4b372802bdcb188","const typeOf = ((global) => {\r\n    return function(obj) {\r\n        if (obj === global) {\r\n            return \"global\";\r\n        }\r\n        return ({}).toString.call(obj).match(/\\s([a-z|A-Z]+)/)[1].toLowerCase();\r\n    };\r\n})(this);\r\n\r\nconst CONSOLE_PREFIX = \"[Zatacka] \";\r\n\r\nexport const KEY = Object.freeze({ BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, PAUSE: 19, CAPS_LOCK: 20, ESCAPE: 27, SPACE: 32, PAGE_UP: 33, PAGE_DOWN: 34, END: 35, HOME: 36, LEFT_ARROW: 37, UP_ARROW: 38, RIGHT_ARROW: 39, DOWN_ARROW: 40, INSERT: 45, DELETE: 46, \"0\": 48, \"1\": 49, \"2\": 50, \"3\": 51, \"4\": 52, \"5\": 53, \"6\": 54, \"7\": 55, \"8\": 56, \"9\": 57, A: 65, B: 66, C: 67, D: 68, E: 69, F: 70, G: 71, H: 72, I: 73, J: 74, K: 75, L: 76, M: 77, N: 78, O: 79, P: 80, Q: 81, R: 82, S: 83, T: 84, U: 85, V: 86, W: 87, X: 88, Y: 89, Z: 90, LEFT_META: 91, RIGHT_META: 92, SELECT: 93, NUMPAD_0: 96, NUMPAD_1: 97, NUMPAD_2: 98, NUMPAD_3: 99, NUMPAD_4: 100, NUMPAD_5: 101, NUMPAD_6: 102, NUMPAD_7: 103, NUMPAD_8: 104, NUMPAD_9: 105, MULTIPLY: 106, ADD: 107, SUBTRACT: 109, DECIMAL: 110, DIVIDE: 111, F1: 112, F2: 113, F3: 114, F4: 115, F5: 116, F6: 117, F7: 118, F8: 119, F9: 120, F10: 121, F11: 122, F12: 123, NUM_LOCK: 144, SCROLL_LOCK: 145, SEMICOLON: 186, EQUALS: 187, COMMA: 188, DASH: 189, PERIOD: 190, FORWARD_SLASH: 191, GRAVE_ACCENT: 192, OPEN_BRACKET: 219, BACK_SLASH: 220, CLOSE_BRACKET: 221, SINGLE_QUOTE: 222 });\r\n\r\nexport const MOUSE = Object.freeze((() => {\r\n    const offset = 1000;\r\n    return Object.freeze({\r\n        unpack: (offseted) => offseted - offset,\r\n        pack:   (standard) => standard + offset,\r\n        LEFT:   offset+0,\r\n        RIGHT:  offset+2,\r\n        MIDDLE: offset+1,\r\n        MOUSE4: offset+3,\r\n        MOUSE5: offset+4\r\n    });\r\n})());\r\n\r\nexport const F_KEYS = Object.freeze([\r\n    KEY.F1, KEY.F2, KEY.F3, KEY.F4, KEY.F5, KEY.F6, KEY.F7, KEY.F8, KEY.F9, KEY.F10, KEY.F11, KEY.F12\r\n]);\r\n\r\nexport const MOUSE_BUTTONS = Object.freeze([\r\n    MOUSE.LEFT, MOUSE.RIGHT, MOUSE.MIDDLE, MOUSE.MOUSE4, MOUSE.MOUSE5\r\n]);\r\n\r\nexport function isObject(obj) {\r\n    return typeOf(obj) === \"object\";\r\n}\r\n\r\nexport function isNumber(n) {\r\n    return typeOf(n) === \"number\";\r\n}\r\n\r\nexport function isPositiveNumber(n) {\r\n    return isNumber(n) && n > 0;\r\n}\r\n\r\nexport function isInt(n) {\r\n    return isNumber(n) && n % 1 === 0;\r\n}\r\n\r\nexport function isPositiveInt(n) {\r\n    return isInt(n) && n > 0;\r\n}\r\n\r\nexport function isString(s) {\r\n    return typeOf(s) === \"string\";\r\n}\r\n\r\nexport function isNonEmptyString(s) {\r\n    return isString(s) && s.length > 0;\r\n}\r\n\r\nexport function arePositiveNumbers(numbers) {\r\n    return numbers.every(isPositiveNumber);\r\n}\r\n\r\nexport function round(number, decimals) {\r\n    return Math.round(number * (Math.pow(10, decimals))) / (Math.pow(10, decimals));\r\n}\r\n\r\nexport function sameAbs(a, b) {\r\n    return Math.abs(a) === Math.abs(b);\r\n}\r\n\r\n/**\r\n * Generates a random float between min (inclusive) and max (exclusive).\r\n *\r\n * @param {Number} min\r\n *   Minimum value (inclusive).\r\n * @param {Number} max\r\n *   Maximum value (exclusive).\r\n */\r\nexport function randomFloat(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\nexport function normalizeAngle(a) {\r\n    const pi = Math.PI;\r\n    let angle = a % (2*pi);\r\n    angle = (angle + 2*pi) % (2*pi);\r\n    if (angle > pi) {\r\n        angle = angle - 2*pi;\r\n    }\r\n    return angle;\r\n}\r\n\r\nexport function radToDeg(radians) {\r\n    return (180/Math.PI) * radians;\r\n}\r\n\r\nexport function distanceToDuration(distance, velocity) {\r\n    return (distance / velocity) * 1000; // milliseconds\r\n}\r\n\r\nexport function log(str) {\r\n    console.log(CONSOLE_PREFIX + str);\r\n}\r\n\r\nexport function logWarning(str) {\r\n    console.warn(CONSOLE_PREFIX + str);\r\n}\r\n\r\nexport function logError(str) {\r\n    console.error(CONSOLE_PREFIX + str);\r\n}\r\n\r\nexport function byID(id) {\r\n    return document.getElementById(id);\r\n}\r\n\r\nexport function isHTMLElement(elem) {\r\n    return elem instanceof HTMLElement;\r\n}\r\n\r\nexport function flush(node) {\r\n    if (isHTMLElement(node)) {\r\n        node.textContent = \"\";\r\n    } else {\r\n        throw new TypeError(`${node} is not a DOM node.`);\r\n    }\r\n}\r\n\r\nexport function forfor(y_start, y_end, x_start, x_end, func, arg) {\r\n    for (let y = y_start; y < y_end; y++) {\r\n        for (let x = x_start; x < x_end; x++) {\r\n            func.call(this, x, y, arg);\r\n        }\r\n    }\r\n}\r\n\r\nexport const Keyboard = {\r\n    pressed: {},\r\n    isDown: function(keyCode) {\r\n        return !!this.pressed[keyCode];\r\n    },\r\n    onKeydown: function(event) {\r\n        this.pressed[event.keyCode] = true;\r\n    },\r\n    onKeyup: function(event) {\r\n        delete this.pressed[event.keyCode];\r\n    },\r\n    reset: function() {\r\n        this.pressed = {};\r\n    },\r\n};\r\n\r\nexport const Mouse = {\r\n    pressed: {},\r\n    isDown: function(mouseButtonNumber) {\r\n        return this.pressed[mouseButtonNumber];\r\n    },\r\n    onMousedown: function(event) {\r\n        this.pressed[event.button] = true;\r\n    },\r\n    onMouseup: function(event) {\r\n        delete this.pressed[event.button];\r\n    },\r\n    reset: function() {\r\n        this.pressed = {};\r\n    },\r\n};\r\n\r\nexport function anyKeyBeingPressed(keyCodes) {\r\n    return Array.isArray(keyCodes) && keyCodes.some(Keyboard.isDown, Keyboard);\r\n}\r\n\r\nexport function anyMouseButtonBeingPressed(mouseButtons) {\r\n    return Array.isArray(mouseButtons) && mouseButtons.map(MOUSE.unpack).some(Mouse.isDown, Mouse);\r\n}\r\n\r\nexport function anyInputBeingPressed(keysOrMouseButtons) {\r\n    return anyKeyBeingPressed(keysOrMouseButtons) || anyMouseButtonBeingPressed(keysOrMouseButtons);\r\n}\r\n\r\nexport function isMouseButton(button) {\r\n    return isPositiveInt(button) && Object.keys(MOUSE).some((buttonName) => MOUSE.hasOwnProperty(buttonName));\r\n}\r\n\r\nexport function isKeyList(keys) {\r\n    return Array.isArray(keys)\r\n        && keys.length > 0\r\n        && keys.every(isPositiveInt);\r\n}\r\n\r\nexport function isFKey(key) {\r\n    return F_KEYS.includes(key);\r\n}\r\n\r\nexport const PLATFORM = (() => {\r\n    const strings = {\r\n        os_id_windows: \"Win\",\r\n        os_id_mac: \"Mac\",\r\n        os_id_linux: \"Linux\",\r\n        os_id_unix: \"X11\",\r\n\r\n        os_name_windows: \"Windows\",\r\n        os_name_mac: \"Mac\",\r\n        os_name_linux: \"Linux\",\r\n        os_name_unix: \"UNIX\",\r\n        os_name_unknown: \"Unknown\",\r\n    };\r\n\r\n    return {\r\n        getOS: () => {\r\n            const ua = window.navigator.userAgent || window.navigator.appVersion;\r\n            if (isNonEmptyString(ua)) {\r\n                if (ua.indexOf(strings.os_id_windows) > -1) { return strings.os_name_windows; }\r\n                if (ua.indexOf(strings.os_id_mac)     > -1) { return strings.os_name_mac;     }\r\n                if (ua.indexOf(strings.os_id_linux)   > -1) { return strings.os_name_linux;   }\r\n                if (ua.indexOf(strings.os_id_unix)    > -1) { return strings.os_name_unix;    }\r\n            }\r\n            return strings.os_name_unknown;\r\n        },\r\n        getFullscreenShortcut: () => {\r\n            switch (PLATFORM.getOS()) {\r\n                case strings.os_name_mac:\r\n                    return \"mac\";\r\n                    break;\r\n                default:\r\n                    return \"default\";\r\n            }\r\n        },\r\n    };\r\n})();\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/utilities.js","import { isString } from \"./PreferencesUtilities.js\";\r\n\r\nexport class Preference {\r\n    constructor(data) {\r\n        if (!isString(data.key)) {\r\n            throw new TypeError(`key must be a string (found ${data.key}). More info: ${data}`);\r\n        } else if (data.default === undefined) {\r\n            throw new TypeError(`Preference '${data.key}' must have a default value.`);\r\n        }\r\n        this.key = data.key;\r\n        this.label = data.label;\r\n        this.default = data.default;\r\n        this.description = data.description;\r\n    }\r\n\r\n    isValidValue(value) {\r\n        return isString(value);\r\n    }\r\n\r\n    invalidValue(value) {\r\n        throw new TypeError(`${value} is not a valid value for preference '${this.key}'.`);\r\n    }\r\n\r\n    static stringify(value) {\r\n        return value.toString();\r\n    }\r\n\r\n    static parse(stringifiedValue) {\r\n        return stringifiedValue;\r\n    }\r\n\r\n    getDefaultValue() {\r\n        return this.default;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/preferences/Preference.js","export default (() => {\r\n    const KEY_SHIFT = \"⇧\";\r\n    const KEY_CMD   = \"⌘\";\r\n    const KEY_PROCEED = \"Space or Enter\";\r\n    const KEY_QUIT = \"Esc\";\r\n\r\n    return Object.freeze({\r\n        hint_unload: `Are you sure you want to unload the page?`,\r\n        hint_start: `Press <kbd>Space</kbd> to start`,\r\n        hint_popup: `It is recommended to run Kurve in its own window without history (to avoid switching tabs or navigating back in history mid-game). To do that, please allow popups or <a href=\"ZATACKA.html\" target=\"_blank\">click here</a>.`,\r\n        hint_pick: `Pick your desired color by pressing the corresponding LEFT key (e.g. M for Orange).`,\r\n        hint_proceed: `Press ${KEY_PROCEED} to start!`,\r\n        hint_next: `Press ${KEY_PROCEED} to proceed, or ${KEY_QUIT} to quit.`,\r\n        hint_quit: `Press ${KEY_PROCEED} to start over.`,\r\n        hint_alt: `Alt plus some other keys may cause undesired behavior (e.g. switching windows).`,\r\n        hint_ctrl: `Ctrl plus some other keys may cause undesired behavior (e.g. closing the tab).`,\r\n        hint_mouse: `Make sure to keep the mouse cursor inside the browser window.`,\r\n        hint_preferences_access_denied: `Could not save/load settings because access to localStorage was denied by the browser. This might be caused by \"third-party site data\" being blocked or similar.`,\r\n        hint_preferences_localstorage_failed: `Could not save/load settings because access to localStorage failed.`,\r\n\r\n        keyboard_fullscreen_mac: `<kbd>${KEY_CMD} + Ctrl + F</kbd> and/or <kbd>${KEY_CMD} + ${KEY_SHIFT} + F</kbd>`,\r\n        keyboard_fullscreen_standard: \"<kbd>F11</kbd>\",\r\n\r\n        getFullscreenHint: (shortcut) => `Press ${shortcut} to toggle fullscreen`,\r\n\r\n        label_button_alert_ok: `OK`,\r\n        label_button_confirm_yes: `Yes`,\r\n        label_button_confirm_no: `No`,\r\n\r\n        label_text_confirm_quit: `Are you sure you want to quit?`,\r\n        label_text_confirm_reload: `Are you sure you want to reload the application?`,\r\n\r\n        pref_label_cursor: `Cursor`,\r\n        pref_label_description_cursor: `Control how the cursor behaves when the game is running.`,\r\n        pref_label_cursor_always_visible: `Always visible`,\r\n        pref_label_cursor_hidden_when_mouse_used_by_player: `Hidden when mouse used by player`,\r\n        pref_label_cursor_always_hidden: `Always hidden`,\r\n\r\n        pref_label_edge_fix: `Edge fix`,\r\n        pref_label_description_edge_fix: `Shrink the playing field slightly to make the edge visible if the monitor is exactly the same height or width as the game.`,\r\n        pref_label_edge_fix_full: `Full`,\r\n        pref_label_edge_fix_minimal: `Minimal`,\r\n        pref_label_edge_fix_off: `Off`,\r\n\r\n        pref_label_hints: `Hints`,\r\n        pref_label_description_hints: `Hints may be redundant for experienced Kurve players.`,\r\n        pref_label_hints_all: `All`,\r\n        pref_label_hints_warnings_only: `Warnings only`,\r\n        pref_label_hints_none: `None`,\r\n\r\n        pref_label_prevent_spawnkill: `Prevent spawnkills`,\r\n        pref_label_description_prevent_spawnkill: `Enforce a minimum distance between player spawns.`,\r\n\r\n        pref_label_confirm_quit: `Confirm quit`,\r\n        pref_label_description_confirm_quit: `Ask for confirmation before quitting to the main menu.`,\r\n\r\n        pref_label_confirm_reload: `Confirm reload`,\r\n        pref_label_description_confirm_reload: `Ask for confirmation before reloading the application.`,\r\n\r\n        pref_label_allow_blurry_scaling: `Allow blurry scaling`,\r\n        pref_label_description_allow_blurry_scaling: `Let the game use the available screen area more efficiently at the expense of visual quality. Can be useful if the game is very small on your screen.`,\r\n    });\r\n})();\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/locales/Zatacka.en_US.js","export default Object.freeze({\r\n    game_url: \"ZATACKA.html\",\r\n\r\n    error_name_security: \"SecurityError\",\r\n\r\n    class_hidden: \"hidden\",\r\n    class_active: \"active\",\r\n    class_dialog: \"dialog\",\r\n    class_dialog_alert: \"alert\",\r\n    class_dialog_confirmation: \"confirmation\",\r\n    class_description: \"description\",\r\n    class_half_width: \"half-width\",\r\n    class_right_hand_side: \"right-hand-side\",\r\n    class_blurry: \"blurry\",\r\n    class_nocursor: \"nocursor\",\r\n    class_tempcursor: \"tempcursor\",\r\n    class_hints_warnings_only: \"hints-warnings-only\",\r\n    class_hints_none: \"hints-none\",\r\n    html_name_preference_prefix: \"preference-\",\r\n\r\n    cursor_hidden: \"hidden\",\r\n    cursor_visible: \"visible\",\r\n\r\n    id_start_hint: \"start-hint\",\r\n    id_fullscreen_hint: \"fullscreen-hint\",\r\n    id_popup_hint: \"popup-hint\",\r\n    id_button_show_settings: \"button-show-settings\",\r\n    id_button_hide_settings: \"button-hide-settings\",\r\n\r\n    pref_number_type_integer: \"integer\",\r\n    pref_number_type_float: \"float\",\r\n\r\n    pref_key_cursor: \"cursor\",\r\n    pref_value_cursor_always_visible: \"always_visible\",\r\n    pref_value_cursor_hidden_when_mouse_used_by_player: \"hidden_when_mouse_used_by_player\",\r\n    pref_value_cursor_always_hidden: \"always_hidden\",\r\n\r\n    pref_key_edge_fix: \"edge_fix\",\r\n    pref_value_edge_fix_full: \"full\",\r\n    pref_value_edge_fix_minimal: \"minimal\",\r\n    pref_value_edge_fix_off: \"off\",\r\n\r\n    pref_key_hints: \"hints\",\r\n    pref_value_hints_all: \"all\",\r\n    pref_value_hints_warnings_only: \"warnings\",\r\n    pref_value_hints_none: \"none\",\r\n\r\n    pref_key_confirm_quit: \"confirm_quit\",\r\n    pref_key_confirm_reload: \"confirm_reload\",\r\n    pref_key_prevent_spawnkill: \"prevent_spawnkill\",\r\n    pref_key_allow_blurry_scaling: \"allow_blurry_scaling\",\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/strings.js","const typeOf = ((global) => {\r\n    return function(obj) {\r\n        if (obj === global) {\r\n            return \"global\";\r\n        }\r\n        return ({}).toString.call(obj).match(/\\s([a-z|A-Z]+)/)[1].toLowerCase();\r\n    };\r\n})(this);\r\n\r\nconst CONSOLE_PREFIX = \"[Preferences] \";\r\n\r\nexport function log(string) {\r\n    console.log(CONSOLE_PREFIX + string);\r\n}\r\n\r\nexport function logWarning(string) {\r\n    console.warn(CONSOLE_PREFIX + string);\r\n}\r\n\r\nexport function logError(string) {\r\n    console.error(CONSOLE_PREFIX + string);\r\n}\r\n\r\nexport function isObject(obj) {\r\n    return typeOf(obj) === \"object\";\r\n}\r\n\r\nexport function isNumber(n) {\r\n    return typeOf(n) === \"number\";\r\n}\r\n\r\nexport function isPositiveNumber(n) {\r\n    return isNumber(n) && n > 0;\r\n}\r\n\r\nexport function isInt(n) {\r\n    return isNumber(n) && n % 1 === 0;\r\n}\r\n\r\nexport function isPositiveInt(n) {\r\n    return isInt(n) && n > 0;\r\n}\r\n\r\nexport function isString(s) {\r\n    return typeOf(s) === \"string\";\r\n}\r\n\r\nexport function isNonEmptyString(s) {\r\n    return isString(s) && s.length > 0;\r\n}\r\n\r\nexport function arePositiveNumbers(numbers) {\r\n    return numbers.every(isPositiveNumber);\r\n}\r\n\r\nexport function round(number, decimals) {\r\n    return Math.round(number * (Math.pow(10, decimals))) / (Math.pow(10, decimals));\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/preferences/PreferencesUtilities.js","import { log, logWarning, flush, isObject, isPositiveInt, arePositiveNumbers, round, distanceToDuration, randomFloat, MOUSE_BUTTONS, isMouseButton, isKeyList, anyInputBeingPressed } from \"./lib/utilities.js\";\r\nimport { Queue } from \"./lib/Queue.js\";\r\n\r\nexport class Player {\r\n    constructor(id, name = `Player ${id}`, color = \"white\", L_keys, R_keys, holeConfig) {\r\n        if (!isPositiveInt(id)) {\r\n            throw new TypeError(`Cannot create a player with ID ${id}. Only positive integers are accepted.`);\r\n        }\r\n        this.id = id;\r\n        this.name = name;\r\n        this.color = color;\r\n        this.alive = false;\r\n        this.holy = false;\r\n        this.x = null;\r\n        this.y = null;\r\n        this.direction = 0;\r\n        this.velocity = 0;\r\n        this.maxSpeed = undefined;\r\n        this.lastPosition = null;\r\n        this.queuedDraws = new Queue();\r\n        this.holeTimer = null;\r\n        this.holeConfig = null;\r\n\r\n        if (!this.constructor.isHoleConfig(holeConfig)) {\r\n            logWarning(`Creating player ${this.name} with no hole configuration because ${holeConfig} is not a valid hole configuration.`);\r\n        } else {\r\n            this.holeConfig = holeConfig;\r\n        }\r\n\r\n        if (isPositiveInt(L_keys)) {\r\n            this.L_keys = [L_keys];\r\n        } else if (isKeyList(L_keys)) {\r\n            this.L_keys = L_keys;\r\n        } else {\r\n            logWarning(`Creating player \"${this.name}\" without any LEFT key(s).`);\r\n            this.L_keys = [];\r\n        }\r\n\r\n        if (isPositiveInt(R_keys)) {\r\n            this.R_keys = [R_keys];\r\n        } else if (isKeyList(R_keys)) {\r\n            this.R_keys = R_keys;\r\n        } else {\r\n            logWarning(`Creating player \"${this.name}\" without any RIGHT key(s).`);\r\n            this.R_keys = [];\r\n        }\r\n    }\r\n\r\n    static isPlayer(player) {\r\n        return (player instanceof Player);\r\n    }\r\n\r\n    static isHoleConfig(holeConfig) {\r\n        return isObject(holeConfig)\r\n            && arePositiveNumbers([\r\n                                   holeConfig.minPaddedHoleSize,\r\n                                   holeConfig.maxPaddedHoleSize,\r\n                                   holeConfig.minPaddedHoleInterval,\r\n                                   holeConfig.maxPaddedHoleInterval\r\n                                  ]);\r\n    }\r\n\r\n\r\n    // CHECKERS\r\n\r\n    isAlive() {\r\n        return this.alive;\r\n    }\r\n\r\n    justWasAt(left, top) {\r\n        return this.lastPosition.left === left && this.lastPosition.top === top;\r\n    }\r\n\r\n    isHoly() {\r\n        return this.holy; \r\n    }\r\n\r\n    isPressingLeft() {\r\n        return anyInputBeingPressed(this.L_keys);\r\n    }\r\n\r\n    isPressingRight() {\r\n        return anyInputBeingPressed(this.R_keys);\r\n    }\r\n\r\n    hasID(id) {\r\n        return this.id === id;\r\n    }\r\n\r\n    hasMouseButton(button) {\r\n        return isMouseButton(button)\r\n            && (this.L_keys.includes(button)\r\n             || this.R_keys.includes(button));\r\n    }\r\n\r\n    usesAnyMouseButton() {\r\n        return MOUSE_BUTTONS.some((button) => this.hasMouseButton(button));\r\n    }\r\n\r\n    hasKey(key) {\r\n        return this.L_keys.includes(key)\r\n            || this.R_keys.includes(key);\r\n    }\r\n\r\n\r\n    // GETTERS\r\n\r\n    getID() {\r\n        return this.id;\r\n    }\r\n\r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getColor() {\r\n        return this.color;\r\n    }\r\n\r\n    toString() {\r\n        return this.name;\r\n    }\r\n\r\n    getLastPosition() {\r\n        return this.lastPosition;\r\n    }\r\n\r\n    getVelocity() {\r\n        return this.velocity;\r\n    }\r\n\r\n    getDirection() {\r\n        return this.direction;\r\n    }\r\n\r\n    randomPaddedHoleSize() {\r\n        return randomFloat(this.holeConfig.minPaddedHoleSize, this.holeConfig.maxPaddedHoleSize);\r\n    }\r\n\r\n    randomPaddedHoleInterval() {\r\n        return randomFloat(this.holeConfig.minPaddedHoleInterval, this.holeConfig.maxPaddedHoleInterval);\r\n    }\r\n\r\n    firstHoleDelay() {\r\n        return distanceToDuration(this.randomPaddedHoleInterval() - this.holeConfig.minPaddedHoleInterval, this.velocity);\r\n    }\r\n\r\n\r\n    // SETTERS\r\n\r\n    setMaxSpeed(speed) {\r\n        this.maxSpeed = speed;\r\n    }\r\n\r\n    setDirection(direction) {\r\n        this.direction = direction;\r\n    }\r\n\r\n\r\n    // DOERS\r\n\r\n    start() {\r\n        log(`${this} starting.`);\r\n        this.alive = true;\r\n        this.velocity = this.maxSpeed;\r\n        if (this.constructor.isHoleConfig(this.holeConfig)) {\r\n            this.holeTimer = setTimeout(this.startCreatingHoles.bind(this), this.firstHoleDelay());\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        this.alive = false;\r\n        this.velocity = 0;\r\n        clearTimeout(this.holeTimer);\r\n    }\r\n\r\n    reset() {\r\n        this.holy = false;\r\n        this.lastPosition = null;\r\n        this.queuedDraws = new Queue();\r\n    }\r\n\r\n    /**\r\n     * Called when the player does something that causes it do die.\r\n     * @param {String} cause The cause of death.\r\n     */\r\n    die(cause) {\r\n        this.alive = false;\r\n        clearTimeout(this.holeTimer);\r\n        log(`${this} ${(cause || \"died\")} at (${round(this.x, 2)}, ${round(this.y, 2)}).` );\r\n    }\r\n\r\n    beAt(left, top) {\r\n        this.lastPosition = {\r\n            \"left\": left,\r\n            \"top\" : top\r\n        };\r\n    }\r\n\r\n    beginHole() {\r\n        this.holy = true;\r\n        const paddedHoleSize = this.randomPaddedHoleSize();\r\n        const paddedHoleDuration = distanceToDuration(paddedHoleSize, this.velocity);\r\n        this.holeTimer = setTimeout(this.endHole.bind(this), paddedHoleDuration);\r\n    }\r\n\r\n    endHole() {\r\n        this.holy = false;\r\n        const paddedHoleInterval = this.randomPaddedHoleInterval();\r\n        const paddedHoleIntervalDuration = distanceToDuration(paddedHoleInterval, this.velocity);\r\n        this.holeTimer = setTimeout(this.beginHole.bind(this), paddedHoleIntervalDuration);\r\n    }\r\n\r\n    startCreatingHoles() {\r\n        this.beginHole();\r\n    }\r\n\r\n    enqueueDraw() {\r\n        this.queuedDraws.enqueue({ \"x\": this.x, \"y\": this.y });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/Player.js","import { Dialog } from \"./Dialog.js\";\r\n\r\nexport class ConfirmationDialog extends Dialog {\r\n    constructor(question, callback) {\r\n        if (!(callback instanceof Function)) {\r\n            throw new TypeError(`callback must be a function (found ${callback}).`);\r\n        }\r\n        super(question);\r\n        this.callback = callback;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/ConfirmationDialog.js","import { Preference } from \"./Preference.js\";\r\n\r\nexport class BooleanPreference extends Preference {\r\n    constructor(data) {\r\n        super(data);\r\n        if (!(data.default === true || data.default === false)) {\r\n            super.invalidValue(data.default);\r\n        }\r\n    }\r\n\r\n    isValidValue(value) {\r\n        return value === true || value === false;\r\n    }\r\n\r\n    static stringify(value) {\r\n        return value.toString();\r\n    }\r\n\r\n    static parse(stringifiedValue) {\r\n        return stringifiedValue === \"true\";\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/preferences/BooleanPreference.js","import { Preference } from \"./Preference.js\";\r\nimport { isString } from \"./PreferencesUtilities.js\";\r\n\r\nexport class MultichoicePreference extends Preference {\r\n    constructor(data) {\r\n        if (!isNonEmptyStringArray(data.values)) {\r\n            throw new TypeError(`values must be a non-empty string array (found ${data.values} for preference '${data.key}').`);\r\n        }\r\n        super(data);\r\n        this.values = data.values;\r\n        this.labels = data.labels;\r\n        if (!this.isValidValue(data.default)) {\r\n            super.invalidValue(data.default);\r\n        }\r\n\r\n        function isNonEmptyStringArray(strings) {\r\n            return strings instanceof Array && strings.length > 0 && strings.every(isString);\r\n        }\r\n    }\r\n\r\n    isValidValue(value) {\r\n        return this.values.indexOf(value) > -1;\r\n    }\r\n\r\n    static stringify(value) {\r\n        return value;\r\n    }\r\n\r\n    static parse(stringifiedValue) {\r\n        return stringifiedValue;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/preferences/MultichoicePreference.js","import { isString } from \"./utilities.js\";\r\n\r\nexport class Dialog {\r\n    constructor(text) {\r\n        if (!isString(text)) {\r\n            throw new TypeError(`text must be a string (found ${text}).`);\r\n        }\r\n        this.text = text;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/Dialog.js","export class Message {\r\n    constructor(text, styleClass) {\r\n        this.text = text;\r\n        this.class = styleClass;\r\n    }\r\n\r\n    toHTMLElement() {\r\n    \tconst p = document.createElement(\"p\");\r\n    \tp.textContent = this.text;\r\n    \tp.classList.add(this.class);\r\n    \tp.classList.add(\"message\");\r\n    \treturn p;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/Message.js","import { Preference } from \"./Preference.js\";\r\nimport { isNumber } from \"./PreferencesUtilities.js\";\r\n\r\nexport class RangePreference extends Preference {\r\n    constructor(data) {\r\n        if (!isNumber(data.min) || !isNumber(data.max)) {\r\n            throw new TypeError(`min and max must be numbers (found ${data.min} and ${data.max} for preference '${data.key}').`);\r\n        } else if (data.min > data.max) {\r\n            throw new TypeError(`min cannot be greater than max (found ${data.min} and ${data.max} for preference '${data.key}', respectively).`);\r\n        }\r\n        super(data);\r\n        this.min = data.min;\r\n        this.max = data.max;\r\n        if (!this.isValidValue(data.default)) {\r\n            super.invalidValue(data.default)\r\n        }\r\n    }\r\n\r\n    isValidValue(value) {\r\n        return isNumber(value) && value >= this.min && value <= this.max;\r\n    }\r\n\r\n    static stringify(value) {\r\n        return value.toString();\r\n    }\r\n\r\n    static parse(stringifiedValue) {\r\n        return parseFloat(stringifiedValue);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/preferences/RangePreference.js","import { Preference } from \"./lib/preferences/Preference.js\";\r\nimport { BooleanPreference } from \"./lib/preferences/BooleanPreference.js\";\r\nimport { RangePreference } from \"./lib/preferences/RangePreference.js\";\r\nimport { IntegerRangePreference } from \"./lib/preferences/IntegerRangePreference.js\";\r\nimport { MultichoicePreference } from \"./lib/preferences/MultichoicePreference.js\";\r\n\r\nimport { Dialog } from \"./lib/Dialog.js\";\r\nimport { ConfirmationDialog } from \"./lib/ConfirmationDialog.js\";\r\n\r\nimport { byID, flush, isHTMLElement, log, logWarning, logError, KEY, Keyboard } from \"./lib/utilities.js\";\r\nimport TEXT from \"./locales/Zatacka.en_US.js\";\r\nimport STRINGS from \"./strings.js\";\r\n\r\nexport function GUIController(cfg) {\r\n\r\n    const config = cfg;\r\n    const lobby = byID(\"lobby\");\r\n    const controls = byID(\"controls\");\r\n    const canvas_main = byID(\"canvas_main\");\r\n    const canvas_overlay = byID(\"canvas_overlay\");\r\n    const left = byID(\"left\");\r\n    const scoreboard = byID(\"scoreboard\");\r\n    const results = byID(\"results\");\r\n    const KONEC_HRY = byID(\"KONEC_HRY\");\r\n    const messagesContainer = byID(\"messages\");\r\n    // const settingsContainer = byID(\"settings\");\r\n    const dialogsOverlay = byID(\"dialogs\");\r\n    const settingsForm = byID(\"settings-form\");\r\n\r\n    const ORIGINAL_LEFT_WIDTH = left.offsetWidth;\r\n    const MULTICHOICE_LABEL_MAX_LENGTH_FOR_HALFWIDTH_FIELDSET = 22; // More characters than this will result in a full-width div/fieldset.\r\n    const FLOAT_RANGE_PREFERENCE_STEP = 0.01;\r\n\r\n    const BUTTON_TAG_NAME = \"button\";\r\n    const BUTTON_NODE_CLASS = HTMLButtonElement;\r\n\r\n    const LABEL_ALERT_OK = TEXT.label_button_alert_ok;\r\n    const LABEL_CONFIRM_YES = TEXT.label_button_confirm_yes;\r\n    const LABEL_CONFIRM_NO = TEXT.label_button_confirm_no;\r\n\r\n    let showingSettings = false;\r\n    let currentMessages = [];\r\n    let queuedDialogs = [];\r\n    let currentDialogWithBox = null;\r\n\r\n    class DialogWithBox {\r\n        constructor(dialog, box) {\r\n            this.dialog = dialog;\r\n            this.box = box;\r\n        }\r\n    }\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n    function hideLobby() {\r\n        log(\"Hiding lobby.\");\r\n        lobby.classList.add(STRINGS.class_hidden);\r\n    }\r\n\r\n    function showLobby() {\r\n        log(\"Showing lobby.\");\r\n        lobby.classList.remove(STRINGS.class_hidden);\r\n    }\r\n\r\n    function showDialogsOverlay() {\r\n        dialogsOverlay.classList.remove(STRINGS.class_hidden);\r\n    }\r\n\r\n    function hideDialogsOverlay() {\r\n        dialogsOverlay.classList.add(STRINGS.class_hidden);\r\n    }\r\n\r\n    function isLobbyEntry(element) {\r\n        return isHTMLElement(element) && element.children.length >= 2;\r\n    }\r\n\r\n    function isButton(element) {\r\n        return element instanceof BUTTON_NODE_CLASS;\r\n    }\r\n\r\n    function showDialogRightAway(dialog) {\r\n        const dialogBox = dialogHTMLElement(dialog);\r\n        currentDialogWithBox = new DialogWithBox(dialog, dialogBox);\r\n        setTemporaryCursorVisibility(true);\r\n        showDialogsOverlay();\r\n        dialogsOverlay.appendChild(dialogBox);\r\n        // A dialog should have its last button focused:\r\n        dialogBox.querySelector(\"button:last-of-type\").focus();\r\n    }\r\n\r\n    function currentDialogClosed() {\r\n        currentDialogWithBox.box.remove();\r\n        currentDialogWithBox = null;\r\n        if (anyQueuedDialogs()) {\r\n            // There is at least one dialog waiting. Show it:\r\n            showDialogRightAway(queuedDialogs.shift());\r\n        } else {\r\n            // No more dialogs. Restore:\r\n            setTemporaryCursorVisibility(false);\r\n            hideDialogsOverlay();\r\n        }\r\n    }\r\n\r\n    function anyQueuedDialogs() {\r\n        return queuedDialogs.length > 0;\r\n    }\r\n\r\n    function escapeShouldCloseCurrentDialog() {\r\n        return currentDialogWithBox.dialog instanceof ConfirmationDialog;\r\n    }\r\n\r\n    function dialogHTMLElementBoilerplate(text) {\r\n        const dialogBox = document.createElement(\"div\");\r\n        dialogBox.classList.add(STRINGS.class_dialog);\r\n        const label = document.createElement(\"p\");\r\n        label.textContent = text;\r\n        dialogBox.appendChild(label);\r\n        return dialogBox;\r\n    }\r\n\r\n    function alertDialogHTMLElement(dialog) {\r\n        const alertDialogBox = dialogHTMLElementBoilerplate(dialog.text);\r\n        alertDialogBox.classList.add(STRINGS.class_dialog_alert);\r\n        const buttonOK = document.createElement(\"button\");\r\n        buttonOK.textContent = LABEL_ALERT_OK;\r\n        alertDialogBox.appendChild(buttonOK);\r\n\r\n        function alertDialogEventHandler() {\r\n            currentDialogClosed();\r\n        }\r\n        // Event listener:\r\n        buttonOK.addEventListener(\"click\", alertDialogEventHandler);\r\n\r\n        return alertDialogBox;\r\n    }\r\n\r\n    function confirmationDialogHTMLElement(confirmationDialog) {\r\n        const confirmationDialogBox = dialogHTMLElementBoilerplate(confirmationDialog.text);\r\n        confirmationDialogBox.classList.add(STRINGS.class_dialog_confirmation);\r\n        const buttonYes = document.createElement(\"button\");\r\n        buttonYes.textContent = LABEL_CONFIRM_YES;\r\n        const buttonNo  = document.createElement(\"button\");\r\n        buttonNo.textContent = LABEL_CONFIRM_NO;\r\n        confirmationDialogBox.appendChild(buttonYes);\r\n        confirmationDialogBox.appendChild(buttonNo);\r\n\r\n        function confirmationDialogEventHandler(response) {\r\n            return () => {\r\n                currentDialogClosed();\r\n                if (response === true) {\r\n                    confirmationDialog.callback();\r\n                }\r\n            };\r\n        }\r\n        // Event listeners:\r\n        buttonYes.addEventListener(\"click\", confirmationDialogEventHandler(true));\r\n        buttonNo.addEventListener(\"click\", confirmationDialogEventHandler(false));\r\n\r\n        return confirmationDialogBox;\r\n    }\r\n\r\n    function dialogHTMLElement(dialog) {\r\n        if (dialog instanceof ConfirmationDialog) {\r\n            return confirmationDialogHTMLElement(dialog);\r\n        } else if (dialog instanceof Dialog) {\r\n            return alertDialogHTMLElement(dialog);\r\n        }\r\n        throw new TypeError(`${dialog} is not a valid dialog.`);\r\n    }\r\n\r\n    function resetScoreboardEntry(entry) {\r\n        entry.classList.remove(\"active\");\r\n    }\r\n\r\n    function resetScoreboard() {\r\n        Array.from(scoreboard.children).forEach(resetScoreboardEntry);\r\n    }\r\n\r\n    function resetResults() {\r\n        Array.from(results.children).forEach(resetScoreboardEntry);\r\n    }\r\n\r\n    function setCursorBehavior(behavior) {\r\n        switch (behavior) {\r\n            case STRINGS.cursor_visible:\r\n                document.body.classList.remove(STRINGS.class_nocursor);\r\n                break;\r\n            case STRINGS.cursor_hidden:\r\n                document.body.classList.add(STRINGS.class_nocursor);\r\n                break;\r\n            default:\r\n                logError(`Cannot set cursor behavior to '${behavior}'.`);\r\n        }\r\n    }\r\n\r\n    function setTemporaryCursorVisibility(tempCursorActive) {\r\n        if (tempCursorActive) {\r\n            document.body.classList.add(STRINGS.class_tempcursor);\r\n        } else {\r\n            document.body.classList.remove(STRINGS.class_tempcursor);\r\n        }\r\n    }\r\n\r\n    function settingsEntryShouldBeHalfWidth(preference) {\r\n        if (preference instanceof MultichoicePreference) {\r\n            const longestValueLabel = preference.labels.reduce((acc, current) => current.length > acc.length ? current : acc);\r\n            return longestValueLabel.length <= MULTICHOICE_LABEL_MAX_LENGTH_FOR_HALFWIDTH_FIELDSET;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function settingsEntryHTMLElement(preference, preferenceValue) {\r\n        if (!(preference instanceof Preference)) {\r\n            throw new TypeError(`${preference} is not a preference.`);\r\n        }\r\n\r\n        // Common\r\n        const div = document.createElement(\"div\");\r\n        const label = document.createElement(\"label\");\r\n        label.textContent = preference.label;\r\n        label.setAttribute(\"for\", `${STRINGS.html_name_preference_prefix}${preference.key}`);\r\n        const description = document.createElement(\"aside\");\r\n        description.textContent = preference.description;\r\n        description.classList.add(STRINGS.class_description);\r\n\r\n        // Boolean\r\n        if (preference instanceof BooleanPreference) {\r\n            const input = document.createElement(\"input\");\r\n            input.type = \"checkbox\";\r\n            input.dataset.key = preference.key;\r\n            input.id = STRINGS.html_name_preference_prefix + preference.key;\r\n            input.checked = preferenceValue === true;\r\n            div.appendChild(input);\r\n            div.appendChild(label);\r\n        }\r\n\r\n        // Multichoice\r\n        else if (preference instanceof MultichoicePreference) {\r\n            const fieldset = document.createElement(\"fieldset\");\r\n            const legend = document.createElement(\"legend\");\r\n            legend.textContent = preference.label;\r\n            fieldset.appendChild(legend);\r\n            preference.values.forEach((value, index) => {\r\n                const id = STRINGS.html_name_preference_prefix + preference.key + \"-\" + preference.values[index];\r\n                const radioButton = document.createElement(\"input\");\r\n                radioButton.type = \"radio\";\r\n                radioButton.id = id;\r\n                radioButton.name = STRINGS.html_name_preference_prefix + preference.key;\r\n                radioButton.value = value;\r\n                radioButton.dataset.key = preference.key;\r\n                radioButton.checked = preferenceValue === value;\r\n                const radioButtonLabel = document.createElement(\"label\");\r\n                radioButtonLabel.textContent = preference.labels[index];\r\n                radioButtonLabel.setAttribute(\"for\", id);\r\n                fieldset.appendChild(radioButton);\r\n                fieldset.appendChild(radioButtonLabel);\r\n            });\r\n            div.appendChild(fieldset);\r\n            if (settingsEntryShouldBeHalfWidth(preference)) {\r\n                div.classList.add(STRINGS.class_half_width);\r\n            }\r\n        }\r\n\r\n        // Range\r\n        else if (preference instanceof RangePreference) {\r\n            const isIntegerRange = preference instanceof IntegerRangePreference;\r\n            div.appendChild(label);\r\n            const input = document.createElement(\"input\");\r\n            input.type = \"number\";\r\n            input.dataset.key = preference.key;\r\n            input.dataset.numberType = isIntegerRange ? STRINGS.pref_number_type_integer : STRINGS.pref_number_type_float;\r\n            input.name = STRINGS.html_name_preference_prefix + preference.key;\r\n            input.setAttribute(\"step\", isIntegerRange ? 1 : FLOAT_RANGE_PREFERENCE_STEP);\r\n            input.setAttribute(\"min\", preference.min);\r\n            input.setAttribute(\"max\", preference.max);\r\n            input.value = preferenceValue;\r\n            div.appendChild(input);\r\n        }\r\n\r\n        div.appendChild(description);\r\n        return div;\r\n    }\r\n\r\n\r\n    // PUBLIC API\r\n\r\n    function keyPressed(event, callback) {\r\n        if (isShowingDialog()) {\r\n            const currentlyFocusedButton = currentDialogWithBox.box.querySelector(`${BUTTON_TAG_NAME}:focus`);\r\n            const shiftIsDown = Keyboard.isDown(KEY.SHIFT);\r\n            let previousButton, nextButton;\r\n            if (isButton(currentlyFocusedButton)) {\r\n                previousButton = isButton(currentlyFocusedButton.previousSibling) ? currentlyFocusedButton.previousSibling : null;\r\n                nextButton = isButton(currentlyFocusedButton.nextSibling) ? currentlyFocusedButton.nextSibling : null;\r\n            }\r\n            switch (event.keyCode) {\r\n                case KEY.SPACE:\r\n                case KEY.ENTER:\r\n                    // Necessary because buttons do not automatically react to Space until keyup, making them feel sluggish compared to when Enter is used.\r\n                    if (isButton(currentlyFocusedButton)) {\r\n                        currentlyFocusedButton.click();\r\n                    }\r\n                    break;\r\n                case KEY.ESCAPE:\r\n                    if (escapeShouldCloseCurrentDialog()) {\r\n                        currentDialogClosed();\r\n                    }\r\n                    break;\r\n                case KEY.TAB:\r\n                    event.preventDefault();\r\n                    if (shiftIsDown) {\r\n                        if (isButton(previousButton)) {\r\n                            previousButton.focus();\r\n                        }\r\n                    } else if (isButton(nextButton)) {\r\n                        nextButton.focus();\r\n                    }\r\n                    break;\r\n                case KEY.LEFT_ARROW:\r\n                    if (isButton(previousButton)) {\r\n                        previousButton.focus();\r\n                    }\r\n                    break;\r\n                case KEY.RIGHT_ARROW:\r\n                    if (isButton(nextButton)) {\r\n                        nextButton.focus();\r\n                    }\r\n                    break;\r\n                default:\r\n                    callback(event);\r\n            }\r\n        } else {\r\n            callback(event);\r\n        }\r\n    }\r\n\r\n    function mouseClicked(event, callback) {\r\n        if (isShowingDialog()) {\r\n            // Do nothing particular, but consume the event.\r\n        } else {\r\n            callback(event);\r\n        }\r\n    }\r\n\r\n    function showDialog(dialog) {\r\n        if (isShowingDialog()) {\r\n            queuedDialogs.push(dialog);\r\n        } else {\r\n            showDialogRightAway(dialog);\r\n        }\r\n    }\r\n\r\n    function isShowingDialog() {\r\n        return currentDialogWithBox !== null;\r\n    }\r\n\r\n    function setEdgePadding(padding) {\r\n        left.style.width = `${ORIGINAL_LEFT_WIDTH + padding}px`;\r\n    }\r\n\r\n    function setBlurryScaling(allowed) {\r\n        (document.body.classList[allowed === true ? \"add\" : \"remove\"])(STRINGS.class_blurry);\r\n    }\r\n\r\n    function playerReady(id) {\r\n        const index = id - 1;\r\n        const entry = controls.children[index];\r\n        if (!isLobbyEntry(entry)) {\r\n            logWarning(`Cannot mark player ${id} as ready because controls.children[${index}] (${controls.children[index]}) is not a valid lobby entry.`);\r\n        } else {\r\n            entry.children[1].classList.add(STRINGS.class_active);\r\n        }\r\n    }\r\n\r\n    function playerUnready(id) {\r\n        const index = id - 1;\r\n        const entry = controls.children[index];\r\n        if (!isLobbyEntry(entry)) {\r\n            logWarning(`Cannot mark player ${id} as unready because controls.children[${index}] (${controls.children[index]}) is not a valid lobby entry.`);\r\n        } else {\r\n            entry.children[1].classList.remove(STRINGS.class_active);\r\n        }\r\n    }\r\n\r\n    function allPlayersUnready() {\r\n        for (let id = 1; id <= controls.children.length; id++) {\r\n            playerUnready(id);\r\n        }\r\n    }\r\n\r\n    function gameStarted() {\r\n        hideLobby();\r\n    }\r\n\r\n    function gameQuit() {\r\n        hideKonecHry();\r\n        showLobby();\r\n        clearMessages();\r\n        resetScoreboard();\r\n        resetResults();\r\n        allPlayersUnready();\r\n        setCursorBehavior(STRINGS.cursor_visible);\r\n    }\r\n\r\n    function konecHry() {\r\n        showKonecHry();\r\n        resetScoreboard();\r\n    }\r\n\r\n    function showKonecHry() {\r\n        KONEC_HRY.classList.remove(STRINGS.class_hidden);\r\n    }\r\n\r\n    function hideKonecHry() {\r\n        KONEC_HRY.classList.add(STRINGS.class_hidden);\r\n    }\r\n\r\n    function showMessage(message) {\r\n        if (!currentMessages.includes(message)) {\r\n            currentMessages.push(message);\r\n        }\r\n        updateMessages(currentMessages);\r\n    }\r\n\r\n    function showSettings() {\r\n        showingSettings = true;\r\n        settings.classList.remove(STRINGS.class_hidden);\r\n    }\r\n\r\n    function hideSettings() {\r\n        showingSettings = false;\r\n        settings.classList.add(STRINGS.class_hidden);\r\n    }\r\n\r\n    function isShowingSettings() {\r\n        return showingSettings;\r\n    }\r\n\r\n    function updateSettingsForm(preferencesWithData) {\r\n        flush(settingsForm);\r\n        let settingsEntries = preferencesWithData.map((preferenceWithData) => settingsEntryHTMLElement(preferenceWithData.preference, preferenceWithData.value));\r\n        // Add special class to half-width divs on the right hand side:\r\n        let consecutiveHalfWidthDivs = 0;\r\n        for (let i = 0; i < settingsEntries.length; i++) {\r\n            const currentEntry = settingsEntries[i];\r\n            if (currentEntry.classList.contains(STRINGS.class_half_width)) {\r\n                consecutiveHalfWidthDivs++;\r\n                if (consecutiveHalfWidthDivs % 2 === 0) {\r\n                    // Even number of consecutive half-width divs, so this one will be on the right hand side.\r\n                    currentEntry.classList.add(STRINGS.class_right_hand_side);\r\n                }\r\n            } else {\r\n                consecutiveHalfWidthDivs = 0;\r\n            }\r\n        }\r\n        settingsEntries.forEach((settingsEntry) => {\r\n            settingsForm.appendChild(settingsEntry);\r\n        });\r\n    }\r\n\r\n    function parseSettingsForm() {\r\n        const newSettings = [];\r\n        // <input> elements:\r\n        const inputs = settingsForm.querySelectorAll(\"input\");\r\n        Array.from(inputs).forEach((input) => {\r\n            if (input.type === \"checkbox\") {\r\n                // checkbox\r\n                newSettings.push({ key: input.dataset.key, value: input.checked });\r\n            } else if (input.type === \"radio\") {\r\n                // radio\r\n                if (input.checked === true) {\r\n                    newSettings.push({ key: input.dataset.key, value: input.value });\r\n                }\r\n            } else if (input.type === \"number\") {\r\n                // number\r\n                newSettings.push({ key: input.dataset.key, value: (input.dataset.numberType === STRINGS.pref_number_type_integer ? parseInt : parseFloat)(input.value) });\r\n            } else {\r\n                // text\r\n                newSettings.push({ key: input.dataset.key, value: input.value.toString() });\r\n            }\r\n        });\r\n        // <select> elements:\r\n        const selects = settingsForm.querySelectorAll(\"select\");\r\n        Array.from(selects).forEach((select) => {\r\n            newSettings.push({ key: select.dataset.key, value: select.options[select.selectedIndex].value });\r\n        });\r\n        return newSettings;\r\n    }\r\n\r\n    function hideMessage(message) {\r\n        currentMessages = currentMessages.filter(msg => msg !== message);\r\n        updateMessages(currentMessages);\r\n    }\r\n\r\n    function updateMessages(messages) {\r\n        if (!isHTMLElement(messagesContainer)) {\r\n            logWarning(`Cannot update messages because ${messagesContainer} is not an HTML element.`);\r\n        } else {\r\n            flush(messagesContainer);\r\n            messages.forEach((message) => {\r\n                messagesContainer.insertBefore(message.toHTMLElement(), null);\r\n            });\r\n        }\r\n    }\r\n\r\n    function clearMessages() {\r\n        currentMessages = [];\r\n        updateMessages(currentMessages);\r\n    }\r\n\r\n    function setMessageMode(mode) {\r\n        log(`Setting message mode to ${mode}.`);\r\n        switch (mode) {\r\n            case STRINGS.pref_value_hints_warnings_only:\r\n                messagesContainer.classList.remove(STRINGS.class_hints_none);\r\n                messagesContainer.classList.add(STRINGS.class_hints_warnings_only);\r\n                break;\r\n            case STRINGS.pref_value_hints_none:\r\n                messagesContainer.classList.remove(STRINGS.class_hints_warnings_only);\r\n                messagesContainer.classList.add(STRINGS.class_hints_none);\r\n                break;\r\n            default:\r\n                messagesContainer.classList.remove(STRINGS.class_hints_warnings_only);\r\n                messagesContainer.classList.remove(STRINGS.class_hints_none);\r\n        }\r\n    }\r\n\r\n    function updateBoard(board, id, newScore) {\r\n        if (!isHTMLElement(board)) {\r\n            logWarning(`Cannot update any entry in ${board} because it is not an HTML element.`);\r\n        } else {\r\n            const entry = board.children[id-1];\r\n            if (!isHTMLElement(entry)) {\r\n                logWarning(`Cannot update score of player ${id} because ${entry} is not an HTML element.`);\r\n            } else {\r\n                // The entry is an HTML element; let's update it!\r\n                const digitClassFactory = digit => \"d\"+digit;\r\n                const createDigit = () => document.createElement(\"div\");\r\n                // Turn 528 into [\"d5\", \"d2\", \"d8\"]:\r\n                const newScoreDigitClasses = newScore.toString().split(\"\").map(digitClassFactory);\r\n                // Remove everything from the entry element before we insert new digits:\r\n                flush(entry);\r\n                entry.classList.add(\"active\");\r\n                newScoreDigitClasses.forEach((digitClass, index) => {\r\n                    let digitElement = createDigit(); // A completely clean element ...\r\n                    digitElement.classList.add(newScoreDigitClasses[index]); // ... that now has a digit class.\r\n                    entry.appendChild(digitElement);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    function updateScoreOfPlayer(id, newScore) {\r\n        updateBoard(scoreboard, id, newScore);\r\n        updateBoard(results, id, newScore);\r\n    }\r\n\r\n    return {\r\n        keyPressed,\r\n        mouseClicked,\r\n        playerReady,\r\n        playerUnready,\r\n        gameStarted,\r\n        gameQuit,\r\n        konecHry,\r\n        showDialog,\r\n        isShowingDialog,\r\n        showSettings,\r\n        hideSettings,\r\n        isShowingSettings,\r\n        updateSettingsForm,\r\n        parseSettingsForm,\r\n        updateScoreOfPlayer,\r\n        updateMessages,\r\n        showMessage,\r\n        hideMessage,\r\n        clearMessages,\r\n        setMessageMode,\r\n        setCursorBehavior,\r\n        setBlurryScaling,\r\n        setEdgePadding\r\n    };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/GUIController.js","import MainLoop from \"./lib/mainloop.min.js\";\r\nimport { Player } from \"./Player.js\";\r\nimport { Round } from \"./Round.js\";\r\nimport { isInt, log, logWarning, logError, randomFloat, round, forfor, sameAbs, normalizeAngle } from \"./lib/utilities.js\";\r\n\r\nexport class Game {\r\n    constructor(config, renderer, guiController) {\r\n        // Class variables:\r\n        this.constructor.PRACTICE = \"practice\";\r\n        this.constructor.COMPETITIVE = \"competitive\";\r\n        this.constructor.DEFAULT_MODE = this.constructor.PRACTICE;\r\n        this.constructor.DEFAULT_TARGET_SCORE = 10;\r\n        this.constructor.MAX_TARGET_SCORE = 1000;\r\n        this.constructor.MAX_PLAYERS = 255; // since we use a Uint8Array\r\n        this.constructor.MAX_QUOTA_THAT_SPAWN_CIRCLES_MAY_FILL = 0.5; // out of available spawn area\r\n        this.constructor.DESIRED_MINIMUM_SPAWN_DISTANCE_TURNING_RADIUS_FACTOR = 1;\r\n        this.constructor.KONEC_HRY = \"KONEC HRY!\";\r\n\r\n        if (renderer === undefined) {\r\n            throw new TypeError(\"Cannot create a Game with no renderer.\");\r\n        } else if (!this.constructor.isRenderer(renderer)) {\r\n            throw new TypeError(`${renderer} is not a valid renderer.`);\r\n        }\r\n\r\n        if (guiController === undefined) {\r\n            throw new TypeError(\"Cannot create a Game with no GUI controller.\");\r\n        } else if (!this.constructor.isGUIController(guiController)) {\r\n            throw new TypeError(`${guiController} is not a valid GUI controller.`);\r\n        }\r\n\r\n        // Instance variables:\r\n        this.config = config;\r\n        this.width = config.canvas.width;\r\n        this.height = config.canvas.height;\r\n        this.pixels = null; // The actual array is created in start(), because the canvas width and height may have changed by then.\r\n        this.players = [];\r\n        this.rounds = [];\r\n        this.renderer = renderer;\r\n        this.guiController = guiController;\r\n        this.mode = this.constructor.DEFAULT_MODE;\r\n        this.preventSpawnkill = config.preventSpawnkill;\r\n        this.totalNumberOfTicks = 0;\r\n        this.targetScore = null;\r\n        this.initMainLoop();\r\n        this.started = false;\r\n        this.ended = false;\r\n        this.proceedHintTimer = null;\r\n        this.quitHintTimer = null;\r\n    }\r\n\r\n    static isRenderer(obj) {\r\n        // TODO\r\n        return obj !== undefined;\r\n    }\r\n\r\n    static isGUIController(obj) {\r\n        // TODO\r\n        return obj !== undefined;\r\n    }\r\n\r\n    static isAlive(player) {\r\n        return player.isAlive();\r\n    }\r\n\r\n    static calculateTargetScore(numberOfPlayers) {\r\n        // Default target score is (n-1) * 10 for n players:\r\n        return (numberOfPlayers - 1) * 10;\r\n    }\r\n\r\n    edgeOfSquare(coordinate) {\r\n        return Math.round(coordinate - this.config.thickness/2);\r\n    }\r\n\r\n    maxPlayers() {\r\n        return this.constructor.MAX_PLAYERS;\r\n    }\r\n\r\n    maxTicksBetweenDraws() {\r\n        return Math.max(Math.floor(this.config.tickrate/this.config.speed), 1);\r\n    }\r\n\r\n    // Computes the angle change for one tick when turning, in radians:\r\n    computeAngleChange() {\r\n        return this.config.speed / (this.config.tickrate * this.config.turningRadius);\r\n    }\r\n\r\n    computeSpawnArea() {\r\n        return {\r\n            x_min: this.config.spawnMargin,\r\n            y_min: this.config.spawnMargin,\r\n            x_max: this.width - this.config.spawnMargin,\r\n            y_max: this.height - this.config.spawnMargin\r\n        };\r\n    }\r\n\r\n    computeFrontCornerPixel(edge, dir) {\r\n        let t = this.config.thickness;\r\n        let cf = 100;\r\n        return (cf*edge + cf*(t-1)/2 + cf*dir*(t-1)/2) / cf;\r\n    }\r\n\r\n    computeFrontEdgePixel(edge, dir_parallel, dir_perpendicular, i) {\r\n        let t = this.config.thickness;\r\n        return edge + Math.abs(dir_parallel)*(t-1)/2 + dir_parallel*(t-1)/2 + Math.abs(dir_perpendicular)*i;\r\n    }\r\n\r\n    computeHitbox(player, left, top) {\r\n        let hitboxPixels = [];\r\n        let lastPosition = player.getLastPosition();\r\n        let dir_horizontal = left - lastPosition.left; // positive => going right; negative => going left\r\n        let dir_vertical   = top  - lastPosition.top;  // positive => going down;  negative => going up\r\n        if (sameAbs(dir_horizontal, dir_vertical)) {\r\n            // \"45 degree\" draw\r\n            let frontPixel_left = this.computeFrontCornerPixel(left, dir_horizontal);\r\n            let frontPixel_top  = this.computeFrontCornerPixel(top, dir_vertical);\r\n            hitboxPixels.push(this.pixelAddress(frontPixel_left, frontPixel_top));\r\n        } else {\r\n            // \"90 degree\" draw\r\n            for (let i = 0; i < this.config.thickness; i++) {\r\n                let frontPixel_left = this.computeFrontEdgePixel(left, dir_horizontal, dir_vertical, i);\r\n                let frontPixel_top = this.computeFrontEdgePixel(top, dir_vertical, dir_horizontal, i);\r\n                hitboxPixels.push(this.pixelAddress(frontPixel_left, frontPixel_top));\r\n            }\r\n        }\r\n        return hitboxPixels;\r\n    }\r\n\r\n    desiredMinimumSpawnDistance() { // to closest opponent\r\n        // This is calculated by multiplying the turning radius with a constant factor and then adding the Kurve thickness.\r\n        const turningRadiusPart = this.config.turningRadius * this.constructor.DESIRED_MINIMUM_SPAWN_DISTANCE_TURNING_RADIUS_FACTOR;\r\n        return round(this.config.thickness + turningRadiusPart, 2);\r\n    }\r\n\r\n    safeMinimumSpawnDistance() { // to closest opponent, without risking infinite or too much sampling\r\n        const spawnAreaCoordinates = this.computeSpawnArea();\r\n        const availableSpawnArea = (spawnAreaCoordinates.x_max - spawnAreaCoordinates.x_min) * (spawnAreaCoordinates.y_max - spawnAreaCoordinates.y_min);\r\n        const maximumSafeDistance = Math.sqrt( this.constructor.MAX_QUOTA_THAT_SPAWN_CIRCLES_MAY_FILL * availableSpawnArea / (this.getNumberOfPlayers() * Math.PI) );\r\n        return Math.min(\r\n            this.desiredMinimumSpawnDistance(),\r\n            round(maximumSafeDistance, 2)\r\n        );\r\n    }\r\n\r\n    isSafeSpawnPosition(pos) {\r\n        function distanceBetween(pos1, pos2) {\r\n            return Math.sqrt(Math.pow(pos2.x - pos1.x, 2) + Math.pow(pos2.y - pos1.y, 2));\r\n        }\r\n        for (let i = 0; i < this.players.length; i++) {\r\n            const playerPos = { x: this.players[i].x, y: this.players[i].y };\r\n            if (distanceBetween(playerPos, pos) < this.safeMinimumSpawnDistance()) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    safeSpawnPosition() {\r\n        let safePos;\r\n        do {\r\n            safePos = this.randomSpawnPosition();\r\n        } while (!this.isSafeSpawnPosition(safePos));\r\n        return safePos;\r\n    }\r\n\r\n    randomSpawnPosition() {\r\n        let spawnArea = this.computeSpawnArea();\r\n        return {\r\n            x: randomFloat(spawnArea.x_min, spawnArea.x_max),\r\n            y: randomFloat(spawnArea.y_min, spawnArea.y_max)\r\n        };\r\n    }\r\n\r\n    randomSpawnAngle() {\r\n        return randomFloat(this.config.minSpawnAngle, this.config.maxSpawnAngle);\r\n    }\r\n\r\n    pixelAddress(x, y) {\r\n        return y*this.width + x;\r\n    }\r\n\r\n    pixelAddressToCoordinates(addr) {\r\n        let x = addr % this.width;\r\n        let y = (addr - x) / this.width;\r\n        return \"(\"+x+\", \"+y+\")\";\r\n    }\r\n\r\n    \r\n    // GETTERS\r\n\r\n    getMode() {\r\n        return this.mode;\r\n    }\r\n\r\n    getTargetScore() {\r\n        return this.targetScore;\r\n    }\r\n\r\n    getPlayers() {\r\n        return this.players;\r\n    }\r\n\r\n    // Returns the player with the specified ID, or undefined if no such player exists:\r\n    getPlayerByID(id) {\r\n        return this.players.find((player) => player.hasID(id));\r\n    }\r\n\r\n    getLivePlayers() {\r\n        const isAlive = this.constructor.isAlive;\r\n        return this.players.filter(isAlive);\r\n    }\r\n\r\n    getNumberOfPlayers() {\r\n        return this.players.length;\r\n    }\r\n\r\n    getNumberOfLivePlayers() {\r\n        return this.getLivePlayers().length;\r\n    }\r\n\r\n    getScoreOfPlayer(id) {\r\n        const accumulateScore = (sum, round) => sum + round.getSuccessOfPlayer(id);\r\n        return this.rounds.reduce(accumulateScore, 0);\r\n    }\r\n\r\n    getCurrentRound() {\r\n        return this.rounds[this.rounds.length - 1];\r\n    }\r\n\r\n\r\n    // SETTERS\r\n\r\n    setMode(mode) {\r\n        if (mode === this.constructor.COMPETITIVE || mode === this.constructor.PRACTICE) {\r\n            log(`Setting game mode to ${mode}.`);\r\n            this.mode = mode;\r\n        } else {\r\n            logError(`${mode} is not a valid game mode. Keeping ${this.getMode()}.`);\r\n        }\r\n    }\r\n\r\n    setTargetScore(score) {\r\n        let ts = this.constructor.DEFAULT_TARGET_SCORE;\r\n        let mts = this.constructor.MAX_TARGET_SCORE;\r\n        // Neither floats nor negative numbers are allowed:\r\n        if (isInt(score) && score > 0) {\r\n            // Check if the desired target score is allowed:\r\n            if (score > mts) {\r\n                // It is too high. Fall back to max value:\r\n                logWarning(`${score} is larger than the maximum allowed target score of ${mts}. Falling back to ${mts}.`);\r\n                ts = mts;\r\n            } else {\r\n                // The desired target score is OK!\r\n                log(`Setting target score to ${score}.`);\r\n                ts = score;\r\n            }\r\n        } else {\r\n            logWarning(`${score} is not a valid target score. Defaulting to ${ts}.`);\r\n        }\r\n        this.targetScore = ts;\r\n    }\r\n\r\n    setSize(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.renderer.setSize(width, height);\r\n    }\r\n\r\n    setPreventSpawnkill(mode) {\r\n        this.preventSpawnkill = mode;\r\n    }\r\n\r\n\r\n    // CHECKERS\r\n\r\n    isStarted() {\r\n        return this.started;\r\n    }\r\n\r\n    isEnded() {\r\n        return this.ended;\r\n    }\r\n\r\n    /** Returns true if a round is over (including when KONEC HRY is being shown). */\r\n    isPostRound() {\r\n        return this.getCurrentRound().getResults().length === this.getNumberOfPlayers();\r\n    }\r\n\r\n    isLive() {\r\n        if (this.isCompetitive()) {\r\n            return this.getNumberOfLivePlayers() > 1;\r\n        } else {\r\n            return this.getNumberOfLivePlayers() > 0;\r\n        }\r\n    }\r\n\r\n    // Caution: Returns true if called during the spawn procedure, since it only checks whether the game is live or not.\r\n    isRoundOver() {\r\n        return !this.isLive();\r\n    }\r\n\r\n    isGameOver() {\r\n        const hasReachedTargetScore = player => this.getScoreOfPlayer(player.getID()) >= this.getTargetScore();\r\n        return !this.isLive() && this.isCompetitive() && this.players.some(hasReachedTargetScore);\r\n    }\r\n\r\n    isCompetitive() {\r\n        return this.getMode() === this.constructor.COMPETITIVE;\r\n    }\r\n\r\n    isOccupiedPixelAddress(addr) {\r\n        return this.pixels[addr] > 0;\r\n    }\r\n\r\n    isCrashing(player, left, top) {\r\n        const hitboxPixels = this.computeHitbox(player, left, top);\r\n        return hitboxPixels.some(this.isOccupiedPixelAddress, this);\r\n    }\r\n\r\n    /**\r\n     * Checks whether a draw at the specified coordinates is inside the field.\r\n     * @param {Number} left The x coordinate of the left edge of the draw.\r\n     * @param {Number} top  The y coordinate of the top edge of the draw.\r\n     */\r\n    isOnField(left, top) {\r\n        return left >= 0\r\n            && top  >= 0\r\n            && left+this.config.thickness <= this.width\r\n            && top +this.config.thickness <= this.height;\r\n    }\r\n\r\n    /** \r\n     * Checks whether there is a player with a specific ID in the game.\r\n     * @param {Number} id The ID to check for.\r\n     */\r\n    hasPlayer(id) {\r\n        return Player.isPlayer(this.getPlayerByID(id));\r\n    }\r\n\r\n\r\n    // DOERS\r\n\r\n    /** \r\n     * Adds a player to the game.\r\n     * @param {Player} player The player to add.\r\n     */\r\n    addPlayer(player) {\r\n        const maxPlayers = this.maxPlayers();\r\n        if (!Player.isPlayer(player)) {\r\n            throw new TypeError(`Cannot add ${player} to the game because it is not a player.`);\r\n        } else if (player.getID() > maxPlayers) {\r\n            throw new RangeError(`Cannot add ${player} to the game because player IDs larger than ${maxPlayers} are not supported.`);\r\n        } else if (this.hasPlayer(player.getID())) {\r\n            logWarning(`Not adding ${player} to the game because there is already a player with ID ${player.getID()}.`);\r\n        } else {\r\n            log(`${player} ready!`);\r\n            this.players.push(player);\r\n            player.setMaxSpeed(this.config.speed);\r\n            this.GUI_playerReady(player.getID());\r\n        }\r\n    }\r\n\r\n    /** \r\n     * Removes a player from the game.\r\n     * @param {Number} id The ID of the player to remove.\r\n     */\r\n    removePlayer(id) {\r\n        const playerToRemove = this.getPlayerByID(id);\r\n        // Notify GUI iff the player exists:\r\n        if (Player.isPlayer(playerToRemove)) {\r\n            log(`${playerToRemove} unready!`);\r\n            this.GUI_playerUnready(id);\r\n        }\r\n        // Update this.players:\r\n        this.players = this.players.filter((player) => player !== playerToRemove);\r\n    }\r\n\r\n    /** Starts the game. */\r\n    start() {\r\n        if (this.isCompetitive()) {\r\n            this.setTargetScore(this.constructor.calculateTargetScore(this.getNumberOfPlayers()));\r\n            this.players.forEach((player) => {\r\n                this.GUI_updateScoreOfPlayer(player.getID(), 0);\r\n            });\r\n        }\r\n        log(\"Starting game!\");\r\n        this.GUI_gameStarted();\r\n        MainLoop.start();\r\n        this.started = true;\r\n        this.pixels = new Uint8Array(this.width * this.height);\r\n        this.beginNewRound();\r\n    }\r\n\r\n    /** Announce KONEC HRY, show results etc. */\r\n    konecHry() {\r\n        log(this.constructor.KONEC_HRY);\r\n        this.ended = true;\r\n        this.GUI_konecHry();\r\n        this.quitHintTimer = setTimeout(this.showQuitHint.bind(this), this.config.hintDelay);\r\n    }\r\n\r\n    quit() {\r\n        clearTimeout(this.quitHintTimer);\r\n        clearTimeout(this.proceedHintTimer);\r\n    }\r\n\r\n    clearField() {\r\n        this.pixels.fill(0);\r\n        this.Render_clearField();\r\n    }\r\n\r\n    showProceedHint() {\r\n        this.GUI_showMessage(this.config.messages.next);\r\n    }\r\n\r\n    hideProceedHint() {\r\n        clearTimeout(this.proceedHintTimer);\r\n        this.GUI_hideMessage(this.config.messages.next);\r\n    }\r\n\r\n    showQuitHint() {\r\n        this.GUI_showMessage(this.config.messages.quit);\r\n    }\r\n\r\n    hideQuitHint() {\r\n        clearTimeout(this.quitHintTimer);\r\n        this.GUI_hideMessage(this.config.messages.quit);\r\n    }\r\n\r\n    beginNewRound() {\r\n        this.rounds.push(new Round());\r\n        log(`======== ROUND ${this.rounds.length} ========`);\r\n        this.resetPlayers();\r\n        this.clearField();\r\n        // Sort the players by their IDs so they spawn in the correct order:\r\n        this.sortPlayers();\r\n        this.spawnAndStartPlayers();\r\n    }\r\n\r\n    endRound() {\r\n        this.stopPlayers();\r\n        this.proceedHintTimer = setTimeout(this.showProceedHint.bind(this), this.config.hintDelay);\r\n    }\r\n\r\n    sortPlayers() {\r\n        this.players.sort((a, b) => (a.getID() - b.getID()));\r\n    }\r\n\r\n    startPlayer(player) {\r\n        player.start();\r\n    }\r\n\r\n    stopPlayer(player) {\r\n        player.stop();\r\n    }\r\n\r\n    resetPlayer(player) {\r\n        player.reset();\r\n    }\r\n\r\n    /** Starts all players. */\r\n    startPlayers() {\r\n        this.players.forEach(this.startPlayer);\r\n    }\r\n\r\n    stopPlayers() {\r\n        this.players.forEach(this.stopPlayer);\r\n    }\r\n\r\n    resetPlayers() {\r\n        this.players.forEach(this.resetPlayer);\r\n    }\r\n\r\n    occupyPixel(x, y, id) {\r\n        this.pixels[this.pixelAddress(x, y)] = id;\r\n    }\r\n\r\n    occupy(player, left, top) {\r\n        let right = left + this.config.thickness;\r\n        let bottom = top + this.config.thickness;\r\n        let id = player.getID();\r\n        forfor(top, bottom, left, right, this.occupyPixel.bind(this), id);\r\n        this.Render_drawSquare(left, top, player.getColor());\r\n    }\r\n\r\n    flicker(player) {\r\n        const stopFlickering = () => {\r\n            clearInterval(flickerTicker);\r\n            let left = this.edgeOfSquare(player.x);\r\n            let top  = this.edgeOfSquare(player.y);\r\n            this.Render_drawSquare(left, top, player.getColor());\r\n        }\r\n        const self = this;\r\n        const left = this.edgeOfSquare(player.x);\r\n        const top  = this.edgeOfSquare(player.y);\r\n        const color = player.getColor();\r\n        let isVisible = false;\r\n        let flickerTicker = setInterval(() => {\r\n            if (isVisible) {\r\n                this.Render_clearSquare(left, top);\r\n            } else {\r\n                this.Render_drawSquare(left, top, color);\r\n            }\r\n            isVisible = !isVisible;\r\n        }, 1000/this.config.flickerFrequency);\r\n        setTimeout(stopFlickering, self.config.flickerDuration);\r\n    }\r\n\r\n    spawn(player, position, direction) {\r\n        log(`${player} spawning at (${round(position.x, 2)}, ${round(position.y, 2)}).`);\r\n        player.x = position.x;\r\n        player.y = position.y;\r\n        player.direction = direction;\r\n        const left = this.edgeOfSquare(player.x);\r\n        const top  = this.edgeOfSquare(player.y);\r\n        player.beAt(left, top);\r\n        this.occupy(player, left, top);\r\n        this.flicker(player);\r\n    }\r\n\r\n    /** Spawns and then starts all players. */\r\n    spawnAndStartPlayers() {\r\n        const self = this;\r\n        log(`Spawnkill prevention is ` + (this.preventSpawnkill\r\n                                       ? `enabled. No two players will spawn within ${self.safeMinimumSpawnDistance()} Kuxels of each other.`\r\n                                       : `disabled. Players may spawn arbitrarily close to each other.`));\r\n        // Spawn each player, then wait for it to finish flickering before spawning the next one:\r\n        (function spawnPlayer(i) {\r\n            if (i < self.players.length) {\r\n                const spawnPosition = self.preventSpawnkill ? self.safeSpawnPosition() : self.randomSpawnPosition();\r\n                self.spawn(self.players[i], spawnPosition, self.randomSpawnAngle());\r\n                setTimeout(() => spawnPlayer(++i), self.config.flickerDuration);\r\n            } else {\r\n                // All players have spawned. Start them!\r\n                self.startPlayers();\r\n            }\r\n        })(0);\r\n    }\r\n\r\n    /**\r\n     * Draws a specific player.\r\n     */\r\n    drawPlayer(player) {\r\n        const thickness = this.config.thickness;\r\n        while (player.isAlive() && !player.queuedDraws.isEmpty()) {\r\n            let color = player.getColor();\r\n            let lastPosition = player.getLastPosition();\r\n            let currentDraw = player.queuedDraws.dequeue();\r\n            let left = this.edgeOfSquare(currentDraw.x);\r\n            let top  = this.edgeOfSquare(currentDraw.y);\r\n            if (!player.justWasAt(left, top)) {\r\n                // The new position is not identical to the last one.\r\n                let diff_left = left - player.getLastPosition().left;\r\n                let diff_top  = top  - player.getLastPosition().top;\r\n                if (!this.isOnField(left, top)) {\r\n                    // The player wants to draw outside the playing field => DIE.\r\n                    this.death(player, \"crashed into the wall\");\r\n                    this.occupy(player, lastPosition.left, lastPosition.top);\r\n                } else if (this.isCrashing(player, left, top)) {\r\n                    // The player wants to draw on a spot occupied by a Kurve => DIE.\r\n                    this.death(player, \"crashed\");\r\n                    this.occupy(player, lastPosition.left, lastPosition.top);\r\n                } else {\r\n                    // The player is not dying.\r\n                    player.beAt(left, top);\r\n                    if (!player.isHoly()) {\r\n                        // The player is not holy, so it should draw.\r\n                        this.occupy(player, left, top);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    drawHead(player) {\r\n        if (player.isAlive()) {\r\n            const lastPosition = player.getLastPosition();\r\n            const left = lastPosition.left;\r\n            const top  = lastPosition.top;\r\n            const color = player.getColor();\r\n            this.Render_drawHead(left, top, color);\r\n        }\r\n    }\r\n\r\n    updateGUIScoreboard() {\r\n        const updateScore = (player) => {\r\n            const id = player.getID();\r\n            this.GUI_updateScoreOfPlayer(id, this.getScoreOfPlayer(id));\r\n        }\r\n        this.getLivePlayers().forEach(updateScore);\r\n    }\r\n\r\n    death(player, cause) {\r\n        player.die(cause);\r\n        this.getCurrentRound().add(player);\r\n        this.updateGUIScoreboard();\r\n        if (this.isRoundOver()) {\r\n            if (this.isCompetitive()) {\r\n                const isAlive = this.constructor.isAlive;\r\n                const winner = this.players.find(isAlive);\r\n                this.winRound(winner);\r\n            }\r\n            this.endRound();\r\n        }\r\n    }\r\n\r\n    winRound(player) {\r\n        log(`${player} won the round.`);\r\n        // Ugly fix for the bug where the winner's head disappears when the round ends:\r\n        this.occupy(player, this.edgeOfSquare(player.x), this.edgeOfSquare(player.y));\r\n        this.getCurrentRound().add(player);\r\n    }\r\n\r\n    proceedKeyPressed() {\r\n        this.hideProceedHint();\r\n        this.hideQuitHint();\r\n        if (this.isGameOver()) {\r\n            // The game is over, so we should show KONEC HRY:\r\n            this.konecHry();\r\n        } else if (this.isPostRound()) {\r\n            // We are post round and the game is not over, so we should proceed to the next round:\r\n            this.beginNewRound();\r\n        }\r\n    }\r\n\r\n    shouldShowReloadConfirmationOnReloadKey() {\r\n        return this.isPostRound();\r\n    }\r\n\r\n    shouldQuitOnQuitKey() {\r\n        return this.isPostRound() && !this.isGameOver();\r\n    }\r\n\r\n    shouldQuitOnProceedKey() {\r\n        return this.isEnded();\r\n    }\r\n\r\n\r\n    // RENDERER AND GUI CONTROLLER COMMUNICATION\r\n\r\n    GUI_playerReady(id) {\r\n        this.guiController.playerReady(id);\r\n    }\r\n    GUI_playerUnready(id) {\r\n        this.guiController.playerUnready(id);\r\n    }\r\n    GUI_updateScoreOfPlayer(id, newScore) {\r\n        this.guiController.updateScoreOfPlayer(id, newScore);\r\n    }\r\n    GUI_gameStarted() {\r\n        this.guiController.gameStarted();\r\n    }\r\n    GUI_konecHry() {\r\n        this.guiController.konecHry();\r\n    }\r\n    GUI_showMessage(message) {\r\n        this.guiController.showMessage(message);\r\n    }\r\n    GUI_hideMessage(message) {\r\n        this.guiController.hideMessage(message);\r\n    }\r\n\r\n    Render_drawSquare(left, top, color) {\r\n        this.renderer.drawSquare(left, top, this.config.thickness, color);\r\n    }\r\n    Render_drawHead(left, top, color) {\r\n        this.renderer.drawSquare_overlay(left, top, this.config.thickness, color);\r\n    }\r\n    Render_clearSquare(left, top) {\r\n        this.renderer.clearSquare(left, top, this.config.thickness);\r\n    }\r\n    Render_clearHeads() {\r\n        this.renderer.clearRectangle_overlay(0, 0, this.width, this.height);\r\n    }\r\n    Render_clearField() {\r\n        this.renderer.clearRectangle(0, 0, this.width, this.height);\r\n        this.renderer.clearRectangle_overlay(0, 0, this.width, this.height);\r\n    }\r\n\r\n\r\n    // MAIN LOOP\r\n\r\n\r\n\r\n    updatePlayer(player, delta) {\r\n        if (player.isAlive()) {\r\n            const angleChange = this.computeAngleChange();\r\n            let direction = player.getDirection();\r\n            if (player.isPressingLeft()) {\r\n                direction = direction + angleChange; // let compound assignment not optimizable in V8\r\n            }\r\n            if (player.isPressingRight()) {\r\n                direction = direction - angleChange; // let compound assignment not optimizable in V8\r\n            }\r\n            // We use normalizeAngle so the angle stays in the interval -pi < dir <= pi:\r\n            player.setDirection(normalizeAngle(direction));\r\n            const theta = player.getVelocity() * delta / 1000;\r\n            player.x += theta * Math.cos(player.direction);\r\n            player.y -= theta * Math.sin(player.direction);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates everything on each tick.\r\n     * @param {Number} delta\r\n     *   The amount of time since the last update, in seconds.\r\n     */\r\n    update(delta) {\r\n        this.players.forEach((player) => { this.updatePlayer(player, delta); });\r\n        if (this.totalNumberOfTicks % this.maxTicksBetweenDraws() === 0) {\r\n            this.getLivePlayers().forEach((player) => {\r\n                player.enqueueDraw();\r\n            });\r\n        }\r\n        this.totalNumberOfTicks++;\r\n        // Cycle players so the players take turns being prioritized:\r\n        if (this.isLive()) {\r\n            this.players.unshift(this.players.pop());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws all players.\r\n     */\r\n    draw() {\r\n        this.Render_clearHeads();\r\n        this.players.forEach(this.drawPlayer, this);\r\n        this.players.forEach(this.drawHead, this);\r\n    }\r\n\r\n    /**\r\n     * Updates the FPS counter etc.\r\n     * @param {Number} framerate\r\n     *   The smoothed frames per second.\r\n     * @param {Boolean} panic\r\n     *   Whether the main loop panicked because the simulation fell too far behind real time.\r\n     */\r\n    end(framerate, panic) {\r\n        if (panic) {\r\n            let discardedTime = Math.round(MainLoop.resetFrameDelta());\r\n            console.warn(\"Main loop panicked. Discarding \" + discardedTime + \"ms.\");\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Initiates the main loop.\r\n     */\r\n    initMainLoop() {\r\n        this.MainLoop = MainLoop;\r\n        this.MainLoop\r\n            .setUpdate(this.update.bind(this))\r\n            .setDraw(this.draw.bind(this))\r\n            .setEnd(this.end.bind(this))\r\n            .setSimulationTimestep(1000/this.config.tickrate)\r\n            .setMaxAllowedFPS(this.config.maxFramerate);\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/Game.js","export function Renderer(mainCanvas, overlayCanvas) {\r\n\r\n    const context_main = mainCanvas.getContext(\"2d\");\r\n    const context_overlay = overlayCanvas.getContext(\"2d\");\r\n\r\n\r\n    // PRIVATE FUNCTIONS:\r\n\r\n    function _drawRectangle(context, left, top, width, height, color) {\r\n        context.fillStyle = color;\r\n        context.fillRect(left, top, width, height);\r\n    }\r\n\r\n    function _clearRectangle(context, left, top, width, height) {\r\n        context.clearRect(left, top, width, height);\r\n    }\r\n\r\n    function _setSize(canvas, width, height) {\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n    }\r\n\r\n\r\n    // PUBLIC API:\r\n\r\n    function setSize(width, height) {\r\n        _setSize(mainCanvas   , width, height);\r\n        _setSize(overlayCanvas, width, height);\r\n    }\r\n\r\n    // Main canvas:\r\n\r\n    function drawSquare(left, top, size, color) {\r\n        _drawRectangle(context_main, left, top, size, size, color);\r\n    }\r\n\r\n    function clearSquare(left, top, size) {\r\n        _clearRectangle(context_main, left, top, size, size);\r\n    }\r\n\r\n    function clearRectangle(left, top, width, height) {\r\n        _clearRectangle(context_main, left, top, width, height);\r\n    }\r\n\r\n    // Overlay canvas:\r\n\r\n    function drawSquare_overlay(left, top, size, color) {\r\n        _drawRectangle(context_overlay, left, top, size, size, color);\r\n    }\r\n\r\n    function clearSquare_overlay(left, top, size) {\r\n        _clearRectangle(context_overlay, left, top, size, size);\r\n    }\r\n\r\n    function clearRectangle_overlay(left, top, width, height) {\r\n        _clearRectangle(context_overlay, left, top, width, height);\r\n    }\r\n\r\n    return {\r\n        drawSquare,\r\n        clearSquare,\r\n        clearRectangle,\r\n        drawSquare_overlay,\r\n        clearSquare_overlay,\r\n        clearRectangle_overlay,\r\n        setSize\r\n    };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/Renderer.js","import { Message } from \"./Message.js\";\r\n\r\nexport class InfoMessage extends Message {\r\n    constructor(text) {\r\n        super(text, \"info\");\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/InfoMessage.js","import { Message } from \"./Message.js\";\r\n\r\nexport class WarningMessage extends Message {\r\n    constructor(text) {\r\n        super(text, \"warning\");\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/WarningMessage.js","import { isString, log, logWarning, logError } from \"./PreferencesUtilities.js\";\r\nimport { Preference } from \"./Preference.js\";\r\nimport { PreferenceWithValue } from \"./PreferenceWithValue.js\";\r\n\r\nexport function PreferenceManager(preferencesData) {\r\n    const LOCALSTORAGE_PREFIX = \"pref_key_\";\r\n\r\n    // Parse and validate preferences:\r\n    log(\"Validating preferences ...\");\r\n    const PREFERENCES = parsePreferences(preferencesData);\r\n    log(\"Done.\");\r\n\r\n    // Initialize cached preference database:\r\n    let CACHED_PREFERENCES_WITH_VALUES = getAllPreferencesWithDefaultValues();\r\n    CACHED_PREFERENCES_WITH_VALUES.forEach((preferenceWithValue) => {\r\n        const key = preferenceWithValue.preference.key;\r\n        try {\r\n            const savedValue = getSaved(key);\r\n            const defaultValue = preferenceWithValue.preference.getDefaultValue();\r\n            if (savedValue === null) {\r\n                log(`Using default value '${defaultValue}' for preference '${key}' since there was no saved value.`);\r\n            }\r\n            preferenceWithValue.value = savedValue !== null ? savedValue : defaultValue;\r\n        } catch(e) {\r\n            if (e instanceof TypeError) {\r\n                logWarning(`Using default value '${defaultValue}' for preference '${key}' since the saved value in localStorage was not a valid one.`);\r\n            } else {\r\n                logWarning(`Using default value '${defaultValue}' for preference '${key}' since no saved value could be loaded from localStorage.`);\r\n            }\r\n        }\r\n    });\r\n\r\n    function parsePreferences(preferencesData) {\r\n        return preferencesData.map(parsePreference);\r\n    }\r\n\r\n    function parsePreference(pref, index) {\r\n        if (!isString(pref.key)) {\r\n            throw new TypeError(`'The preference at index ${index} does not have a valid key (found ${pref.key}).`);\r\n        } else if (pref.type === undefined || !(pref.type.prototype instanceof Preference)) {\r\n            throw new TypeError(`Preference '${pref.key}' does not use a valid preference type (found ${pref.type}).`);\r\n        } else if (pref.default === undefined) {\r\n            throw new TypeError(`Preference '${pref.key}' has no default value.`);\r\n        }\r\n        return new (pref.type)(pref);\r\n    }\r\n\r\n    function preferenceExists(key) {\r\n        return getPreference(key) !== undefined;\r\n    }\r\n\r\n    function getPreference(key) {\r\n        return PREFERENCES.find((pref) => pref.key === key);\r\n    }\r\n\r\n    function getCachedPreference(key) {\r\n        return CACHED_PREFERENCES_WITH_VALUES.find((preferenceWithValue) => preferenceWithValue.preference.key === key);\r\n    }\r\n\r\n    function getAllPreferencesWithValues_saved() { // throws SecurityError etc\r\n        return PREFERENCES.map((preference) => new PreferenceWithValue(preference, getSaved(preference.key)));\r\n    }\r\n\r\n    function getAllPreferencesWithValues_cached() {\r\n        return PREFERENCES.map((preference) => new PreferenceWithValue(preference, getCached(preference.key)));\r\n    }\r\n\r\n    function getAllPreferencesWithDefaultValues() {\r\n        return PREFERENCES.map((preference) => new PreferenceWithValue(preference, preference.getDefaultValue()));\r\n    }\r\n\r\n    function getKey(pref) {\r\n        return pref.key;\r\n    }\r\n\r\n    function isValidPreferenceValue(key, value) {\r\n        return getPreference(key).isValidValue(value);\r\n    }\r\n\r\n    function setToDefaultValue(key) { // throws SecurityError etc\r\n        set(key, getDefaultValue(key));\r\n    }\r\n\r\n    function getDefaultValue(key) {\r\n        if (!preferenceExists(key)) {\r\n            throw new Error(`Preference '${key}' does not exist.`);\r\n        }\r\n        return getPreference(key).getDefaultValue();\r\n    }\r\n\r\n    function LS_prefix(key) {\r\n        return LOCALSTORAGE_PREFIX + key;\r\n    }\r\n\r\n    function set(key, value) { // throws SecurityError etc\r\n        if (!preferenceExists(key)) {\r\n            throw new Error(`There is no preference with key '${key}'.`);\r\n        }\r\n        const pref = getPreference(key);\r\n        if (!isValidPreferenceValue(key, value)) {\r\n            pref.invalidValue(value);\r\n        } else {\r\n            log(`Setting preference '${key}' to '${value}'.`);\r\n            getCachedPreference(key).value = value;\r\n            try {\r\n                localStorage.setItem(LS_prefix(key), pref.constructor.stringify(value));\r\n            } catch(e) {\r\n                logError(`Failed to save value for preference '${key}' to localStorage. The following error was thrown:\\n${e}`);\r\n                throw e; // likely a SecurityError, but could be others as well\r\n            }\r\n        }\r\n    }\r\n\r\n    function getSaved(key) { // throws SecurityError, TypeError etc\r\n        if (!preferenceExists(key)) {\r\n            throw new Error(`There is no preference with key '${key}'.`);\r\n        }\r\n        const pref = getPreference(key);\r\n        let savedValue;\r\n        try {\r\n            savedValue = localStorage.getItem(LS_prefix(key));\r\n        } catch(e) {\r\n            logError(`Failed to load saved value for preference '${key}' from localStorage. The following error was thrown:\\n${e}`);\r\n            throw e; // likely a SecurityError, but could be others as well\r\n        }\r\n        if (savedValue === null) {\r\n            // There was no saved value.\r\n            return null;\r\n        } else if (isValidPreferenceValue(key, pref.constructor.parse(savedValue))) {\r\n            return pref.constructor.parse(savedValue);\r\n        } else {\r\n            throw new TypeError(`'${savedValue}' could not be parsed to a valid value for preference '${pref}'.`);\r\n        }\r\n    }\r\n\r\n    function getCached(key) {\r\n        if (!preferenceExists(key)) {\r\n            throw new Error(`There is no preference with key '${key}'.`);\r\n        }\r\n        return getCachedPreference(key).value;\r\n    }\r\n\r\n    function setAllToDefault() {\r\n        log(\"Resetting all preferences ...\");\r\n        PREFERENCES.map(getKey).forEach(setToDefaultValue);\r\n        log(\"Done.\");\r\n    }\r\n\r\n    return {\r\n        isValidPreferenceValue,\r\n        set,\r\n        getSaved,\r\n        getCached,\r\n        setToDefaultValue,\r\n        getDefaultValue,\r\n        getAllPreferencesWithValues_saved,\r\n        getAllPreferencesWithValues_cached,\r\n        getAllPreferencesWithDefaultValues,\r\n        setAllToDefault\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/preferences/PreferenceManager.js","import { byID, KEY, MOUSE, Keyboard, Mouse, log, logWarning, logError } from \"./lib/utilities.js\";\r\n\r\nimport { Game } from \"./Game.js\";\r\nimport { Player } from \"./Player.js\";\r\nimport { Renderer } from \"./Renderer.js\";\r\nimport { GUIController } from \"./GUIController.js\";\r\n\r\nimport { BooleanPreference } from \"./lib/preferences/BooleanPreference.js\";\r\nimport { MultichoicePreference } from \"./lib/preferences/MultichoicePreference.js\";\r\nimport { PreferenceManager } from \"./lib/preferences/PreferenceManager.js\";\r\n\r\nimport { InfoMessage } from \"./lib/InfoMessage.js\";\r\nimport { WarningMessage } from \"./lib/WarningMessage.js\";\r\nimport { ConfirmationDialog } from \"./lib/ConfirmationDialog.js\";\r\n\r\nimport TEXT from \"./locales/Zatacka.en_US.js\";\r\nimport STRINGS from \"./strings.js\";\r\n\r\nconst Zatacka = (() => {\r\n\r\n    const canvas_main = byID(\"canvas_main\");\r\n    const canvas_overlay = byID(\"canvas_overlay\");\r\n    const ORIGINAL_WIDTH = canvas_main.width;\r\n    const ORIGINAL_HEIGHT = canvas_main.height;\r\n    const TOTAL_BORDER_THICKNESS = 4;\r\n    const KEY_RELOAD = KEY.F5;\r\n    const KEY_FULLSCREEN = KEY.F11;\r\n    const KEY_DEVTOOLS = KEY.F12;\r\n    const ALLOWED_KEYS = [KEY_FULLSCREEN, KEY_DEVTOOLS]; // not to be intercepted by our event handler\r\n\r\n    const config = Object.freeze({\r\n        tickrate: 600, // Hz\r\n        maxFramerate: 300, // Hz\r\n        canvas: canvas_main,\r\n        thickness: 3, // Kuxels\r\n        speed: 60, // Kuxels per second\r\n        turningRadius: 28.5, // Kuxels (NB: _radius_)\r\n        minSpawnAngle: -Math.PI/2, // radians\r\n        maxSpawnAngle:  Math.PI/2, // radians\r\n        spawnMargin: 100, // Kuxels\r\n        preventSpawnkill: false,\r\n        flickerFrequency: 20, // Hz, when spawning\r\n        flickerDuration: 830, // ms, when spawning\r\n        minHoleInterval: 90, // Kuxels\r\n        maxHoleInterval: 300, // Kuxels\r\n        minHoleSize: 5, // Kuxels\r\n        maxHoleSize: 9, // Kuxels\r\n        hintDelay: 3000, // ms\r\n        keys: {\r\n            \"proceed\": [KEY.SPACE, KEY.ENTER],\r\n            \"quit\":    [KEY.ESCAPE]\r\n        },\r\n        messages: Object.freeze({\r\n            pick:    new InfoMessage(TEXT.hint_pick),\r\n            proceed: new InfoMessage(TEXT.hint_proceed),\r\n            next:    new InfoMessage(TEXT.hint_next),\r\n            quit:    new InfoMessage(TEXT.hint_quit),\r\n            alt:     new WarningMessage(TEXT.hint_alt),\r\n            ctrl:    new WarningMessage(TEXT.hint_ctrl),\r\n            mouse:   new WarningMessage(TEXT.hint_mouse),\r\n            preferences_access_denied: new WarningMessage(TEXT.hint_preferences_access_denied),\r\n            preferences_localstorage_failed: new WarningMessage(TEXT.hint_preferences_localstorage_failed),\r\n        }),\r\n        dialogs: Object.freeze({\r\n            confirmation_quit: new ConfirmationDialog(TEXT.label_text_confirm_quit, quitGame),\r\n            confirmation_reload: new ConfirmationDialog(TEXT.label_text_confirm_reload, reload),\r\n        }),\r\n        defaultPlayers: Object.freeze([\r\n            { id: 1, name: \"Red\"   , color: \"#FF2800\", keyL: KEY[\"1\"]                              , keyR: KEY.Q                         },\r\n            { id: 2, name: \"Yellow\", color: \"#C3C300\", keyL: [ KEY.CTRL, KEY.Z ]                   , keyR: [ KEY.ALT, KEY.X ]            },\r\n            { id: 3, name: \"Orange\", color: \"#FF7900\", keyL: KEY.M                                 , keyR: KEY.COMMA                     },\r\n            { id: 4, name: \"Green\" , color: \"#00CB00\", keyL: KEY.LEFT_ARROW                        , keyR: KEY.DOWN_ARROW                },\r\n            { id: 5, name: \"Pink\"  , color: \"#DF51B6\", keyL: [ KEY.DIVIDE, KEY.END, KEY.PAGE_DOWN ], keyR: [ KEY.MULTIPLY, KEY.PAGE_UP ] },\r\n            { id: 6, name: \"Blue\"  , color: \"#00A2CB\", keyL: MOUSE.LEFT                            , keyR: MOUSE.RIGHT                   }\r\n        ])\r\n    });\r\n\r\n    const PREFERENCES = Object.freeze([\r\n        {\r\n            type: BooleanPreference,\r\n            key: STRINGS.pref_key_prevent_spawnkill,\r\n            label: TEXT.pref_label_prevent_spawnkill,\r\n            description: TEXT.pref_label_description_prevent_spawnkill,\r\n            default: false,\r\n        },\r\n        {\r\n            type: BooleanPreference,\r\n            key: STRINGS.pref_key_confirm_quit,\r\n            label: TEXT.pref_label_confirm_quit,\r\n            description: TEXT.pref_label_description_confirm_quit,\r\n            default: true,\r\n        },\r\n        {\r\n            type: BooleanPreference,\r\n            key: STRINGS.pref_key_confirm_reload,\r\n            label: TEXT.pref_label_confirm_reload,\r\n            description: TEXT.pref_label_description_confirm_reload,\r\n            default: true,\r\n        },\r\n        {\r\n            type: BooleanPreference,\r\n            key: STRINGS.pref_key_allow_blurry_scaling,\r\n            label: TEXT.pref_label_allow_blurry_scaling,\r\n            description: TEXT.pref_label_description_allow_blurry_scaling,\r\n            default: false,\r\n        },\r\n        {\r\n            type: MultichoicePreference,\r\n            key: STRINGS.pref_key_cursor,\r\n            label: TEXT.pref_label_cursor,\r\n            description: TEXT.pref_label_description_cursor,\r\n            values: [\r\n                STRINGS.pref_value_cursor_always_visible,\r\n                STRINGS.pref_value_cursor_hidden_when_mouse_used_by_player,\r\n                STRINGS.pref_value_cursor_always_hidden,\r\n            ],\r\n            labels: [\r\n                TEXT.pref_label_cursor_always_visible,\r\n                TEXT.pref_label_cursor_hidden_when_mouse_used_by_player,\r\n                TEXT.pref_label_cursor_always_hidden,\r\n            ],\r\n            default: STRINGS.pref_value_cursor_hidden_when_mouse_used_by_player,\r\n        },\r\n        {\r\n            type: MultichoicePreference,\r\n            key: STRINGS.pref_key_edge_fix,\r\n            label: TEXT.pref_label_edge_fix,\r\n            description: TEXT.pref_label_description_edge_fix,\r\n            values: [\r\n                STRINGS.pref_value_edge_fix_full,\r\n                STRINGS.pref_value_edge_fix_minimal,\r\n                STRINGS.pref_value_edge_fix_off,\r\n            ],\r\n            labels: [\r\n                TEXT.pref_label_edge_fix_full,\r\n                TEXT.pref_label_edge_fix_minimal,\r\n                TEXT.pref_label_edge_fix_off,\r\n            ],\r\n            default: STRINGS.pref_value_edge_fix_off,\r\n        },\r\n        {\r\n            type: MultichoicePreference,\r\n            key: STRINGS.pref_key_hints,\r\n            label: TEXT.pref_label_hints,\r\n            description: TEXT.pref_label_description_hints,\r\n            values: [\r\n                STRINGS.pref_value_hints_all,\r\n                STRINGS.pref_value_hints_warnings_only,\r\n                STRINGS.pref_value_hints_none,\r\n            ],\r\n            labels: [\r\n                TEXT.pref_label_hints_all,\r\n                TEXT.pref_label_hints_warnings_only,\r\n                TEXT.pref_label_hints_none,\r\n            ],\r\n            default: STRINGS.pref_value_hints_all,\r\n        }\r\n    ]);\r\n\r\n    const preferenceManager = new PreferenceManager(PREFERENCES);\r\n\r\n    function isProceedKey(key) {\r\n        return config.keys.proceed.includes(key);\r\n    }\r\n\r\n    function isQuitKey(key) {\r\n        return config.keys.quit.includes(key);\r\n    }\r\n\r\n    function shouldPreventDefault(key) {\r\n        return !(ALLOWED_KEYS.includes(key));\r\n    }\r\n\r\n    function setEdgePadding(padding) {\r\n        if (game.isStarted()) {\r\n            throw new Error(\"Cannot change edge padding when the game is running.\");\r\n        } else {\r\n            const newCanvasWidth = ORIGINAL_WIDTH - padding;\r\n            const newCanvasHeight = ORIGINAL_HEIGHT - 2*padding;\r\n            game.setSize(newCanvasWidth, newCanvasHeight);\r\n            guiController.setEdgePadding(padding);\r\n        }\r\n    }\r\n\r\n    function setEdgeMode(mode) {\r\n        let padding = 0;\r\n        if (mode === \"minimal\") {\r\n            padding = 1;\r\n        } else if (mode === \"full\") {\r\n            padding = TOTAL_BORDER_THICKNESS;\r\n        }\r\n        try {\r\n            setEdgePadding(padding);\r\n        } catch(e) {\r\n            logError(e);\r\n        }\r\n    }\r\n\r\n    function setPreventSpawnkill(mode) {\r\n        if (game.isStarted()) {\r\n            throw new Error(\"Cannot change edge padding when the game is running.\");\r\n        } else {\r\n            game.setPreventSpawnkill(mode);\r\n        }\r\n    }\r\n\r\n    function getHoleConfig() {\r\n        return {\r\n            minHoleSize: config.minHoleSize,\r\n            maxHoleSize: config.maxHoleSize,\r\n            minHoleInterval: config.minHoleInterval,\r\n            maxHoleInterval: config.maxHoleInterval\r\n        };\r\n    }\r\n\r\n    function getPaddedHoleConfig() {\r\n        const thickness = config.thickness;\r\n        const holeConfig = getHoleConfig();\r\n        const paddedHoleConfig = {};\r\n        paddedHoleConfig.minPaddedHoleSize = holeConfig.minHoleSize + thickness;\r\n        paddedHoleConfig.maxPaddedHoleSize = holeConfig.maxHoleSize + thickness;\r\n        paddedHoleConfig.minPaddedHoleInterval = Math.max(0, holeConfig.minHoleInterval - thickness);\r\n        paddedHoleConfig.maxPaddedHoleInterval = Math.max(0, holeConfig.maxHoleInterval - thickness);\r\n        return paddedHoleConfig;\r\n    }\r\n\r\n    function defaultPlayerData(id) {\r\n        return config.defaultPlayers.find(defaultPlayer => defaultPlayer.id === id);\r\n    }\r\n\r\n    function defaultPlayer(id) {\r\n        const playerData = defaultPlayerData(id);\r\n        if (playerData === undefined) {\r\n            throw new TypeError(`There is no default player with ID ${id}.`);\r\n        }\r\n        return new Player(playerData.id,\r\n                          playerData.name,\r\n                          playerData.color,\r\n                          playerData.keyL,\r\n                          playerData.keyR,\r\n                          getPaddedHoleConfig());\r\n    }\r\n\r\n    function applyCursorBehavior() {\r\n        const mouseIsBeingUsed = game.getPlayers().some(hasMouseButton);\r\n        let behavior;\r\n        switch (preferenceManager.getCached(STRINGS.pref_key_cursor)) {\r\n            case STRINGS.pref_value_cursor_hidden_when_mouse_used_by_player:\r\n                behavior = mouseIsBeingUsed ? STRINGS.cursor_hidden : STRINGS.cursor_visible;\r\n                break;\r\n            case STRINGS.pref_value_cursor_always_hidden:\r\n                behavior = STRINGS.cursor_hidden;\r\n                break;\r\n            default:\r\n                behavior = STRINGS.cursor_visible;\r\n        }\r\n        log(`Setting cursor behavior to ${behavior}.`);\r\n        guiController.setCursorBehavior(behavior);\r\n    }\r\n\r\n    function proceedKeyPressedInLobby() {\r\n        const numberOfReadyPlayers = game.getNumberOfPlayers();\r\n        if (numberOfReadyPlayers > 0) {\r\n            clearMessages();\r\n            applyCursorBehavior();\r\n            game.setMode(numberOfReadyPlayers === 1 ? Game.PRACTICE : Game.COMPETITIVE);\r\n            game.start();\r\n        }\r\n    }\r\n\r\n    function hasMouseButton(player) {\r\n        return player.usesAnyMouseButton();\r\n    }\r\n\r\n    function checkForDangerousInput() {\r\n        if (game.getPlayers().some((player) => player.hasKey(KEY.CTRL))) {\r\n            guiController.showMessage(config.messages.ctrl);\r\n        } else {\r\n            guiController.hideMessage(config.messages.ctrl);\r\n        }\r\n\r\n        if (game.getPlayers().some((player) => player.hasKey(KEY.ALT))) {\r\n            guiController.showMessage(config.messages.alt);\r\n        } else {\r\n            guiController.hideMessage(config.messages.alt);\r\n        }\r\n\r\n        if (game.getPlayers().some(hasMouseButton)) {\r\n            guiController.showMessage(config.messages.mouse);\r\n        } else {\r\n            guiController.hideMessage(config.messages.mouse);\r\n        }\r\n    }\r\n\r\n    function addPlayer(id) {\r\n        game.addPlayer(defaultPlayer(id));\r\n        checkForDangerousInput();\r\n        clearTimeout(hintPickTimer);\r\n        guiController.hideMessage(config.messages.pick);\r\n        clearTimeout(hintProceedTimer);\r\n        hintProceedTimer = setTimeout(() => {\r\n            guiController.showMessage(config.messages.proceed);\r\n        }, config.hintDelay);\r\n    }\r\n\r\n    function removePlayer(id) {\r\n        game.removePlayer(id);\r\n        checkForDangerousInput();\r\n        clearTimeout(hintProceedTimer);\r\n        if (game.getNumberOfPlayers() === 0) {\r\n            guiController.hideMessage(config.messages.proceed);\r\n        } else {\r\n            hintProceedTimer = setTimeout(() => {\r\n                guiController.showMessage(config.messages.proceed);\r\n            }, config.hintDelay);\r\n        }\r\n    }\r\n\r\n    function defaultPlayerHasLeftKey(playerData, pressedKey) {\r\n        return pressedKey === playerData.keyL || (playerData.keyL instanceof Array && playerData.keyL.includes(pressedKey));\r\n    }\r\n\r\n    function defaultPlayerHasRightKey(playerData, pressedKey) {\r\n        return pressedKey === playerData.keyR || (playerData.keyR instanceof Array && playerData.keyR.includes(pressedKey));\r\n    }\r\n\r\n    function addOrRemovePlayer(playerData, pressedKey) {\r\n        if (defaultPlayerHasLeftKey(playerData, pressedKey)) {\r\n            addPlayer(playerData.id);\r\n        } else if (defaultPlayerHasRightKey(playerData, pressedKey)) {\r\n            removePlayer(playerData.id);\r\n        }\r\n    }\r\n\r\n    function eventConsumer(event) {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    function keyPressedInLobby(pressedKey) {\r\n        config.defaultPlayers.forEach((playerData) => {\r\n            addOrRemovePlayer(playerData, pressedKey);\r\n        });\r\n    }\r\n\r\n    function mouseClickedInLobby(button) {\r\n        config.defaultPlayers.forEach((playerData) => {\r\n            addOrRemovePlayer(playerData, MOUSE.pack(button));\r\n        });\r\n    }\r\n\r\n    function keyHandler(event) {\r\n        const callback = game.isStarted() ? gameKeyHandler\r\n                                          : guiController.isShowingSettings() ? settingsKeyHandler\r\n                                                                              : lobbyKeyHandler;\r\n        guiController.keyPressed(event, callback);\r\n    }\r\n\r\n    function mouseHandler(event) {\r\n        const callback = game.isStarted() ? gameMouseHandler\r\n                                          : guiController.isShowingSettings() ? settingsMouseHandler\r\n                                                                              : lobbyMouseHandler;\r\n        guiController.mouseClicked(event, callback);\r\n    }\r\n\r\n    function unloadHandler(event) {\r\n        if (game.isStarted()) {\r\n            gameUnloadHandler();\r\n        }\r\n    }\r\n\r\n    function lobbyKeyHandler(event) {\r\n        if (shouldPreventDefault(event.keyCode)) {\r\n            event.preventDefault();\r\n        }\r\n        const pressedKey = event.keyCode;\r\n        if (pressedKey === KEY_RELOAD) {\r\n            reload();\r\n        } else if (isProceedKey(pressedKey)) {\r\n            proceedKeyPressedInLobby();\r\n        } else {\r\n            keyPressedInLobby(pressedKey);\r\n        }\r\n    }\r\n\r\n    function lobbyMouseHandler(event) {\r\n        event.preventDefault();\r\n        mouseClickedInLobby(event.button);\r\n    }\r\n\r\n    function reload() {\r\n        window.location.reload();\r\n    }\r\n\r\n    function quitGame() {\r\n        game.quit();\r\n        guiController.gameQuit();\r\n        game = newGame();\r\n    }\r\n\r\n    function gameKeyHandler(event) {\r\n        if (shouldPreventDefault(event.keyCode)) {\r\n            event.preventDefault();\r\n        }\r\n        const pressedKey = event.keyCode;\r\n        if (isProceedKey(pressedKey)) {\r\n            if (game.shouldQuitOnProceedKey()) {\r\n                quitGame();\r\n            } else {\r\n                game.proceedKeyPressed();\r\n            }\r\n        } else if (isQuitKey(pressedKey) && game.shouldQuitOnQuitKey()) {\r\n            if (preferenceManager.getCached(STRINGS.pref_key_confirm_quit) === true && !(guiController.isShowingDialog())) {\r\n                guiController.showDialog(config.dialogs.confirmation_quit);\r\n            } else {\r\n                quitGame();\r\n            }\r\n        } else if (pressedKey === KEY_RELOAD) {\r\n            if (preferenceManager.getCached(STRINGS.pref_key_confirm_reload) === true) {\r\n                if (game.shouldShowReloadConfirmationOnReloadKey() && !(guiController.isShowingDialog())) {\r\n                    guiController.showDialog(config.dialogs.confirmation_reload, reload);\r\n                }\r\n            } else {\r\n                reload();\r\n            }\r\n        }\r\n    }\r\n\r\n    function gameMouseHandler(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    function gameUnloadHandler(event) {\r\n        // A simple trick to prevent accidental unloading of the entire game.\r\n        const message = TEXT.hint_unload;\r\n        event.returnValue = message; // Gecko, Trident, Chrome 34+\r\n        return message;              // Gecko, Webkit, Chrome <34\r\n    }\r\n\r\n    function settingsKeyHandler(event) {\r\n        const pressedKey = event.keyCode;\r\n        if (isQuitKey(pressedKey)) {\r\n            hideSettings();\r\n        } else if (pressedKey === KEY_RELOAD) {\r\n            reload();\r\n        }\r\n    }\r\n\r\n    function settingsMouseHandler(event) {\r\n        // Intentionally empty.\r\n    }\r\n\r\n    function showSettings() {\r\n        clearTimeout(hintPickTimer);\r\n        clearTimeout(hintProceedTimer);\r\n        try {\r\n            guiController.updateSettingsForm(preferenceManager.getAllPreferencesWithValues_saved());\r\n        } catch(e) {\r\n            logWarning(\"Could not load settings from localStorage. Using cached settings instead.\");\r\n            guiController.updateSettingsForm(preferenceManager.getAllPreferencesWithValues_cached());\r\n            handleSettingsAccessError(e);\r\n        }\r\n        guiController.showSettings();\r\n    }\r\n\r\n    function hideSettings() {\r\n        guiController.parseSettingsForm().forEach((newSetting) => {\r\n            try {\r\n                preferenceManager.set(newSetting.key, newSetting.value);\r\n            } catch(e) {\r\n                logWarning(`Could not save setting '${newSetting.key}' to localStorage.`);\r\n                handleSettingsAccessError(e);\r\n            }\r\n        });\r\n        applySettings();\r\n        guiController.hideSettings();\r\n    }\r\n\r\n    function applySettings() {\r\n        try {\r\n            // Edge fix:\r\n            setEdgeMode(preferenceManager.getSaved(STRINGS.pref_key_edge_fix));\r\n            // Hints:\r\n            guiController.setMessageMode(preferenceManager.getSaved(STRINGS.pref_key_hints));\r\n            // Prevent spawnkill:\r\n            game.setPreventSpawnkill(preferenceManager.getSaved(STRINGS.pref_key_prevent_spawnkill));\r\n            // Blurry scaling:\r\n            guiController.setBlurryScaling(preferenceManager.getSaved(STRINGS.pref_key_allow_blurry_scaling));\r\n        } catch(e) {\r\n            logWarning(\"Could not load settings from localStorage. Using cached settings instead.\");\r\n            setEdgeMode(preferenceManager.getCached(STRINGS.pref_key_edge_fix));\r\n            guiController.setMessageMode(preferenceManager.getCached(STRINGS.pref_key_hints));\r\n            game.setPreventSpawnkill(preferenceManager.getCached(STRINGS.pref_key_prevent_spawnkill));\r\n            guiController.setBlurryScaling(preferenceManager.getCached(STRINGS.pref_key_allow_blurry_scaling));\r\n            handleSettingsAccessError(e);\r\n        }\r\n    }\r\n\r\n    function handleSettingsAccessError(error) {\r\n        if (error.name === STRINGS.error_name_security) {\r\n            guiController.showMessage(config.messages.preferences_access_denied);\r\n        } else {\r\n            guiController.showMessage(config.messages.preferences_localstorage_failed);\r\n        }\r\n    }\r\n\r\n    function clearMessages() {\r\n        clearTimeout(hintPickTimer);\r\n        clearTimeout(hintProceedTimer);\r\n        guiController.clearMessages();\r\n    }\r\n\r\n    function blurHandler() {\r\n        logWarning(\"Application lost focus.\");\r\n        Keyboard.reset();\r\n        Mouse.reset();\r\n    }\r\n\r\n    function addShowSettingsButtonEventListener() {\r\n        const showSettingsButton = byID(STRINGS.id_button_show_settings);\r\n        if (showSettingsButton instanceof HTMLElement) {\r\n            showSettingsButton.addEventListener(\"mousedown\", eventConsumer);\r\n            showSettingsButton.addEventListener(\"click\", showSettings);\r\n        }\r\n    }\r\n\r\n    function addHideSettingsButtonEventListener() {\r\n        const hideSettingsButton = byID(STRINGS.id_button_hide_settings);\r\n        if (hideSettingsButton instanceof HTMLElement) {\r\n            hideSettingsButton.addEventListener(\"mousedown\", eventConsumer);\r\n            hideSettingsButton.addEventListener(\"click\", hideSettings);\r\n        }\r\n    }\r\n\r\n    function addEventListeners() {\r\n        log(\"Adding event listeners ...\");\r\n\r\n        // Hide/show settings:\r\n        addShowSettingsButtonEventListener();\r\n        addHideSettingsButtonEventListener();\r\n\r\n        // General event handlers:\r\n        document.addEventListener(\"keydown\", keyHandler);\r\n        document.addEventListener(\"mousedown\", mouseHandler);\r\n        document.addEventListener(\"contextmenu\", eventConsumer);\r\n        window.addEventListener(\"beforeunload\", unloadHandler);\r\n        window.addEventListener(\"blur\", blurHandler);\r\n\r\n        // Player input:\r\n        document.addEventListener(\"keydown\", Keyboard.onKeydown.bind(Keyboard));\r\n        document.addEventListener(\"keyup\", Keyboard.onKeyup.bind(Keyboard));\r\n        document.addEventListener(\"mousedown\", Mouse.onMousedown.bind(Mouse));\r\n        document.addEventListener(\"mouseup\", Mouse.onMouseup.bind(Mouse));\r\n\r\n        log(\"Done.\");\r\n    }\r\n\r\n    addEventListeners();\r\n\r\n    function newGame() {\r\n        return new Game(config, Renderer(canvas_main, canvas_overlay), guiController);\r\n    }\r\n\r\n    const guiController = GUIController(config);\r\n    let game = newGame();\r\n\r\n    let hintProceedTimer;\r\n    let hintPickTimer = setTimeout(() => {\r\n        guiController.showMessage(config.messages.pick);\r\n    }, config.hintDelay);\r\n\r\n    applySettings();\r\n\r\n    return {\r\n        getConfig: () => config,\r\n        getGame: () => game,\r\n        addPlayer: (playerOrID) => {\r\n            const player = Player.isPlayer(playerOrID) ? playerOrID : new Player(playerOrID);\r\n            game.addPlayer(player);\r\n        }\r\n    };\r\n\r\n})();\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/Main.js","export class Round {\r\n    constructor(players) {\r\n        // A list of the players in the order they died (winner also included):\r\n        this.results = [];\r\n    }\r\n\r\n    add(player) {\r\n        this.results.push(player);\r\n    }\r\n\r\n    getSuccessOfPlayer(id) {\r\n        for (let i = 0; i < this.results.length; i++) {\r\n            if (this.results[i].hasID(id)) {\r\n                return i;\r\n            }\r\n        }\r\n        return this.results.length;\r\n    }\r\n\r\n    getResults() {\r\n        return this.results;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/Round.js","//code.stephenmorley.org\r\nexport function Queue(){var a=[],b=0;this.getLength=function(){return a.length-b};this.hasItem=function(i){return a.indexOf(i)!==-1};this.isEmpty=function(){return 0===a.length};this.enqueue=function(b){a.push(b)};this.dequeue=function(){if(0!==a.length){var c=a[b];2*++b>=a.length&&(a=a.slice(b),b=0);return c}};this.peek=function(){return 0<a.length?a[b]:void 0}};\n\n\n// WEBPACK FOOTER //\n// ./js/lib/Queue.js","/**\r\n * mainloop.js 1.0.1-20150816\r\n *\r\n * @author Isaac Sukin (http://www.isaacsukin.com/)\r\n * @license MIT\r\n */\r\n\r\nexport default !function(a){function b(a){if(e+j>a)return u=n(b),void 0;for(d+=a-e,e=a,q(a,d),a>g+1e3&&(f=.25*h+.75*f,g=a,h=0),h++,i=0;d>=c;)if(r(c),d-=c,++i>=240){m=!0;break}s(d/c),t(f,m),m=!1,u=n(b)}var c=1e3/60,d=0,e=0,f=60,g=0,h=0,i=0,j=0,k=!1,l=!1,m=!1,n=a.requestAnimationFrame||function(){var a=Date.now(),b,d;return function(e){return b=Date.now(),d=Math.max(0,c-(b-a)),a=b+d,setTimeout(function(){e(b+d)},d)}}(),o=a.cancelAnimationFrame||clearTimeout,p=function(){},q=p,r=p,s=p,t=p,u;a.MainLoop={getSimulationTimestep:function(){return c},setSimulationTimestep:function(a){return c=a,this},getFPS:function(){return f},getMaxAllowedFPS:function(){return 1e3/j},setMaxAllowedFPS:function(a){return\"undefined\"==typeof a&&(a=1/0),0===a?this.stop():j=1e3/a,this},resetFrameDelta:function(){var a=d;return d=0,a},setBegin:function(a){return q=a||q,this},setUpdate:function(a){return r=a||r,this},setDraw:function(a){return s=a||s,this},setEnd:function(a){return t=a||t,this},start:function(){return l||(l=!0,u=n(function(a){s(1),k=!0,e=a,g=a,h=0,u=n(b)})),this},stop:function(){return k=!1,l=!1,o(u),this},isRunning:function(){return k}},\"function\"==typeof define&&define.amd?define(a.MainLoop):\"object\"==typeof exports&&(module.exports=a.MainLoop)}(window);\r\n//# sourceMappingURL=mainloop.min.js.map\n\n\n// WEBPACK FOOTER //\n// ./js/lib/mainloop.min.js","import { Preference } from \"./Preference.js\";\r\nimport { RangePreference } from \"./RangePreference.js\";\r\n\r\nimport { isInt } from \"./PreferencesUtilities.js\";\r\n\r\nexport class IntegerRangePreference extends RangePreference {\r\n    constructor(data) {\r\n        if (!isInt(data.min) || !isInt(data.max)) {\r\n            throw new TypeError(`min and max must be integers (found ${data.min} and ${data.max} for preference '${data.key}').`);\r\n        }\r\n        super(data);\r\n        this.min = data.min;\r\n        this.max = data.max;\r\n        if (!this.isValidValue(data.default)) {\r\n            super.invalidValue(data.default);\r\n        }\r\n    }\r\n\r\n    isValidValue(value) {\r\n        return isInt(value) && value >= this.min && value <= this.max;\r\n    }\r\n\r\n    static stringify(value) {\r\n        return value.toString();\r\n    }\r\n\r\n    static parse(stringifiedValue) {\r\n        return parseInt(stringifiedValue);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/preferences/IntegerRangePreference.js","export class PreferenceWithValue {\r\n    constructor(preference, value) {\r\n        if (!preference.isValidValue(value)) {\r\n            throw new TypeError(`${value} is not a valid value for preference ${preference.key}.`);\r\n        }\r\n        this.preference = preference;\r\n        this.value = value;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/preferences/PreferenceWithValue.js"],"sourceRoot":""}