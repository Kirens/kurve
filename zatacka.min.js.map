{"version":3,"sources":["webpack:///zatacka.min.js","webpack:///webpack/bootstrap 1fdf30bb699c52f24deb","webpack:///./js/lib/preferences/Preference.js","webpack:///./js/lib/Utilities.js","webpack:///./js/lib/preferences/PreferencesUtilities.js","webpack:///./js/Player.js","webpack:///./js/lib/ConfirmationDialog.js","webpack:///./js/lib/Dialog.js","webpack:///./js/lib/Message.js","webpack:///./js/lib/preferences/BooleanPreference.js","webpack:///./js/lib/preferences/MultichoicePreference.js","webpack:///./js/lib/preferences/RangePreference.js","webpack:///./js/locales/Zatacka.en_US.js","webpack:///./js/strings.js","webpack:///./js/Zatacka.js","webpack:///./js/GUIController.js","webpack:///./js/Game.js","webpack:///./js/Renderer.js","webpack:///./js/Round.js","webpack:///./js/lib/InfoMessage.js","webpack:///./js/lib/Queue.js","webpack:///./js/lib/WarningMessage.js","webpack:///./js/lib/mainloop.min.js","webpack:///./js/lib/preferences/IntegerRangePreference.js","webpack:///./js/lib/preferences/PreferenceManager.js","webpack:///./js/lib/preferences/PreferenceWithValue.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","Preference","undefined","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","_PreferencesUtilities","data","this","isString","default","label","description","toString","stringifiedValue","isObject","obj","typeOf","isNumber","isPositiveNumber","isInt","isPositiveInt","isNonEmptyString","arePositiveNumbers","numbers","every","round","number","decimals","Math","pow","sameAbs","a","b","abs","randomFloat","min","max","random","normalizeAngle","pi","PI","angle","radToDeg","radians","distanceToDuration","distance","velocity","log","str","console","logWarning","warn","logError","error","byID","id","document","getElementById","isHTMLElement","elem","HTMLElement","flush","node","textContent","forfor","y_start","y_end","x_start","x_end","func","arg","y","x","anyKeyBeingPressed","keyCodes","Array","isArray","some","Keyboard","isDown","anyMouseButtonBeingPressed","mouseButtons","map","MOUSE","unpack","Mouse","anyInputBeingPressed","keysOrMouseButtons","isMouseButton","button","keys","buttonName","isKeyList","isFKey","F_KEYS","includes","global","match","toLowerCase","KEY","freeze","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","PAUSE","CAPS_LOCK","ESCAPE","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","INSERT","DELETE","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","LEFT_META","RIGHT_META","SELECT","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","MULTIPLY","ADD","SUBTRACT","DECIMAL","DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_LOCK","SCROLL_LOCK","SEMICOLON","EQUALS","COMMA","DASH","PERIOD","FORWARD_SLASH","GRAVE_ACCENT","OPEN_BRACKET","BACK_SLASH","CLOSE_BRACKET","SINGLE_QUOTE","offseted","pack","standard","LEFT","offset","RIGHT","MIDDLE","MOUSE4","MOUSE5","MOUSE_BUTTONS","pressed","keyCode","onKeydown","event","onKeyup","mouseButtonNumber","onMousedown","onMouseup","PLATFORM","strings","os_id_windows","os_id_mac","os_id_linux","os_id_unix","os_name_windows","os_name_mac","os_name_linux","os_name_unix","os_name_unknown","getOS","ua","window","navigator","userAgent","appVersion","indexOf","getFullscreenShortcut","TEXT","keyboard_fullscreen_mac","keyboard_fullscreen_standard","Player","_Utilities","_Queue","arguments","color","L_keys","R_keys","holeConfig","alive","holy","direction","maxSpeed","lastPosition","queuedDraws","Queue","holeTimer","constructor","isHoleConfig","left","top","_this","hasMouseButton","minPaddedHoleSize","maxPaddedHoleSize","minPaddedHoleInterval","maxPaddedHoleInterval","randomPaddedHoleInterval","speed","setTimeout","startCreatingHoles","bind","firstHoleDelay","clearTimeout","cause","paddedHoleSize","randomPaddedHoleSize","paddedHoleDuration","endHole","paddedHoleInterval","paddedHoleIntervalDuration","beginHole","enqueue","player","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","ConfirmationDialog","_Dialog2","_Dialog","question","callback","Function","getPrototypeOf","Dialog","text","Message","styleClass","class","createElement","classList","add","BooleanPreference","_get","receiver","desc","getOwnPropertyDescriptor","parent","_Preference2","_Preference","MultichoicePreference","values","labels","isValidValue","RangePreference","parseFloat","hint_unload","hint_start","hint_popup","hint_pick","hint_proceed","hint_next","hint_quit","hint_alt","hint_ctrl","hint_mouse","hint_preferences_access_denied","hint_preferences_localstorage_failed","getFullscreenHint","shortcut","label_button_alert_ok","label_button_confirm_yes","label_button_confirm_no","label_text_confirm_quit","label_text_confirm_reload","pref_label_cursor","pref_label_description_cursor","pref_label_cursor_always_visible","pref_label_cursor_hidden_when_mouse_used_by_player","pref_label_cursor_always_hidden","pref_label_edge_fix","pref_label_description_edge_fix","pref_label_edge_fix_full","pref_label_edge_fix_minimal","pref_label_edge_fix_off","pref_label_hints","pref_label_description_hints","pref_label_hints_all","pref_label_hints_warnings_only","pref_label_hints_none","pref_label_prevent_spawnkill","pref_label_description_prevent_spawnkill","pref_label_confirm_quit","pref_label_description_confirm_quit","pref_label_confirm_reload","pref_label_description_confirm_reload","game_url","error_name_security","class_hidden","class_active","class_dialog","class_dialog_alert","class_dialog_confirmation","class_description","class_half_width","class_right_hand_side","class_nocursor","class_tempcursor","class_hints_warnings_only","class_hints_none","html_name_preference_prefix","cursor_hidden","cursor_visible","id_start_hint","id_fullscreen_hint","id_popup_hint","id_button_show_settings","id_button_hide_settings","pref_number_type_integer","pref_number_type_float","pref_key_cursor","pref_value_cursor_always_visible","pref_value_cursor_hidden_when_mouse_used_by_player","pref_value_cursor_always_hidden","pref_key_edge_fix","pref_value_edge_fix_full","pref_value_edge_fix_minimal","pref_value_edge_fix_off","pref_key_hints","pref_value_hints_all","pref_value_hints_warnings_only","pref_value_hints_none","pref_key_confirm_quit","pref_key_confirm_reload","pref_key_prevent_spawnkill","_interopRequireDefault","_Game","_Player","_Renderer","_GUIController","_BooleanPreference","_MultichoicePreference","_PreferenceManager","_InfoMessage","_WarningMessage","_ConfirmationDialog","_ZatackaEn_US","_ZatackaEn_US2","_strings","_strings2","isProceedKey","config","proceed","isQuitKey","quit","shouldPreventDefault","ALLOWED_KEYS","setEdgePadding","padding","game","isStarted","Error","newCanvasWidth","ORIGINAL_WIDTH","newCanvasHeight","ORIGINAL_HEIGHT","setSize","guiController","setEdgeMode","mode","TOTAL_BORDER_THICKNESS","e","getHoleConfig","minHoleSize","maxHoleSize","minHoleInterval","maxHoleInterval","getPaddedHoleConfig","thickness","paddedHoleConfig","defaultPlayerData","defaultPlayers","find","defaultPlayer","playerData","keyL","keyR","applyCursorBehavior","mouseIsBeingUsed","getPlayers","behavior","preferenceManager","getCached","setCursorBehavior","proceedKeyPressedInLobby","numberOfReadyPlayers","getNumberOfPlayers","clearMessages","setMode","Game","PRACTICE","COMPETITIVE","start","usesAnyMouseButton","checkForDangerousInput","hasKey","showMessage","messages","ctrl","hideMessage","alt","mouse","addPlayer","hintPickTimer","pick","hintProceedTimer","hintDelay","removePlayer","defaultPlayerHasLeftKey","pressedKey","defaultPlayerHasRightKey","addOrRemovePlayer","eventConsumer","stopPropagation","preventDefault","keyPressedInLobby","forEach","mouseClickedInLobby","keyHandler","gameKeyHandler","isShowingSettings","settingsKeyHandler","lobbyKeyHandler","keyPressed","mouseHandler","gameMouseHandler","settingsMouseHandler","lobbyMouseHandler","mouseClicked","unloadHandler","gameUnloadHandler","KEY_RELOAD","reload","location","quitGame","gameQuit","newGame","shouldQuitOnProceedKey","proceedKeyPressed","shouldQuitOnQuitKey","isShowingDialog","showDialog","dialogs","confirmation_quit","shouldShowReloadConfirmationOnReloadKey","confirmation_reload","message","returnValue","hideSettings","showSettings","updateSettingsForm","getAllPreferencesWithValues_saved","getAllPreferencesWithValues_cached","handleSettingsAccessError","parseSettingsForm","newSetting","set","applySettings","getSaved","setMessageMode","setPreventSpawnkill","preferences_access_denied","preferences_localstorage_failed","addShowSettingsButtonEventListener","showSettingsButton","addEventListener","addHideSettingsButtonEventListener","hideSettingsButton","Renderer","canvas_main","canvas_overlay","width","height","KEY_FULLSCREEN","KEY_DEVTOOLS","tickrate","maxFramerate","canvas","turningRadius","minSpawnAngle","maxSpawnAngle","spawnMargin","preventSpawnkill","flickerFrequency","flickerDuration","InfoMessage","next","WarningMessage","PREFERENCES","type","PreferenceManager","GUIController","getConfig","getGame","playerOrID","isPlayer","cfg","hideLobby","lobby","showLobby","remove","showDialogsOverlay","dialogsOverlay","hideDialogsOverlay","isLobbyEntry","element","children","isButton","BUTTON_NODE_CLASS","showDialogRightAway","dialog","dialogBox","dialogHTMLElement","currentDialogWithBox","DialogWithBox","setTemporaryCursorVisibility","appendChild","querySelector","focus","currentDialogClosed","box","anyQueuedDialogs","queuedDialogs","shift","escapeShouldCloseCurrentDialog","dialogHTMLElementBoilerplate","alertDialogHTMLElement","alertDialogEventHandler","alertDialogBox","buttonOK","LABEL_ALERT_OK","confirmationDialogHTMLElement","confirmationDialog","confirmationDialogEventHandler","response","confirmationDialogBox","buttonYes","LABEL_CONFIRM_YES","buttonNo","LABEL_CONFIRM_NO","resetScoreboardEntry","entry","resetScoreboard","from","scoreboard","resetResults","results","body","tempCursorActive","settingsEntryShouldBeHalfWidth","preference","reduce","acc","current","MULTICHOICE_LABEL_MAX_LENGTH_FOR_HALFWIDTH_FIELDSET","settingsEntryHTMLElement","preferenceValue","div","setAttribute","input","dataset","checked","fieldset","legend","index","radioButton","radioButtonLabel","isIntegerRange","numberType","FLOAT_RANGE_PREFERENCE_STEP","currentlyFocusedButton","BUTTON_TAG_NAME","previousButton","nextButton","previousSibling","nextSibling","click","push","style","ORIGINAL_LEFT_WIDTH","playerReady","controls","playerUnready","allPlayersUnready","gameStarted","hideKonecHry","konecHry","showKonecHry","KONEC_HRY","currentMessages","updateMessages","showingSettings","settings","preferencesWithData","settingsForm","settingsEntries","preferenceWithData","consecutiveHalfWidthDivs","currentEntry","contains","settingsEntry","newSettings","inputs","querySelectorAll","parseInt","selects","select","options","selectedIndex","filter","msg","messagesContainer","insertBefore","toHTMLElement","updateBoard","board","newScore","digitClassFactory","digit","createDigit","newScoreDigitClasses","split","digitClass","digitElement","updateScoreOfPlayer","offsetWidth","HTMLButtonElement","_RangePreference","_IntegerRangePreference","_mainloopMin","_mainloopMin2","_Round","renderer","DEFAULT_MODE","DEFAULT_TARGET_SCORE","MAX_TARGET_SCORE","MAX_PLAYERS","MAX_QUOTA_THAT_SPAWN_CIRCLES_MAY_FILL","DESIRED_MINIMUM_SPAWN_DISTANCE_TURNING_RADIUS_FACTOR","isRenderer","isGUIController","pixels","players","rounds","totalNumberOfTicks","targetScore","initMainLoop","started","ended","proceedHintTimer","quitHintTimer","coordinate","floor","x_min","y_min","x_max","y_max","edge","dir","t","dir_parallel","dir_perpendicular","hitboxPixels","getLastPosition","dir_horizontal","dir_vertical","frontPixel_left","computeFrontCornerPixel","frontPixel_top","pixelAddress","computeFrontEdgePixel","turningRadiusPart","spawnAreaCoordinates","computeSpawnArea","availableSpawnArea","maximumSafeDistance","sqrt","desiredMinimumSpawnDistance","pos","playerPos","pos1","pos2","safeMinimumSpawnDistance","safePos","randomSpawnPosition","isSafeSpawnPosition","spawnArea","addr","hasID","isAlive","getLivePlayers","accumulateScore","sum","getSuccessOfPlayer","getMode","score","ts","mts","getCurrentRound","getResults","isCompetitive","getNumberOfLivePlayers","isLive","hasReachedTargetScore","getScoreOfPlayer","getID","getTargetScore","computeHitbox","isOccupiedPixelAddress","getPlayerByID","maxPlayers","RangeError","hasPlayer","setMaxSpeed","GUI_playerReady","playerToRemove","GUI_playerUnready","_this2","setTargetScore","calculateTargetScore","GUI_updateScoreOfPlayer","GUI_gameStarted","Uint8Array","beginNewRound","GUI_konecHry","showQuitHint","fill","Render_clearField","GUI_showMessage","GUI_hideMessage","Round","resetPlayers","clearField","sortPlayers","spawnAndStartPlayers","stopPlayers","showProceedHint","sort","stop","reset","startPlayer","stopPlayer","resetPlayer","right","bottom","occupyPixel","Render_drawSquare","getColor","_this3","stopFlickering","clearInterval","flickerTicker","edgeOfSquare","isVisible","setInterval","Render_clearSquare","position","beAt","occupy","flicker","spawnPlayer","spawnPosition","safeSpawnPosition","spawn","randomSpawnAngle","startPlayers","isEmpty","currentDraw","dequeue","justWasAt","isOnField","isCrashing","death","isHoly","Render_drawHead","_this4","updateScore","die","updateGUIScoreboard","isRoundOver","winner","winRound","endRound","hideProceedHint","hideQuitHint","isGameOver","isPostRound","isEnded","drawSquare","drawSquare_overlay","clearSquare","clearRectangle_overlay","clearRectangle","delta","angleChange","computeAngleChange","getDirection","isPressingLeft","isPressingRight","setDirection","theta","getVelocity","cos","sin","_this5","updatePlayer","maxTicksBetweenDraws","enqueueDraw","unshift","pop","Render_clearHeads","drawPlayer","drawHead","framerate","panic","discardedTime","resetFrameDelta","MainLoop","setUpdate","update","setDraw","draw","setEnd","end","setSimulationTimestep","setMaxAllowedFPS","numberOfPlayers","mainCanvas","overlayCanvas","_drawRectangle","context","fillStyle","fillRect","_clearRectangle","clearRect","_setSize","size","context_main","context_overlay","clearSquare_overlay","getContext","_Message2","_Message","getLength","hasItem","slice","peek","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","Symbol","iterator","j","u","q","g","f","h","r","k","requestAnimationFrame","Date","now","cancelAnimationFrame","getSimulationTimestep","getFPS","getMaxAllowedFPS","setBegin","isRunning","IntegerRangePreference","_RangePreference2","preferencesData","string","CONSOLE_PREFIX","parsePreference","pref","preferenceExists","getPreference","getCachedPreference","CACHED_PREFERENCES_WITH_VALUES","preferenceWithValue","_PreferenceWithValue","PreferenceWithValue","getAllPreferencesWithDefaultValues","getDefaultValue","getKey","isValidPreferenceValue","setToDefaultValue","LS_prefix","LOCALSTORAGE_PREFIX","localStorage","setItem","stringify","invalidValue","savedValue","getItem","parse","setAllToDefault","defaultValue"],"mappings":"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","file":"zatacka.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 24);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Preference = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _PreferencesUtilities = __webpack_require__(2);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Preference = exports.Preference = function () {\n    function Preference(data) {\n        _classCallCheck(this, Preference);\n\n        if (!(0, _PreferencesUtilities.isString)(data.key)) {\n            throw new TypeError(\"key must be a string (found \" + data.key + \"). More info: \" + data);\n        } else if (data.default === undefined) {\n            throw new TypeError(\"Preference '\" + data.key + \"' must have a default value.\");\n        }\n        this.key = data.key;\n        this.label = data.label;\n        this.default = data.default;\n        this.description = data.description;\n    }\n\n    _createClass(Preference, [{\n        key: \"isValidValue\",\n        value: function isValidValue(value) {\n            return (0, _PreferencesUtilities.isString)(value);\n        }\n    }, {\n        key: \"invalidValue\",\n        value: function invalidValue(value) {\n            throw new TypeError(value + \" is not a valid value for preference '\" + this.key + \"'.\");\n        }\n    }, {\n        key: \"getDefaultValue\",\n        value: function getDefaultValue() {\n            return this.default;\n        }\n    }], [{\n        key: \"stringify\",\n        value: function stringify(value) {\n            return value.toString();\n        }\n    }, {\n        key: \"parse\",\n        value: function parse(stringifiedValue) {\n            return stringifiedValue;\n        }\n    }]);\n\n    return Preference;\n}();\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.isObject = isObject;\nexports.isNumber = isNumber;\nexports.isPositiveNumber = isPositiveNumber;\nexports.isInt = isInt;\nexports.isPositiveInt = isPositiveInt;\nexports.isString = isString;\nexports.isNonEmptyString = isNonEmptyString;\nexports.arePositiveNumbers = arePositiveNumbers;\nexports.round = round;\nexports.sameAbs = sameAbs;\nexports.randomFloat = randomFloat;\nexports.normalizeAngle = normalizeAngle;\nexports.radToDeg = radToDeg;\nexports.distanceToDuration = distanceToDuration;\nexports.log = log;\nexports.logWarning = logWarning;\nexports.logError = logError;\nexports.byID = byID;\nexports.isHTMLElement = isHTMLElement;\nexports.flush = flush;\nexports.forfor = forfor;\nexports.anyKeyBeingPressed = anyKeyBeingPressed;\nexports.anyMouseButtonBeingPressed = anyMouseButtonBeingPressed;\nexports.anyInputBeingPressed = anyInputBeingPressed;\nexports.isMouseButton = isMouseButton;\nexports.isKeyList = isKeyList;\nexports.isFKey = isFKey;\nvar typeOf = function (global) {\n    return function (obj) {\n        if (obj === global) {\n            return \"global\";\n        }\n        return {}.toString.call(obj).match(/\\s([a-z|A-Z]+)/)[1].toLowerCase();\n    };\n}(undefined);\n\nvar KEY = exports.KEY = Object.freeze({ BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, PAUSE: 19, CAPS_LOCK: 20, ESCAPE: 27, SPACE: 32, PAGE_UP: 33, PAGE_DOWN: 34, END: 35, HOME: 36, LEFT_ARROW: 37, UP_ARROW: 38, RIGHT_ARROW: 39, DOWN_ARROW: 40, INSERT: 45, DELETE: 46, \"0\": 48, \"1\": 49, \"2\": 50, \"3\": 51, \"4\": 52, \"5\": 53, \"6\": 54, \"7\": 55, \"8\": 56, \"9\": 57, A: 65, B: 66, C: 67, D: 68, E: 69, F: 70, G: 71, H: 72, I: 73, J: 74, K: 75, L: 76, M: 77, N: 78, O: 79, P: 80, Q: 81, R: 82, S: 83, T: 84, U: 85, V: 86, W: 87, X: 88, Y: 89, Z: 90, LEFT_META: 91, RIGHT_META: 92, SELECT: 93, NUMPAD_0: 96, NUMPAD_1: 97, NUMPAD_2: 98, NUMPAD_3: 99, NUMPAD_4: 100, NUMPAD_5: 101, NUMPAD_6: 102, NUMPAD_7: 103, NUMPAD_8: 104, NUMPAD_9: 105, MULTIPLY: 106, ADD: 107, SUBTRACT: 109, DECIMAL: 110, DIVIDE: 111, F1: 112, F2: 113, F3: 114, F4: 115, F5: 116, F6: 117, F7: 118, F8: 119, F9: 120, F10: 121, F11: 122, F12: 123, NUM_LOCK: 144, SCROLL_LOCK: 145, SEMICOLON: 186, EQUALS: 187, COMMA: 188, DASH: 189, PERIOD: 190, FORWARD_SLASH: 191, GRAVE_ACCENT: 192, OPEN_BRACKET: 219, BACK_SLASH: 220, CLOSE_BRACKET: 221, SINGLE_QUOTE: 222 });\n\nvar MOUSE = exports.MOUSE = Object.freeze(function () {\n    var offset = 1000;\n    return Object.freeze({\n        unpack: function unpack(offseted) {\n            return offseted - offset;\n        },\n        pack: function pack(standard) {\n            return standard + offset;\n        },\n        LEFT: offset + 0,\n        RIGHT: offset + 2,\n        MIDDLE: offset + 1,\n        MOUSE4: offset + 3,\n        MOUSE5: offset + 4\n    });\n}());\n\nvar F_KEYS = exports.F_KEYS = Object.freeze([KEY.F1, KEY.F2, KEY.F3, KEY.F4, KEY.F5, KEY.F6, KEY.F7, KEY.F8, KEY.F9, KEY.F10, KEY.F11, KEY.F12]);\n\nvar MOUSE_BUTTONS = exports.MOUSE_BUTTONS = Object.freeze([MOUSE.LEFT, MOUSE.RIGHT, MOUSE.MIDDLE, MOUSE.MOUSE4, MOUSE.MOUSE5]);\n\nfunction isObject(obj) {\n    return typeOf(obj) === \"object\";\n}\n\nfunction isNumber(n) {\n    return typeOf(n) === \"number\";\n}\n\nfunction isPositiveNumber(n) {\n    return isNumber(n) && n > 0;\n}\n\nfunction isInt(n) {\n    return isNumber(n) && n % 1 === 0;\n}\n\nfunction isPositiveInt(n) {\n    return isInt(n) && n > 0;\n}\n\nfunction isString(s) {\n    return typeOf(s) === \"string\";\n}\n\nfunction isNonEmptyString(s) {\n    return isString(s) && s.length > 0;\n}\n\nfunction arePositiveNumbers(numbers) {\n    return numbers.every(isPositiveNumber);\n}\n\nfunction round(number, decimals) {\n    return Math.round(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n}\n\nfunction sameAbs(a, b) {\n    return Math.abs(a) === Math.abs(b);\n}\n\n/**\r\n * Generates a random float between min (inclusive) and max (exclusive).\r\n *\r\n * @param {Number} min\r\n *   Minimum value (inclusive).\r\n * @param {Number} max\r\n *   Maximum value (exclusive).\r\n */\nfunction randomFloat(min, max) {\n    return Math.random() * (max - min) + min;\n}\n\nfunction normalizeAngle(a) {\n    var pi = Math.PI;\n    var angle = a % (2 * pi);\n    angle = (angle + 2 * pi) % (2 * pi);\n    if (angle > pi) {\n        angle = angle - 2 * pi;\n    }\n    return angle;\n}\n\nfunction radToDeg(radians) {\n    return 180 / Math.PI * radians;\n}\n\nfunction distanceToDuration(distance, velocity) {\n    return distance / velocity * 1000; // milliseconds\n}\n\nfunction log(str) {\n    console.log(\"Zatacka: \" + str);\n}\n\nfunction logWarning(str) {\n    console.warn(\"Zatacka: \" + str);\n}\n\nfunction logError(str) {\n    console.error(\"Zatacka: \" + str);\n}\n\nfunction byID(id) {\n    return document.getElementById(id);\n}\n\nfunction isHTMLElement(elem) {\n    return elem instanceof HTMLElement;\n}\n\nfunction flush(node) {\n    if (isHTMLElement(node)) {\n        node.textContent = \"\";\n    } else {\n        throw new TypeError(node + \" is not a DOM node.\");\n    }\n}\n\nfunction forfor(y_start, y_end, x_start, x_end, func, arg) {\n    for (var y = y_start; y < y_end; y++) {\n        for (var x = x_start; x < x_end; x++) {\n            func.call(this, x, y, arg);\n        }\n    }\n}\n\nvar Keyboard = exports.Keyboard = {\n    pressed: {},\n    isDown: function isDown(keyCode) {\n        return !!this.pressed[keyCode];\n    },\n    onKeydown: function onKeydown(event) {\n        this.pressed[event.keyCode] = true;\n    },\n    onKeyup: function onKeyup(event) {\n        delete this.pressed[event.keyCode];\n    }\n};\n\nvar Mouse = exports.Mouse = {\n    pressed: {},\n    isDown: function isDown(mouseButtonNumber) {\n        return this.pressed[mouseButtonNumber];\n    },\n    onMousedown: function onMousedown(event) {\n        this.pressed[event.button] = true;\n    },\n    onMouseup: function onMouseup(event) {\n        delete this.pressed[event.button];\n    }\n};\n\nfunction anyKeyBeingPressed(keyCodes) {\n    return Array.isArray(keyCodes) && keyCodes.some(Keyboard.isDown, Keyboard);\n}\n\nfunction anyMouseButtonBeingPressed(mouseButtons) {\n    return Array.isArray(mouseButtons) && mouseButtons.map(MOUSE.unpack).some(Mouse.isDown, Mouse);\n}\n\nfunction anyInputBeingPressed(keysOrMouseButtons) {\n    return anyKeyBeingPressed(keysOrMouseButtons) || anyMouseButtonBeingPressed(keysOrMouseButtons);\n}\n\nfunction isMouseButton(button) {\n    return isPositiveInt(button) && Object.keys(MOUSE).some(function (buttonName) {\n        return MOUSE.hasOwnProperty(buttonName);\n    });\n}\n\nfunction isKeyList(keys) {\n    return Array.isArray(keys) && keys.length > 0 && keys.every(isPositiveInt);\n}\n\nfunction isFKey(key) {\n    return F_KEYS.includes(key);\n}\n\nvar PLATFORM = exports.PLATFORM = function () {\n    var strings = {\n        os_id_windows: \"Win\",\n        os_id_mac: \"Mac\",\n        os_id_linux: \"Linux\",\n        os_id_unix: \"X11\",\n\n        os_name_windows: \"Windows\",\n        os_name_mac: \"Mac\",\n        os_name_linux: \"Linux\",\n        os_name_unix: \"UNIX\",\n        os_name_unknown: \"Unknown\"\n    };\n\n    return {\n        getOS: function getOS() {\n            var ua = window.navigator.userAgent || window.navigator.appVersion;\n            if (isNonEmptyString(ua)) {\n                if (ua.indexOf(strings.os_id_windows) > -1) {\n                    return strings.os_name_windows;\n                }\n                if (ua.indexOf(strings.os_id_mac) > -1) {\n                    return strings.os_name_mac;\n                }\n                if (ua.indexOf(strings.os_id_linux) > -1) {\n                    return strings.os_name_linux;\n                }\n                if (ua.indexOf(strings.os_id_unix) > -1) {\n                    return strings.os_name_unix;\n                }\n            }\n            return strings.os_name_unknown;\n        },\n        getFullscreenShortcut: function getFullscreenShortcut() {\n            switch (PLATFORM.getOS()) {\n                case strings.os_name_mac:\n                    return TEXT.keyboard_fullscreen_mac;\n                    break;\n                default:\n                    return TEXT.keyboard_fullscreen_standard;\n            }\n        }\n    };\n}();\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.isObject = isObject;\nexports.isNumber = isNumber;\nexports.isPositiveNumber = isPositiveNumber;\nexports.isInt = isInt;\nexports.isPositiveInt = isPositiveInt;\nexports.isString = isString;\nexports.isNonEmptyString = isNonEmptyString;\nexports.arePositiveNumbers = arePositiveNumbers;\nexports.round = round;\nvar typeOf = function (global) {\n    return function (obj) {\n        if (obj === global) {\n            return \"global\";\n        }\n        return {}.toString.call(obj).match(/\\s([a-z|A-Z]+)/)[1].toLowerCase();\n    };\n}(undefined);\n\nfunction isObject(obj) {\n    return typeOf(obj) === \"object\";\n}\n\nfunction isNumber(n) {\n    return typeOf(n) === \"number\";\n}\n\nfunction isPositiveNumber(n) {\n    return isNumber(n) && n > 0;\n}\n\nfunction isInt(n) {\n    return isNumber(n) && n % 1 === 0;\n}\n\nfunction isPositiveInt(n) {\n    return isInt(n) && n > 0;\n}\n\nfunction isString(s) {\n    return typeOf(s) === \"string\";\n}\n\nfunction isNonEmptyString(s) {\n    return isString(s) && s.length > 0;\n}\n\nfunction arePositiveNumbers(numbers) {\n    return numbers.every(isPositiveNumber);\n}\n\nfunction round(number, decimals) {\n    return Math.round(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n}\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Player = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Utilities = __webpack_require__(1);\n\nvar _Queue = __webpack_require__(18);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Player = exports.Player = function () {\n    function Player(id) {\n        var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Player \" + id;\n        var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"white\";\n        var L_keys = arguments[3];\n        var R_keys = arguments[4];\n        var holeConfig = arguments[5];\n\n        _classCallCheck(this, Player);\n\n        if (!(0, _Utilities.isPositiveInt)(id)) {\n            throw new TypeError(\"Cannot create a player with ID \" + id + \". Only positive integers are accepted.\");\n        }\n        this.id = id;\n        this.name = name;\n        this.color = color;\n        this.alive = false;\n        this.holy = false;\n        this.x = null;\n        this.y = null;\n        this.direction = 0;\n        this.velocity = 0;\n        this.maxSpeed = undefined;\n        this.lastPosition = null;\n        this.queuedDraws = new _Queue.Queue();\n        this.holeTimer = null;\n        this.holeConfig = null;\n\n        if (!this.constructor.isHoleConfig(holeConfig)) {\n            (0, _Utilities.logWarning)(\"Creating player \" + this.name + \" with no hole configuration because \" + holeConfig + \" is not a valid hole configuration.\");\n        } else {\n            this.holeConfig = holeConfig;\n        }\n\n        if ((0, _Utilities.isPositiveInt)(L_keys)) {\n            this.L_keys = [L_keys];\n        } else if ((0, _Utilities.isKeyList)(L_keys)) {\n            this.L_keys = L_keys;\n        } else {\n            (0, _Utilities.logWarning)(\"Creating player \\\"\" + this.name + \"\\\" without any LEFT key(s).\");\n            this.L_keys = [];\n        }\n\n        if ((0, _Utilities.isPositiveInt)(R_keys)) {\n            this.R_keys = [R_keys];\n        } else if ((0, _Utilities.isKeyList)(R_keys)) {\n            this.R_keys = R_keys;\n        } else {\n            (0, _Utilities.logWarning)(\"Creating player \\\"\" + this.name + \"\\\" without any RIGHT key(s).\");\n            this.R_keys = [];\n        }\n    }\n\n    _createClass(Player, [{\n        key: \"isAlive\",\n\n\n        // CHECKERS\n\n        value: function isAlive() {\n            return this.alive;\n        }\n    }, {\n        key: \"justWasAt\",\n        value: function justWasAt(left, top) {\n            return this.lastPosition.left === left && this.lastPosition.top === top;\n        }\n    }, {\n        key: \"isHoly\",\n        value: function isHoly() {\n            return this.holy;\n        }\n    }, {\n        key: \"isPressingLeft\",\n        value: function isPressingLeft() {\n            return (0, _Utilities.anyInputBeingPressed)(this.L_keys);\n        }\n    }, {\n        key: \"isPressingRight\",\n        value: function isPressingRight() {\n            return (0, _Utilities.anyInputBeingPressed)(this.R_keys);\n        }\n    }, {\n        key: \"hasID\",\n        value: function hasID(id) {\n            return this.id === id;\n        }\n    }, {\n        key: \"hasMouseButton\",\n        value: function hasMouseButton(button) {\n            return (0, _Utilities.isMouseButton)(button) && (this.L_keys.includes(button) || this.R_keys.includes(button));\n        }\n    }, {\n        key: \"usesAnyMouseButton\",\n        value: function usesAnyMouseButton() {\n            var _this = this;\n\n            return _Utilities.MOUSE_BUTTONS.some(function (button) {\n                return _this.hasMouseButton(button);\n            });\n        }\n    }, {\n        key: \"hasKey\",\n        value: function hasKey(key) {\n            return this.L_keys.includes(key) || this.R_keys.includes(key);\n        }\n\n        // GETTERS\n\n    }, {\n        key: \"getID\",\n        value: function getID() {\n            return this.id;\n        }\n    }, {\n        key: \"getName\",\n        value: function getName() {\n            return this.name;\n        }\n    }, {\n        key: \"getColor\",\n        value: function getColor() {\n            return this.color;\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            return this.name;\n        }\n    }, {\n        key: \"getLastPosition\",\n        value: function getLastPosition() {\n            return this.lastPosition;\n        }\n    }, {\n        key: \"getVelocity\",\n        value: function getVelocity() {\n            return this.velocity;\n        }\n    }, {\n        key: \"getDirection\",\n        value: function getDirection() {\n            return this.direction;\n        }\n    }, {\n        key: \"randomPaddedHoleSize\",\n        value: function randomPaddedHoleSize() {\n            return (0, _Utilities.randomFloat)(this.holeConfig.minPaddedHoleSize, this.holeConfig.maxPaddedHoleSize);\n        }\n    }, {\n        key: \"randomPaddedHoleInterval\",\n        value: function randomPaddedHoleInterval() {\n            return (0, _Utilities.randomFloat)(this.holeConfig.minPaddedHoleInterval, this.holeConfig.maxPaddedHoleInterval);\n        }\n    }, {\n        key: \"firstHoleDelay\",\n        value: function firstHoleDelay() {\n            return (0, _Utilities.distanceToDuration)(this.randomPaddedHoleInterval() - this.holeConfig.minPaddedHoleInterval, this.velocity);\n        }\n\n        // SETTERS\n\n    }, {\n        key: \"setMaxSpeed\",\n        value: function setMaxSpeed(speed) {\n            this.maxSpeed = speed;\n        }\n    }, {\n        key: \"setDirection\",\n        value: function setDirection(direction) {\n            this.direction = direction;\n        }\n\n        // DOERS\n\n    }, {\n        key: \"start\",\n        value: function start() {\n            (0, _Utilities.log)(this + \" starting.\");\n            this.alive = true;\n            this.velocity = this.maxSpeed;\n            if (this.constructor.isHoleConfig(this.holeConfig)) {\n                this.holeTimer = setTimeout(this.startCreatingHoles.bind(this), this.firstHoleDelay());\n            }\n        }\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            this.alive = false;\n            this.velocity = 0;\n            clearTimeout(this.holeTimer);\n        }\n    }, {\n        key: \"reset\",\n        value: function reset() {\n            this.holy = false;\n            this.lastPosition = null;\n            this.queuedDraws = new _Queue.Queue();\n        }\n\n        /**\r\n         * Called when the player does something that causes it do die.\r\n         * @param {String} cause The cause of death.\r\n         */\n\n    }, {\n        key: \"die\",\n        value: function die(cause) {\n            this.alive = false;\n            clearTimeout(this.holeTimer);\n            (0, _Utilities.log)(this + \" \" + (cause || \"died\") + \" at (\" + (0, _Utilities.round)(this.x, 2) + \", \" + (0, _Utilities.round)(this.y, 2) + \").\");\n        }\n    }, {\n        key: \"beAt\",\n        value: function beAt(left, top) {\n            this.lastPosition = {\n                \"left\": left,\n                \"top\": top\n            };\n        }\n    }, {\n        key: \"beginHole\",\n        value: function beginHole() {\n            this.holy = true;\n            var paddedHoleSize = this.randomPaddedHoleSize();\n            var paddedHoleDuration = (0, _Utilities.distanceToDuration)(paddedHoleSize, this.velocity);\n            this.holeTimer = setTimeout(this.endHole.bind(this), paddedHoleDuration);\n        }\n    }, {\n        key: \"endHole\",\n        value: function endHole() {\n            this.holy = false;\n            var paddedHoleInterval = this.randomPaddedHoleInterval();\n            var paddedHoleIntervalDuration = (0, _Utilities.distanceToDuration)(paddedHoleInterval, this.velocity);\n            this.holeTimer = setTimeout(this.beginHole.bind(this), paddedHoleIntervalDuration);\n        }\n    }, {\n        key: \"startCreatingHoles\",\n        value: function startCreatingHoles() {\n            this.beginHole();\n        }\n    }, {\n        key: \"enqueueDraw\",\n        value: function enqueueDraw() {\n            this.queuedDraws.enqueue({ \"x\": this.x, \"y\": this.y });\n        }\n    }], [{\n        key: \"isPlayer\",\n        value: function isPlayer(player) {\n            return player instanceof Player;\n        }\n    }, {\n        key: \"isHoleConfig\",\n        value: function isHoleConfig(holeConfig) {\n            return (0, _Utilities.isObject)(holeConfig) && (0, _Utilities.arePositiveNumbers)([holeConfig.minPaddedHoleSize, holeConfig.maxPaddedHoleSize, holeConfig.minPaddedHoleInterval, holeConfig.maxPaddedHoleInterval]);\n        }\n    }]);\n\n    return Player;\n}();\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ConfirmationDialog = undefined;\n\nvar _Dialog2 = __webpack_require__(5);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ConfirmationDialog = exports.ConfirmationDialog = function (_Dialog) {\n    _inherits(ConfirmationDialog, _Dialog);\n\n    function ConfirmationDialog(question, callback) {\n        _classCallCheck(this, ConfirmationDialog);\n\n        if (!(callback instanceof Function)) {\n            throw new TypeError(\"callback must be a function (found \" + callback + \").\");\n        }\n\n        var _this = _possibleConstructorReturn(this, (ConfirmationDialog.__proto__ || Object.getPrototypeOf(ConfirmationDialog)).call(this, question));\n\n        _this.callback = callback;\n        return _this;\n    }\n\n    return ConfirmationDialog;\n}(_Dialog2.Dialog);\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Dialog = undefined;\n\nvar _Utilities = __webpack_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Dialog = exports.Dialog = function Dialog(text) {\n    _classCallCheck(this, Dialog);\n\n    if (!(0, _Utilities.isString)(text)) {\n        throw new TypeError(\"text must be a string (found \" + text + \").\");\n    }\n    this.text = text;\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Message = exports.Message = function () {\n    function Message(text, styleClass) {\n        _classCallCheck(this, Message);\n\n        this.text = text;\n        this.class = styleClass;\n    }\n\n    _createClass(Message, [{\n        key: \"toHTMLElement\",\n        value: function toHTMLElement() {\n            var p = document.createElement(\"p\");\n            p.textContent = this.text;\n            p.classList.add(this.class);\n            p.classList.add(\"message\");\n            return p;\n        }\n    }]);\n\n    return Message;\n}();\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BooleanPreference = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Preference2 = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar BooleanPreference = exports.BooleanPreference = function (_Preference) {\n    _inherits(BooleanPreference, _Preference);\n\n    function BooleanPreference(data) {\n        _classCallCheck(this, BooleanPreference);\n\n        var _this = _possibleConstructorReturn(this, (BooleanPreference.__proto__ || Object.getPrototypeOf(BooleanPreference)).call(this, data));\n\n        if (!(data.default === true || data.default === false)) {\n            _get(BooleanPreference.prototype.__proto__ || Object.getPrototypeOf(BooleanPreference.prototype), \"invalidValue\", _this).call(_this, data.default);\n        }\n        return _this;\n    }\n\n    _createClass(BooleanPreference, [{\n        key: \"isValidValue\",\n        value: function isValidValue(value) {\n            return value === true || value === false;\n        }\n    }], [{\n        key: \"stringify\",\n        value: function stringify(value) {\n            return value.toString();\n        }\n    }, {\n        key: \"parse\",\n        value: function parse(stringifiedValue) {\n            return stringifiedValue === \"true\";\n        }\n    }]);\n\n    return BooleanPreference;\n}(_Preference2.Preference);\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MultichoicePreference = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Preference2 = __webpack_require__(0);\n\nvar _PreferencesUtilities = __webpack_require__(2);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MultichoicePreference = exports.MultichoicePreference = function (_Preference) {\n    _inherits(MultichoicePreference, _Preference);\n\n    function MultichoicePreference(data) {\n        _classCallCheck(this, MultichoicePreference);\n\n        if (!isNonEmptyStringArray(data.values)) {\n            throw new TypeError(\"values must be a non-empty string array (found \" + data.values + \" for preference '\" + data.key + \"').\");\n        }\n\n        var _this = _possibleConstructorReturn(this, (MultichoicePreference.__proto__ || Object.getPrototypeOf(MultichoicePreference)).call(this, data));\n\n        _this.values = data.values;\n        _this.labels = data.labels;\n        if (!_this.isValidValue(data.default)) {\n            _get(MultichoicePreference.prototype.__proto__ || Object.getPrototypeOf(MultichoicePreference.prototype), \"invalidValue\", _this).call(_this, data.default);\n        }\n\n        function isNonEmptyStringArray(strings) {\n            return strings instanceof Array && strings.length > 0 && strings.every(_PreferencesUtilities.isString);\n        }\n        return _this;\n    }\n\n    _createClass(MultichoicePreference, [{\n        key: \"isValidValue\",\n        value: function isValidValue(value) {\n            return this.values.indexOf(value) > -1;\n        }\n    }], [{\n        key: \"stringify\",\n        value: function stringify(value) {\n            return value;\n        }\n    }, {\n        key: \"parse\",\n        value: function parse(stringifiedValue) {\n            return stringifiedValue;\n        }\n    }]);\n\n    return MultichoicePreference;\n}(_Preference2.Preference);\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RangePreference = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Preference2 = __webpack_require__(0);\n\nvar _PreferencesUtilities = __webpack_require__(2);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RangePreference = exports.RangePreference = function (_Preference) {\n    _inherits(RangePreference, _Preference);\n\n    function RangePreference(data) {\n        _classCallCheck(this, RangePreference);\n\n        if (!(0, _PreferencesUtilities.isNumber)(data.min) || !(0, _PreferencesUtilities.isNumber)(data.max)) {\n            throw new TypeError(\"min and max must be numbers (found \" + data.min + \" and \" + data.max + \" for preference '\" + data.key + \"').\");\n        } else if (data.min > data.max) {\n            throw new TypeError(\"min cannot be greater than max (found \" + data.min + \" and \" + data.max + \" for preference '\" + data.key + \"', respectively).\");\n        }\n\n        var _this = _possibleConstructorReturn(this, (RangePreference.__proto__ || Object.getPrototypeOf(RangePreference)).call(this, data));\n\n        _this.min = data.min;\n        _this.max = data.max;\n        if (!_this.isValidValue(data.default)) {\n            _get(RangePreference.prototype.__proto__ || Object.getPrototypeOf(RangePreference.prototype), \"invalidValue\", _this).call(_this, data.default);\n        }\n        return _this;\n    }\n\n    _createClass(RangePreference, [{\n        key: \"isValidValue\",\n        value: function isValidValue(value) {\n            return (0, _PreferencesUtilities.isNumber)(value) && value >= this.min && value <= this.max;\n        }\n    }], [{\n        key: \"stringify\",\n        value: function stringify(value) {\n            return value.toString();\n        }\n    }, {\n        key: \"parse\",\n        value: function parse(stringifiedValue) {\n            return parseFloat(stringifiedValue);\n        }\n    }]);\n\n    return RangePreference;\n}(_Preference2.Preference);\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n        value: true\n});\n\nexports.default = function () {\n        var KEY_SHIFT = \"⇧\";\n        var KEY_CMD = \"⌘\";\n        var KEY_PROCEED = \"Space or Enter\";\n        var KEY_QUIT = \"Esc\";\n\n        return Object.freeze({\n                hint_unload: \"Are you sure you want to unload the page?\",\n                hint_start: \"Press <kbd>Space</kbd> to start\",\n                hint_popup: \"It is recommended to run Kurve in its own window without history (to avoid switching tabs or navigating back in history mid-game). To do that, please allow popups or <a href=\\\"ZATACKA.html\\\" target=\\\"_blank\\\">click here</a>.\",\n                hint_pick: \"Pick your desired color by pressing the corresponding LEFT key (e.g. M for Orange).\",\n                hint_proceed: \"Press \" + KEY_PROCEED + \" to start!\",\n                hint_next: \"Press \" + KEY_PROCEED + \" to proceed, or \" + KEY_QUIT + \" to quit.\",\n                hint_quit: \"Press \" + KEY_PROCEED + \" to start over.\",\n                hint_alt: \"Alt plus some other keys may cause undesired behavior (e.g. switching windows).\",\n                hint_ctrl: \"Ctrl plus some other keys may cause undesired behavior (e.g. closing the tab).\",\n                hint_mouse: \"Make sure to keep the mouse cursor inside the browser window.\",\n                hint_preferences_access_denied: \"Could not save/load settings because access to localStorage was denied by the browser. This might be caused by \\\"third-party site data\\\" being blocked or similar.\",\n                hint_preferences_localstorage_failed: \"Could not save/load settings because access to localStorage failed.\",\n\n                keyboard_fullscreen_mac: \"<kbd>\" + KEY_CMD + \" + Ctrl + F</kbd> and/or <kbd>\" + KEY_CMD + \" + \" + KEY_SHIFT + \" + F</kbd>\",\n                keyboard_fullscreen_standard: \"<kbd>F11</kbd>\",\n\n                getFullscreenHint: function getFullscreenHint(shortcut) {\n                        return \"Press \" + shortcut + \" to toggle fullscreen\";\n                },\n\n                label_button_alert_ok: \"OK\",\n                label_button_confirm_yes: \"Yes\",\n                label_button_confirm_no: \"No\",\n\n                label_text_confirm_quit: \"Are you sure you want to quit?\",\n                label_text_confirm_reload: \"Are you sure you want to reload the application?\",\n\n                pref_label_cursor: \"Cursor\",\n                pref_label_description_cursor: \"Control how the cursor behaves when the game is running.\",\n                pref_label_cursor_always_visible: \"Always visible\",\n                pref_label_cursor_hidden_when_mouse_used_by_player: \"Hidden when mouse used by player\",\n                pref_label_cursor_always_hidden: \"Always hidden\",\n\n                pref_label_edge_fix: \"Edge fix\",\n                pref_label_description_edge_fix: \"Shrink the playing field slightly to make the edge visible if the monitor is exactly the same height or width as the game.\",\n                pref_label_edge_fix_full: \"Full\",\n                pref_label_edge_fix_minimal: \"Minimal\",\n                pref_label_edge_fix_off: \"Off\",\n\n                pref_label_hints: \"Hints\",\n                pref_label_description_hints: \"Hints may be redundant for experienced Kurve players.\",\n                pref_label_hints_all: \"All\",\n                pref_label_hints_warnings_only: \"Warnings only\",\n                pref_label_hints_none: \"None\",\n\n                pref_label_prevent_spawnkill: \"Prevent spawnkills\",\n                pref_label_description_prevent_spawnkill: \"Enforce a minimum distance between player spawns.\",\n\n                pref_label_confirm_quit: \"Confirm quit\",\n                pref_label_description_confirm_quit: \"Ask for confirmation before quitting to the main menu.\",\n\n                pref_label_confirm_reload: \"Confirm reload\",\n                pref_label_description_confirm_reload: \"Ask for confirmation before reloading the application.\"\n        });\n}();\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = Object.freeze({\n    game_url: \"ZATACKA.html\",\n\n    error_name_security: \"SecurityError\",\n\n    class_hidden: \"hidden\",\n    class_active: \"active\",\n    class_dialog: \"dialog\",\n    class_dialog_alert: \"alert\",\n    class_dialog_confirmation: \"confirmation\",\n    class_description: \"description\",\n    class_half_width: \"half-width\",\n    class_right_hand_side: \"right-hand-side\",\n    class_nocursor: \"nocursor\",\n    class_tempcursor: \"tempcursor\",\n    class_hints_warnings_only: \"hints-warnings-only\",\n    class_hints_none: \"hints-none\",\n    html_name_preference_prefix: \"preference-\",\n\n    cursor_hidden: \"hidden\",\n    cursor_visible: \"visible\",\n\n    id_start_hint: \"start-hint\",\n    id_fullscreen_hint: \"fullscreen-hint\",\n    id_popup_hint: \"popup-hint\",\n    id_button_show_settings: \"button-show-settings\",\n    id_button_hide_settings: \"button-hide-settings\",\n\n    pref_number_type_integer: \"integer\",\n    pref_number_type_float: \"float\",\n\n    pref_key_cursor: \"cursor\",\n    pref_value_cursor_always_visible: \"always_visible\",\n    pref_value_cursor_hidden_when_mouse_used_by_player: \"hidden_when_mouse_used_by_player\",\n    pref_value_cursor_always_hidden: \"always_hidden\",\n\n    pref_key_edge_fix: \"edge_fix\",\n    pref_value_edge_fix_full: \"full\",\n    pref_value_edge_fix_minimal: \"minimal\",\n    pref_value_edge_fix_off: \"off\",\n\n    pref_key_hints: \"hints\",\n    pref_value_hints_all: \"all\",\n    pref_value_hints_warnings_only: \"warnings\",\n    pref_value_hints_none: \"none\",\n\n    pref_key_confirm_quit: \"confirm_quit\",\n    pref_key_confirm_reload: \"confirm_reload\",\n    pref_key_prevent_spawnkill: \"prevent_spawnkill\"\n});\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _Utilities = __webpack_require__(1);\n\nvar _Game = __webpack_require__(14);\n\nvar _Player = __webpack_require__(3);\n\nvar _Renderer = __webpack_require__(15);\n\nvar _GUIController = __webpack_require__(13);\n\nvar _BooleanPreference = __webpack_require__(7);\n\nvar _MultichoicePreference = __webpack_require__(8);\n\nvar _PreferenceManager = __webpack_require__(22);\n\nvar _InfoMessage = __webpack_require__(17);\n\nvar _WarningMessage = __webpack_require__(19);\n\nvar _ConfirmationDialog = __webpack_require__(4);\n\nvar _ZatackaEn_US = __webpack_require__(10);\n\nvar _ZatackaEn_US2 = _interopRequireDefault(_ZatackaEn_US);\n\nvar _strings = __webpack_require__(11);\n\nvar _strings2 = _interopRequireDefault(_strings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Zatacka = function () {\n\n    var canvas_main = (0, _Utilities.byID)(\"canvas_main\");\n    var canvas_overlay = (0, _Utilities.byID)(\"canvas_overlay\");\n    var ORIGINAL_WIDTH = canvas_main.width;\n    var ORIGINAL_HEIGHT = canvas_main.height;\n    var TOTAL_BORDER_THICKNESS = 4;\n    var KEY_RELOAD = _Utilities.KEY.F5;\n    var KEY_FULLSCREEN = _Utilities.KEY.F11;\n    var KEY_DEVTOOLS = _Utilities.KEY.F12;\n    var ALLOWED_KEYS = [KEY_FULLSCREEN, KEY_DEVTOOLS]; // not to be intercepted by our event handler\n\n    var config = Object.freeze({\n        tickrate: 600, // Hz\n        maxFramerate: 300, // Hz\n        canvas: canvas_main,\n        thickness: 3, // Kuxels\n        speed: 60, // Kuxels per second\n        turningRadius: 28.5, // Kuxels (NB: _radius_)\n        minSpawnAngle: -Math.PI / 2, // radians\n        maxSpawnAngle: Math.PI / 2, // radians\n        spawnMargin: 100, // Kuxels\n        preventSpawnkill: false,\n        flickerFrequency: 20, // Hz, when spawning\n        flickerDuration: 830, // ms, when spawning\n        minHoleInterval: 90, // Kuxels\n        maxHoleInterval: 300, // Kuxels\n        minHoleSize: 5, // Kuxels\n        maxHoleSize: 9, // Kuxels\n        hintDelay: 3000, // ms\n        keys: {\n            \"proceed\": [_Utilities.KEY.SPACE, _Utilities.KEY.ENTER],\n            \"quit\": [_Utilities.KEY.ESCAPE]\n        },\n        messages: Object.freeze({\n            pick: new _InfoMessage.InfoMessage(_ZatackaEn_US2.default.hint_pick),\n            proceed: new _InfoMessage.InfoMessage(_ZatackaEn_US2.default.hint_proceed),\n            next: new _InfoMessage.InfoMessage(_ZatackaEn_US2.default.hint_next),\n            quit: new _InfoMessage.InfoMessage(_ZatackaEn_US2.default.hint_quit),\n            alt: new _WarningMessage.WarningMessage(_ZatackaEn_US2.default.hint_alt),\n            ctrl: new _WarningMessage.WarningMessage(_ZatackaEn_US2.default.hint_ctrl),\n            mouse: new _WarningMessage.WarningMessage(_ZatackaEn_US2.default.hint_mouse),\n            preferences_access_denied: new _WarningMessage.WarningMessage(_ZatackaEn_US2.default.hint_preferences_access_denied),\n            preferences_localstorage_failed: new _WarningMessage.WarningMessage(_ZatackaEn_US2.default.hint_preferences_localstorage_failed)\n        }),\n        dialogs: Object.freeze({\n            confirmation_quit: new _ConfirmationDialog.ConfirmationDialog(_ZatackaEn_US2.default.label_text_confirm_quit, quitGame),\n            confirmation_reload: new _ConfirmationDialog.ConfirmationDialog(_ZatackaEn_US2.default.label_text_confirm_reload, reload)\n        }),\n        defaultPlayers: Object.freeze([{ id: 1, name: \"Red\", color: \"#FF2800\", keyL: _Utilities.KEY[\"1\"], keyR: _Utilities.KEY.Q }, { id: 2, name: \"Yellow\", color: \"#C3C300\", keyL: [_Utilities.KEY.CTRL, _Utilities.KEY.Z], keyR: [_Utilities.KEY.ALT, _Utilities.KEY.X] }, { id: 3, name: \"Orange\", color: \"#FF7900\", keyL: _Utilities.KEY.M, keyR: _Utilities.KEY.COMMA }, { id: 4, name: \"Green\", color: \"#00CB00\", keyL: _Utilities.KEY.LEFT_ARROW, keyR: _Utilities.KEY.DOWN_ARROW }, { id: 5, name: \"Pink\", color: \"#DF51B6\", keyL: [_Utilities.KEY.DIVIDE, _Utilities.KEY.END, _Utilities.KEY.PAGE_DOWN], keyR: [_Utilities.KEY.MULTIPLY, _Utilities.KEY.PAGE_UP] }, { id: 6, name: \"Blue\", color: \"#00A2CB\", keyL: _Utilities.MOUSE.LEFT, keyR: _Utilities.MOUSE.RIGHT }])\n    });\n\n    var PREFERENCES = Object.freeze([{\n        type: _BooleanPreference.BooleanPreference,\n        key: _strings2.default.pref_key_prevent_spawnkill,\n        label: _ZatackaEn_US2.default.pref_label_prevent_spawnkill,\n        description: _ZatackaEn_US2.default.pref_label_description_prevent_spawnkill,\n        default: false\n    }, {\n        type: _BooleanPreference.BooleanPreference,\n        key: _strings2.default.pref_key_confirm_quit,\n        label: _ZatackaEn_US2.default.pref_label_confirm_quit,\n        description: _ZatackaEn_US2.default.pref_label_description_confirm_quit,\n        default: true\n    }, {\n        type: _BooleanPreference.BooleanPreference,\n        key: _strings2.default.pref_key_confirm_reload,\n        label: _ZatackaEn_US2.default.pref_label_confirm_reload,\n        description: _ZatackaEn_US2.default.pref_label_description_confirm_reload,\n        default: true\n    }, {\n        type: _MultichoicePreference.MultichoicePreference,\n        key: _strings2.default.pref_key_cursor,\n        label: _ZatackaEn_US2.default.pref_label_cursor,\n        description: _ZatackaEn_US2.default.pref_label_description_cursor,\n        values: [_strings2.default.pref_value_cursor_always_visible, _strings2.default.pref_value_cursor_hidden_when_mouse_used_by_player, _strings2.default.pref_value_cursor_always_hidden],\n        labels: [_ZatackaEn_US2.default.pref_label_cursor_always_visible, _ZatackaEn_US2.default.pref_label_cursor_hidden_when_mouse_used_by_player, _ZatackaEn_US2.default.pref_label_cursor_always_hidden],\n        default: _strings2.default.pref_value_cursor_hidden_when_mouse_used_by_player\n    }, {\n        type: _MultichoicePreference.MultichoicePreference,\n        key: _strings2.default.pref_key_edge_fix,\n        label: _ZatackaEn_US2.default.pref_label_edge_fix,\n        description: _ZatackaEn_US2.default.pref_label_description_edge_fix,\n        values: [_strings2.default.pref_value_edge_fix_full, _strings2.default.pref_value_edge_fix_minimal, _strings2.default.pref_value_edge_fix_off],\n        labels: [_ZatackaEn_US2.default.pref_label_edge_fix_full, _ZatackaEn_US2.default.pref_label_edge_fix_minimal, _ZatackaEn_US2.default.pref_label_edge_fix_off],\n        default: _strings2.default.pref_value_edge_fix_off\n    }, {\n        type: _MultichoicePreference.MultichoicePreference,\n        key: _strings2.default.pref_key_hints,\n        label: _ZatackaEn_US2.default.pref_label_hints,\n        description: _ZatackaEn_US2.default.pref_label_description_hints,\n        values: [_strings2.default.pref_value_hints_all, _strings2.default.pref_value_hints_warnings_only, _strings2.default.pref_value_hints_none],\n        labels: [_ZatackaEn_US2.default.pref_label_hints_all, _ZatackaEn_US2.default.pref_label_hints_warnings_only, _ZatackaEn_US2.default.pref_label_hints_none],\n        default: _strings2.default.pref_value_hints_all\n    }]);\n\n    var preferenceManager = new _PreferenceManager.PreferenceManager(PREFERENCES);\n\n    function isProceedKey(key) {\n        return config.keys.proceed.includes(key);\n    }\n\n    function isQuitKey(key) {\n        return config.keys.quit.includes(key);\n    }\n\n    function shouldPreventDefault(key) {\n        return !ALLOWED_KEYS.includes(key);\n    }\n\n    function setEdgePadding(padding) {\n        if (game.isStarted()) {\n            throw new Error(\"Cannot change edge padding when the game is running.\");\n        } else {\n            var newCanvasWidth = ORIGINAL_WIDTH - padding;\n            var newCanvasHeight = ORIGINAL_HEIGHT - 2 * padding;\n            game.setSize(newCanvasWidth, newCanvasHeight);\n            guiController.setEdgePadding(padding);\n        }\n    }\n\n    function setEdgeMode(mode) {\n        var padding = 0;\n        if (mode === \"minimal\") {\n            padding = 1;\n        } else if (mode === \"full\") {\n            padding = TOTAL_BORDER_THICKNESS;\n        }\n        try {\n            setEdgePadding(padding);\n        } catch (e) {\n            (0, _Utilities.logError)(e);\n        }\n    }\n\n    function setPreventSpawnkill(mode) {\n        if (game.isStarted()) {\n            throw new Error(\"Cannot change edge padding when the game is running.\");\n        } else {\n            game.setPreventSpawnkill(mode);\n        }\n    }\n\n    function getHoleConfig() {\n        return {\n            minHoleSize: config.minHoleSize,\n            maxHoleSize: config.maxHoleSize,\n            minHoleInterval: config.minHoleInterval,\n            maxHoleInterval: config.maxHoleInterval\n        };\n    }\n\n    function getPaddedHoleConfig() {\n        var thickness = config.thickness;\n        var holeConfig = getHoleConfig();\n        var paddedHoleConfig = {};\n        paddedHoleConfig.minPaddedHoleSize = holeConfig.minHoleSize + thickness;\n        paddedHoleConfig.maxPaddedHoleSize = holeConfig.maxHoleSize + thickness;\n        paddedHoleConfig.minPaddedHoleInterval = Math.max(0, holeConfig.minHoleInterval - thickness);\n        paddedHoleConfig.maxPaddedHoleInterval = Math.max(0, holeConfig.maxHoleInterval - thickness);\n        return paddedHoleConfig;\n    }\n\n    function defaultPlayerData(id) {\n        return config.defaultPlayers.find(function (defaultPlayer) {\n            return defaultPlayer.id === id;\n        });\n    }\n\n    function defaultPlayer(id) {\n        var playerData = defaultPlayerData(id);\n        if (playerData === undefined) {\n            throw new TypeError(\"There is no default player with ID \" + id + \".\");\n        }\n        return new _Player.Player(playerData.id, playerData.name, playerData.color, playerData.keyL, playerData.keyR, getPaddedHoleConfig());\n    }\n\n    function applyCursorBehavior() {\n        var mouseIsBeingUsed = game.getPlayers().some(hasMouseButton);\n        var behavior = void 0;\n        switch (preferenceManager.getCached(_strings2.default.pref_key_cursor)) {\n            case _strings2.default.pref_value_cursor_hidden_when_mouse_used_by_player:\n                behavior = mouseIsBeingUsed ? _strings2.default.cursor_hidden : _strings2.default.cursor_visible;\n                break;\n            case _strings2.default.pref_value_cursor_always_hidden:\n                behavior = _strings2.default.cursor_hidden;\n                break;\n            default:\n                behavior = _strings2.default.cursor_visible;\n        }\n        (0, _Utilities.log)(\"Setting cursor behavior to \" + behavior + \".\");\n        guiController.setCursorBehavior(behavior);\n    }\n\n    function proceedKeyPressedInLobby() {\n        var numberOfReadyPlayers = game.getNumberOfPlayers();\n        if (numberOfReadyPlayers > 0) {\n            clearMessages();\n            applyCursorBehavior();\n            game.setMode(numberOfReadyPlayers === 1 ? _Game.Game.PRACTICE : _Game.Game.COMPETITIVE);\n            game.start();\n        }\n    }\n\n    function hasMouseButton(player) {\n        return player.usesAnyMouseButton();\n    }\n\n    function checkForDangerousInput() {\n        if (game.getPlayers().some(function (player) {\n            return player.hasKey(_Utilities.KEY.CTRL);\n        })) {\n            guiController.showMessage(config.messages.ctrl);\n        } else {\n            guiController.hideMessage(config.messages.ctrl);\n        }\n\n        if (game.getPlayers().some(function (player) {\n            return player.hasKey(_Utilities.KEY.ALT);\n        })) {\n            guiController.showMessage(config.messages.alt);\n        } else {\n            guiController.hideMessage(config.messages.alt);\n        }\n\n        if (game.getPlayers().some(hasMouseButton)) {\n            guiController.showMessage(config.messages.mouse);\n        } else {\n            guiController.hideMessage(config.messages.mouse);\n        }\n    }\n\n    function addPlayer(id) {\n        game.addPlayer(defaultPlayer(id));\n        checkForDangerousInput();\n        clearTimeout(hintPickTimer);\n        guiController.hideMessage(config.messages.pick);\n        clearTimeout(hintProceedTimer);\n        hintProceedTimer = setTimeout(function () {\n            guiController.showMessage(config.messages.proceed);\n        }, config.hintDelay);\n    }\n\n    function removePlayer(id) {\n        game.removePlayer(id);\n        checkForDangerousInput();\n        clearTimeout(hintProceedTimer);\n        if (game.getNumberOfPlayers() === 0) {\n            guiController.hideMessage(config.messages.proceed);\n        } else {\n            hintProceedTimer = setTimeout(function () {\n                guiController.showMessage(config.messages.proceed);\n            }, config.hintDelay);\n        }\n    }\n\n    function defaultPlayerHasLeftKey(playerData, pressedKey) {\n        return pressedKey === playerData.keyL || playerData.keyL instanceof Array && playerData.keyL.includes(pressedKey);\n    }\n\n    function defaultPlayerHasRightKey(playerData, pressedKey) {\n        return pressedKey === playerData.keyR || playerData.keyR instanceof Array && playerData.keyR.includes(pressedKey);\n    }\n\n    function addOrRemovePlayer(playerData, pressedKey) {\n        if (defaultPlayerHasLeftKey(playerData, pressedKey)) {\n            addPlayer(playerData.id);\n        } else if (defaultPlayerHasRightKey(playerData, pressedKey)) {\n            removePlayer(playerData.id);\n        }\n    }\n\n    function eventConsumer(event) {\n        event.stopPropagation();\n        event.preventDefault();\n    }\n\n    function keyPressedInLobby(pressedKey) {\n        config.defaultPlayers.forEach(function (playerData) {\n            addOrRemovePlayer(playerData, pressedKey);\n        });\n    }\n\n    function mouseClickedInLobby(button) {\n        config.defaultPlayers.forEach(function (playerData) {\n            addOrRemovePlayer(playerData, _Utilities.MOUSE.pack(button));\n        });\n    }\n\n    function keyHandler(event) {\n        var callback = game.isStarted() ? gameKeyHandler : guiController.isShowingSettings() ? settingsKeyHandler : lobbyKeyHandler;\n        guiController.keyPressed(event, callback);\n    }\n\n    function mouseHandler(event) {\n        var callback = game.isStarted() ? gameMouseHandler : guiController.isShowingSettings() ? settingsMouseHandler : lobbyMouseHandler;\n        guiController.mouseClicked(event, callback);\n    }\n\n    function unloadHandler(event) {\n        if (game.isStarted()) {\n            gameUnloadHandler();\n        }\n    }\n\n    function lobbyKeyHandler(event) {\n        if (shouldPreventDefault(event.keyCode)) {\n            event.preventDefault();\n        }\n        var pressedKey = event.keyCode;\n        if (pressedKey === KEY_RELOAD) {\n            reload();\n        } else if (isProceedKey(pressedKey)) {\n            proceedKeyPressedInLobby();\n        } else {\n            keyPressedInLobby(pressedKey);\n        }\n    }\n\n    function lobbyMouseHandler(event) {\n        event.preventDefault();\n        mouseClickedInLobby(event.button);\n    }\n\n    function reload() {\n        window.location.reload();\n    }\n\n    function quitGame() {\n        game.quit();\n        guiController.gameQuit();\n        game = newGame();\n    }\n\n    function gameKeyHandler(event) {\n        if (shouldPreventDefault(event.keyCode)) {\n            event.preventDefault();\n        }\n        var pressedKey = event.keyCode;\n        if (isProceedKey(pressedKey)) {\n            if (game.shouldQuitOnProceedKey()) {\n                quitGame();\n            } else {\n                game.proceedKeyPressed();\n            }\n        } else if (isQuitKey(pressedKey) && game.shouldQuitOnQuitKey()) {\n            if (preferenceManager.getCached(_strings2.default.pref_key_confirm_quit) === true && !guiController.isShowingDialog()) {\n                guiController.showDialog(config.dialogs.confirmation_quit);\n            } else {\n                quitGame();\n            }\n        } else if (pressedKey === KEY_RELOAD) {\n            if (preferenceManager.getCached(_strings2.default.pref_key_confirm_reload) === true) {\n                if (game.shouldShowReloadConfirmationOnReloadKey() && !guiController.isShowingDialog()) {\n                    guiController.showDialog(config.dialogs.confirmation_reload, reload);\n                }\n            } else {\n                reload();\n            }\n        }\n    }\n\n    function gameMouseHandler(event) {\n        event.preventDefault();\n    }\n\n    function gameUnloadHandler(event) {\n        // A simple trick to prevent accidental unloading of the entire game.\n        var message = _ZatackaEn_US2.default.hint_unload;\n        event.returnValue = message; // Gecko, Trident, Chrome 34+\n        return message; // Gecko, Webkit, Chrome <34\n    }\n\n    function settingsKeyHandler(event) {\n        var pressedKey = event.keyCode;\n        if (isQuitKey(pressedKey)) {\n            hideSettings();\n        } else if (pressedKey === KEY_RELOAD) {\n            reload();\n        }\n    }\n\n    function settingsMouseHandler(event) {\n        // Intentionally empty.\n    }\n\n    function showSettings() {\n        clearTimeout(hintPickTimer);\n        clearTimeout(hintProceedTimer);\n        try {\n            guiController.updateSettingsForm(preferenceManager.getAllPreferencesWithValues_saved());\n        } catch (e) {\n            (0, _Utilities.logWarning)(\"Could not load settings from localStorage. Using cached settings instead.\");\n            guiController.updateSettingsForm(preferenceManager.getAllPreferencesWithValues_cached());\n            handleSettingsAccessError(e);\n        }\n        guiController.showSettings();\n    }\n\n    function hideSettings() {\n        guiController.parseSettingsForm().forEach(function (newSetting) {\n            try {\n                preferenceManager.set(newSetting.key, newSetting.value);\n            } catch (e) {\n                (0, _Utilities.logWarning)(\"Could not save setting '\" + newSetting.key + \"' to localStorage.\");\n                handleSettingsAccessError(e);\n            }\n        });\n        applySettings();\n        guiController.hideSettings();\n    }\n\n    function applySettings() {\n        try {\n            // Edge fix:\n            setEdgeMode(preferenceManager.getSaved(_strings2.default.pref_key_edge_fix));\n            // Hints:\n            guiController.setMessageMode(preferenceManager.getSaved(_strings2.default.pref_key_hints));\n            // Prevent spawnkill:\n            game.setPreventSpawnkill(preferenceManager.getSaved(_strings2.default.pref_key_prevent_spawnkill));\n        } catch (e) {\n            (0, _Utilities.logWarning)(\"Could not load settings from localStorage. Using cached settings instead.\");\n            setEdgeMode(preferenceManager.getCached(_strings2.default.pref_key_edge_fix));\n            guiController.setMessageMode(preferenceManager.getCached(_strings2.default.pref_key_hints));\n            game.setPreventSpawnkill(preferenceManager.getCached(_strings2.default.pref_key_prevent_spawnkill));\n            handleSettingsAccessError(e);\n        }\n    }\n\n    function handleSettingsAccessError(error) {\n        if (error.name === _strings2.default.error_name_security) {\n            guiController.showMessage(config.messages.preferences_access_denied);\n        } else {\n            guiController.showMessage(config.messages.preferences_localstorage_failed);\n        }\n    }\n\n    function clearMessages() {\n        clearTimeout(hintPickTimer);\n        clearTimeout(hintProceedTimer);\n        guiController.clearMessages();\n    }\n\n    function addShowSettingsButtonEventListener() {\n        var showSettingsButton = (0, _Utilities.byID)(_strings2.default.id_button_show_settings);\n        if (showSettingsButton instanceof HTMLElement) {\n            showSettingsButton.addEventListener(\"mousedown\", eventConsumer);\n            showSettingsButton.addEventListener(\"click\", showSettings);\n        }\n    }\n\n    function addHideSettingsButtonEventListener() {\n        var hideSettingsButton = (0, _Utilities.byID)(_strings2.default.id_button_hide_settings);\n        if (hideSettingsButton instanceof HTMLElement) {\n            hideSettingsButton.addEventListener(\"mousedown\", eventConsumer);\n            hideSettingsButton.addEventListener(\"click\", hideSettings);\n        }\n    }\n\n    function addEventListeners() {\n        (0, _Utilities.log)(\"Adding event listeners ...\");\n\n        // Hide/show settings:\n        addShowSettingsButtonEventListener();\n        addHideSettingsButtonEventListener();\n\n        // General event handlers:\n        document.addEventListener(\"keydown\", keyHandler);\n        document.addEventListener(\"mousedown\", mouseHandler);\n        document.addEventListener(\"contextmenu\", eventConsumer);\n        window.addEventListener(\"beforeunload\", unloadHandler);\n\n        // Player input:\n        document.addEventListener(\"keydown\", _Utilities.Keyboard.onKeydown.bind(_Utilities.Keyboard));\n        document.addEventListener(\"keyup\", _Utilities.Keyboard.onKeyup.bind(_Utilities.Keyboard));\n        document.addEventListener(\"mousedown\", _Utilities.Mouse.onMousedown.bind(_Utilities.Mouse));\n        document.addEventListener(\"mouseup\", _Utilities.Mouse.onMouseup.bind(_Utilities.Mouse));\n\n        (0, _Utilities.log)(\"Done.\");\n    }\n\n    addEventListeners();\n\n    function newGame() {\n        return new _Game.Game(config, (0, _Renderer.Renderer)(canvas_main, canvas_overlay), guiController);\n    }\n\n    var guiController = (0, _GUIController.GUIController)(config);\n    var game = newGame();\n\n    var hintProceedTimer = void 0;\n    var hintPickTimer = setTimeout(function () {\n        guiController.showMessage(config.messages.pick);\n    }, config.hintDelay);\n\n    applySettings();\n\n    return {\n        getConfig: function getConfig() {\n            return config;\n        },\n        getGame: function getGame() {\n            return game;\n        },\n        addPlayer: function addPlayer(playerOrID) {\n            var player = _Player.Player.isPlayer(playerOrID) ? playerOrID : new _Player.Player(playerOrID);\n            game.addPlayer(player);\n        }\n    };\n}();\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.GUIController = GUIController;\n\nvar _Preference = __webpack_require__(0);\n\nvar _BooleanPreference = __webpack_require__(7);\n\nvar _RangePreference = __webpack_require__(9);\n\nvar _IntegerRangePreference = __webpack_require__(21);\n\nvar _MultichoicePreference = __webpack_require__(8);\n\nvar _Dialog = __webpack_require__(5);\n\nvar _ConfirmationDialog = __webpack_require__(4);\n\nvar _Utilities = __webpack_require__(1);\n\nvar _ZatackaEn_US = __webpack_require__(10);\n\nvar _ZatackaEn_US2 = _interopRequireDefault(_ZatackaEn_US);\n\nvar _strings = __webpack_require__(11);\n\nvar _strings2 = _interopRequireDefault(_strings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction GUIController(cfg) {\n\n    var config = cfg;\n    var lobby = (0, _Utilities.byID)(\"lobby\");\n    var controls = (0, _Utilities.byID)(\"controls\");\n    var canvas_main = (0, _Utilities.byID)(\"canvas_main\");\n    var canvas_overlay = (0, _Utilities.byID)(\"canvas_overlay\");\n    var left = (0, _Utilities.byID)(\"left\");\n    var scoreboard = (0, _Utilities.byID)(\"scoreboard\");\n    var results = (0, _Utilities.byID)(\"results\");\n    var KONEC_HRY = (0, _Utilities.byID)(\"KONEC_HRY\");\n    var messagesContainer = (0, _Utilities.byID)(\"messages\");\n    // const settingsContainer = byID(\"settings\");\n    var dialogsOverlay = (0, _Utilities.byID)(\"dialogs\");\n    var settingsForm = (0, _Utilities.byID)(\"settings-form\");\n\n    var ORIGINAL_LEFT_WIDTH = left.offsetWidth;\n    var MULTICHOICE_LABEL_MAX_LENGTH_FOR_HALFWIDTH_FIELDSET = 22; // More characters than this will result in a full-width div/fieldset.\n    var FLOAT_RANGE_PREFERENCE_STEP = 0.01;\n\n    var BUTTON_TAG_NAME = \"button\";\n    var BUTTON_NODE_CLASS = HTMLButtonElement;\n\n    var LABEL_ALERT_OK = _ZatackaEn_US2.default.label_button_alert_ok;\n    var LABEL_CONFIRM_YES = _ZatackaEn_US2.default.label_button_confirm_yes;\n    var LABEL_CONFIRM_NO = _ZatackaEn_US2.default.label_button_confirm_no;\n\n    var showingSettings = false;\n    var currentMessages = [];\n    var queuedDialogs = [];\n    var currentDialogWithBox = null;\n\n    var DialogWithBox = function DialogWithBox(dialog, box) {\n        _classCallCheck(this, DialogWithBox);\n\n        this.dialog = dialog;\n        this.box = box;\n    };\n\n    // PRIVATE FUNCTIONS\n\n    function hideLobby() {\n        (0, _Utilities.log)(\"Hiding lobby.\");\n        lobby.classList.add(_strings2.default.class_hidden);\n    }\n\n    function showLobby() {\n        (0, _Utilities.log)(\"Showing lobby.\");\n        lobby.classList.remove(_strings2.default.class_hidden);\n    }\n\n    function showDialogsOverlay() {\n        dialogsOverlay.classList.remove(_strings2.default.class_hidden);\n    }\n\n    function hideDialogsOverlay() {\n        dialogsOverlay.classList.add(_strings2.default.class_hidden);\n    }\n\n    function isLobbyEntry(element) {\n        return (0, _Utilities.isHTMLElement)(element) && element.children.length >= 2;\n    }\n\n    function isButton(element) {\n        return element instanceof BUTTON_NODE_CLASS;\n    }\n\n    function showDialogRightAway(dialog) {\n        var dialogBox = dialogHTMLElement(dialog);\n        currentDialogWithBox = new DialogWithBox(dialog, dialogBox);\n        setTemporaryCursorVisibility(true);\n        showDialogsOverlay();\n        dialogsOverlay.appendChild(dialogBox);\n        // A dialog should have its last button focused:\n        dialogBox.querySelector(\"button:last-of-type\").focus();\n    }\n\n    function currentDialogClosed() {\n        currentDialogWithBox.box.remove();\n        currentDialogWithBox = null;\n        if (anyQueuedDialogs()) {\n            // There is at least one dialog waiting. Show it:\n            showDialogRightAway(queuedDialogs.shift());\n        } else {\n            // No more dialogs. Restore:\n            setTemporaryCursorVisibility(false);\n            hideDialogsOverlay();\n        }\n    }\n\n    function anyQueuedDialogs() {\n        return queuedDialogs.length > 0;\n    }\n\n    function escapeShouldCloseCurrentDialog() {\n        return currentDialogWithBox.dialog instanceof _ConfirmationDialog.ConfirmationDialog;\n    }\n\n    function dialogHTMLElementBoilerplate(text) {\n        var dialogBox = document.createElement(\"div\");\n        dialogBox.classList.add(_strings2.default.class_dialog);\n        var label = document.createElement(\"p\");\n        label.textContent = text;\n        dialogBox.appendChild(label);\n        return dialogBox;\n    }\n\n    function alertDialogHTMLElement(dialog) {\n        var alertDialogBox = dialogHTMLElementBoilerplate(dialog.text);\n        alertDialogBox.classList.add(_strings2.default.class_dialog_alert);\n        var buttonOK = document.createElement(\"button\");\n        buttonOK.textContent = LABEL_ALERT_OK;\n        alertDialogBox.appendChild(buttonOK);\n\n        function alertDialogEventHandler() {\n            currentDialogClosed();\n        }\n        // Event listener:\n        buttonOK.addEventListener(\"click\", alertDialogEventHandler);\n\n        return alertDialogBox;\n    }\n\n    function confirmationDialogHTMLElement(confirmationDialog) {\n        var confirmationDialogBox = dialogHTMLElementBoilerplate(confirmationDialog.text);\n        confirmationDialogBox.classList.add(_strings2.default.class_dialog_confirmation);\n        var buttonYes = document.createElement(\"button\");\n        buttonYes.textContent = LABEL_CONFIRM_YES;\n        var buttonNo = document.createElement(\"button\");\n        buttonNo.textContent = LABEL_CONFIRM_NO;\n        confirmationDialogBox.appendChild(buttonYes);\n        confirmationDialogBox.appendChild(buttonNo);\n\n        function confirmationDialogEventHandler(response) {\n            return function () {\n                currentDialogClosed();\n                if (response === true) {\n                    confirmationDialog.callback();\n                }\n            };\n        }\n        // Event listeners:\n        buttonYes.addEventListener(\"click\", confirmationDialogEventHandler(true));\n        buttonNo.addEventListener(\"click\", confirmationDialogEventHandler(false));\n\n        return confirmationDialogBox;\n    }\n\n    function dialogHTMLElement(dialog) {\n        if (dialog instanceof _ConfirmationDialog.ConfirmationDialog) {\n            return confirmationDialogHTMLElement(dialog);\n        } else if (dialog instanceof _Dialog.Dialog) {\n            return alertDialogHTMLElement(dialog);\n        }\n        throw new TypeError(dialog + \" is not a valid dialog.\");\n    }\n\n    function resetScoreboardEntry(entry) {\n        entry.classList.remove(\"active\");\n    }\n\n    function resetScoreboard() {\n        Array.from(scoreboard.children).forEach(resetScoreboardEntry);\n    }\n\n    function resetResults() {\n        Array.from(results.children).forEach(resetScoreboardEntry);\n    }\n\n    function setCursorBehavior(behavior) {\n        switch (behavior) {\n            case _strings2.default.cursor_visible:\n                document.body.classList.remove(_strings2.default.class_nocursor);\n                break;\n            case _strings2.default.cursor_hidden:\n                document.body.classList.add(_strings2.default.class_nocursor);\n                break;\n            default:\n                (0, _Utilities.logError)(\"Cannot set cursor behavior to '\" + behavior + \"'.\");\n        }\n    }\n\n    function setTemporaryCursorVisibility(tempCursorActive) {\n        if (tempCursorActive) {\n            document.body.classList.add(_strings2.default.class_tempcursor);\n        } else {\n            document.body.classList.remove(_strings2.default.class_tempcursor);\n        }\n    }\n\n    function settingsEntryShouldBeHalfWidth(preference) {\n        if (preference instanceof _MultichoicePreference.MultichoicePreference) {\n            var longestValueLabel = preference.labels.reduce(function (acc, current) {\n                return current.length > acc.length ? current : acc;\n            });\n            return longestValueLabel.length <= MULTICHOICE_LABEL_MAX_LENGTH_FOR_HALFWIDTH_FIELDSET;\n        } else {\n            return false;\n        }\n    }\n\n    function settingsEntryHTMLElement(preference, preferenceValue) {\n        if (!(preference instanceof _Preference.Preference)) {\n            throw new TypeError(preference + \" is not a preference.\");\n        }\n\n        // Common\n        var div = document.createElement(\"div\");\n        var label = document.createElement(\"label\");\n        label.textContent = preference.label;\n        label.setAttribute(\"for\", \"\" + _strings2.default.html_name_preference_prefix + preference.key);\n        var description = document.createElement(\"aside\");\n        description.textContent = preference.description;\n        description.classList.add(_strings2.default.class_description);\n\n        // Boolean\n        if (preference instanceof _BooleanPreference.BooleanPreference) {\n            var input = document.createElement(\"input\");\n            input.type = \"checkbox\";\n            input.dataset.key = preference.key;\n            input.id = _strings2.default.html_name_preference_prefix + preference.key;\n            input.checked = preferenceValue === true;\n            div.appendChild(input);\n            div.appendChild(label);\n        }\n\n        // Multichoice\n        else if (preference instanceof _MultichoicePreference.MultichoicePreference) {\n                var fieldset = document.createElement(\"fieldset\");\n                var legend = document.createElement(\"legend\");\n                legend.textContent = preference.label;\n                fieldset.appendChild(legend);\n                preference.values.forEach(function (value, index) {\n                    var id = _strings2.default.html_name_preference_prefix + preference.key + \"-\" + preference.values[index];\n                    var radioButton = document.createElement(\"input\");\n                    radioButton.type = \"radio\";\n                    radioButton.id = id;\n                    radioButton.name = _strings2.default.html_name_preference_prefix + preference.key;\n                    radioButton.value = value;\n                    radioButton.dataset.key = preference.key;\n                    radioButton.checked = preferenceValue === value;\n                    var radioButtonLabel = document.createElement(\"label\");\n                    radioButtonLabel.textContent = preference.labels[index];\n                    radioButtonLabel.setAttribute(\"for\", id);\n                    fieldset.appendChild(radioButton);\n                    fieldset.appendChild(radioButtonLabel);\n                });\n                div.appendChild(fieldset);\n                if (settingsEntryShouldBeHalfWidth(preference)) {\n                    div.classList.add(_strings2.default.class_half_width);\n                }\n            }\n\n            // Range\n            else if (preference instanceof _RangePreference.RangePreference) {\n                    var isIntegerRange = preference instanceof _IntegerRangePreference.IntegerRangePreference;\n                    div.appendChild(label);\n                    var _input = document.createElement(\"input\");\n                    _input.type = \"number\";\n                    _input.dataset.key = preference.key;\n                    _input.dataset.numberType = isIntegerRange ? _strings2.default.pref_number_type_integer : _strings2.default.pref_number_type_float;\n                    _input.name = _strings2.default.html_name_preference_prefix + preference.key;\n                    _input.setAttribute(\"step\", isIntegerRange ? 1 : FLOAT_RANGE_PREFERENCE_STEP);\n                    _input.setAttribute(\"min\", preference.min);\n                    _input.setAttribute(\"max\", preference.max);\n                    _input.value = preferenceValue;\n                    div.appendChild(_input);\n                }\n\n        div.appendChild(description);\n        return div;\n    }\n\n    // PUBLIC API\n\n    function keyPressed(event, callback) {\n        if (isShowingDialog()) {\n            var currentlyFocusedButton = currentDialogWithBox.box.querySelector(BUTTON_TAG_NAME + \":focus\");\n            var previousButton = void 0,\n                nextButton = void 0;\n            if (isButton(currentlyFocusedButton)) {\n                previousButton = isButton(currentlyFocusedButton.previousSibling) ? currentlyFocusedButton.previousSibling : null;\n                nextButton = isButton(currentlyFocusedButton.nextSibling) ? currentlyFocusedButton.nextSibling : null;\n            }\n            switch (event.keyCode) {\n                case _Utilities.KEY.SPACE:\n                case _Utilities.KEY.ENTER:\n                    // Necessary because buttons do not automatically react to Space until keyup, making them feel sluggish compared to when Enter is used.\n                    if (isButton(currentlyFocusedButton)) {\n                        currentlyFocusedButton.click();\n                    }\n                    break;\n                case _Utilities.KEY.ESCAPE:\n                    if (escapeShouldCloseCurrentDialog()) {\n                        currentDialogClosed();\n                    }\n                    break;\n                case _Utilities.KEY.TAB:\n                    if (_Utilities.Keyboard.isDown(_Utilities.KEY.SHIFT)) {\n                        if (isButton(previousButton)) {\n                            previousButton.focus();\n                        }\n                    } else if (isButton(nextButton)) {\n                        nextButton.focus();\n                    }\n                    break;\n                case _Utilities.KEY.LEFT_ARROW:\n                    if (isButton(previousButton)) {\n                        previousButton.focus();\n                    }\n                    break;\n                case _Utilities.KEY.RIGHT_ARROW:\n                    if (isButton(nextButton)) {\n                        nextButton.focus();\n                    }\n                    break;\n                default:\n                    callback(event);\n            }\n        } else {\n            callback(event);\n        }\n    }\n\n    function mouseClicked(event, callback) {\n        if (isShowingDialog()) {\n            // Do nothing particular, but consume the event.\n        } else {\n            callback(event);\n        }\n    }\n\n    function showDialog(dialog) {\n        if (isShowingDialog()) {\n            queuedDialogs.push(dialog);\n        } else {\n            showDialogRightAway(dialog);\n        }\n    }\n\n    function isShowingDialog() {\n        return currentDialogWithBox !== null;\n    }\n\n    function setEdgePadding(padding) {\n        left.style.width = ORIGINAL_LEFT_WIDTH + padding + \"px\";\n    }\n\n    function playerReady(id) {\n        var index = id - 1;\n        var entry = controls.children[index];\n        if (!isLobbyEntry(entry)) {\n            (0, _Utilities.logWarning)(\"Cannot mark player \" + id + \" as ready because controls.children[\" + index + \"] (\" + controls.children[index] + \") is not a valid lobby entry.\");\n        } else {\n            entry.children[1].classList.add(_strings2.default.class_active);\n        }\n    }\n\n    function playerUnready(id) {\n        var index = id - 1;\n        var entry = controls.children[index];\n        if (!isLobbyEntry(entry)) {\n            (0, _Utilities.logWarning)(\"Cannot mark player \" + id + \" as unready because controls.children[\" + index + \"] (\" + controls.children[index] + \") is not a valid lobby entry.\");\n        } else {\n            entry.children[1].classList.remove(_strings2.default.class_active);\n        }\n    }\n\n    function allPlayersUnready() {\n        for (var id = 1; id <= controls.children.length; id++) {\n            playerUnready(id);\n        }\n    }\n\n    function gameStarted() {\n        hideLobby();\n    }\n\n    function gameQuit() {\n        hideKonecHry();\n        showLobby();\n        clearMessages();\n        resetScoreboard();\n        resetResults();\n        allPlayersUnready();\n        setCursorBehavior(_strings2.default.cursor_visible);\n    }\n\n    function konecHry() {\n        showKonecHry();\n        resetScoreboard();\n    }\n\n    function showKonecHry() {\n        KONEC_HRY.classList.remove(_strings2.default.class_hidden);\n    }\n\n    function hideKonecHry() {\n        KONEC_HRY.classList.add(_strings2.default.class_hidden);\n    }\n\n    function showMessage(message) {\n        if (!currentMessages.includes(message)) {\n            currentMessages.push(message);\n        }\n        updateMessages(currentMessages);\n    }\n\n    function showSettings() {\n        showingSettings = true;\n        settings.classList.remove(_strings2.default.class_hidden);\n    }\n\n    function hideSettings() {\n        showingSettings = false;\n        settings.classList.add(_strings2.default.class_hidden);\n    }\n\n    function isShowingSettings() {\n        return showingSettings;\n    }\n\n    function updateSettingsForm(preferencesWithData) {\n        (0, _Utilities.flush)(settingsForm);\n        var settingsEntries = preferencesWithData.map(function (preferenceWithData) {\n            return settingsEntryHTMLElement(preferenceWithData.preference, preferenceWithData.value);\n        });\n        // Add special class to half-width divs on the right hand side:\n        var consecutiveHalfWidthDivs = 0;\n        for (var i = 0; i < settingsEntries.length; i++) {\n            var currentEntry = settingsEntries[i];\n            if (currentEntry.classList.contains(_strings2.default.class_half_width)) {\n                consecutiveHalfWidthDivs++;\n                if (consecutiveHalfWidthDivs % 2 === 0) {\n                    // Even number of consecutive half-width divs, so this one will be on the right hand side.\n                    currentEntry.classList.add(_strings2.default.class_right_hand_side);\n                }\n            } else {\n                consecutiveHalfWidthDivs = 0;\n            }\n        }\n        settingsEntries.forEach(function (settingsEntry) {\n            settingsForm.appendChild(settingsEntry);\n        });\n    }\n\n    function parseSettingsForm() {\n        var newSettings = [];\n        // <input> elements:\n        var inputs = settingsForm.querySelectorAll(\"input\");\n        Array.from(inputs).forEach(function (input) {\n            if (input.type === \"checkbox\") {\n                // checkbox\n                newSettings.push({ key: input.dataset.key, value: input.checked });\n            } else if (input.type === \"radio\") {\n                // radio\n                if (input.checked === true) {\n                    newSettings.push({ key: input.dataset.key, value: input.value });\n                }\n            } else if (input.type === \"number\") {\n                // number\n                newSettings.push({ key: input.dataset.key, value: (input.dataset.numberType === _strings2.default.pref_number_type_integer ? parseInt : parseFloat)(input.value) });\n            } else {\n                // text\n                newSettings.push({ key: input.dataset.key, value: input.value.toString() });\n            }\n        });\n        // <select> elements:\n        var selects = settingsForm.querySelectorAll(\"select\");\n        Array.from(selects).forEach(function (select) {\n            newSettings.push({ key: select.dataset.key, value: select.options[select.selectedIndex].value });\n        });\n        return newSettings;\n    }\n\n    function hideMessage(message) {\n        currentMessages = currentMessages.filter(function (msg) {\n            return msg !== message;\n        });\n        updateMessages(currentMessages);\n    }\n\n    function updateMessages(messages) {\n        if (!(0, _Utilities.isHTMLElement)(messagesContainer)) {\n            (0, _Utilities.logWarning)(\"Cannot update messages because \" + messagesContainer + \" is not an HTML element.\");\n        } else {\n            (0, _Utilities.flush)(messagesContainer);\n            messages.forEach(function (message) {\n                messagesContainer.insertBefore(message.toHTMLElement(), null);\n            });\n        }\n    }\n\n    function clearMessages() {\n        currentMessages = [];\n        updateMessages(currentMessages);\n    }\n\n    function setMessageMode(mode) {\n        (0, _Utilities.log)(\"Setting message mode to \" + mode + \".\");\n        switch (mode) {\n            case _strings2.default.pref_value_hints_warnings_only:\n                messagesContainer.classList.remove(_strings2.default.class_hints_none);\n                messagesContainer.classList.add(_strings2.default.class_hints_warnings_only);\n                break;\n            case _strings2.default.pref_value_hints_none:\n                messagesContainer.classList.remove(_strings2.default.class_hints_warnings_only);\n                messagesContainer.classList.add(_strings2.default.class_hints_none);\n                break;\n            default:\n                messagesContainer.classList.remove(_strings2.default.class_hints_warnings_only);\n                messagesContainer.classList.remove(_strings2.default.class_hints_none);\n        }\n    }\n\n    function updateBoard(board, id, newScore) {\n        if (!(0, _Utilities.isHTMLElement)(board)) {\n            (0, _Utilities.logWarning)(\"Cannot update any entry in \" + board + \" because it is not an HTML element.\");\n        } else {\n            var entry = board.children[id - 1];\n            if (!(0, _Utilities.isHTMLElement)(entry)) {\n                (0, _Utilities.logWarning)(\"Cannot update score of player \" + id + \" because \" + entry + \" is not an HTML element.\");\n            } else {\n                // The entry is an HTML element; let's update it!\n                var digitClassFactory = function digitClassFactory(digit) {\n                    return \"d\" + digit;\n                };\n                var createDigit = function createDigit() {\n                    return document.createElement(\"div\");\n                };\n                // Turn 528 into [\"d5\", \"d2\", \"d8\"]:\n                var newScoreDigitClasses = newScore.toString().split(\"\").map(digitClassFactory);\n                // Remove everything from the entry element before we insert new digits:\n                (0, _Utilities.flush)(entry);\n                entry.classList.add(\"active\");\n                newScoreDigitClasses.forEach(function (digitClass, index) {\n                    var digitElement = createDigit(); // A completely clean element ...\n                    digitElement.classList.add(newScoreDigitClasses[index]); // ... that now has a digit class.\n                    entry.appendChild(digitElement);\n                });\n            }\n        }\n    }\n\n    function updateScoreOfPlayer(id, newScore) {\n        updateBoard(scoreboard, id, newScore);\n        updateBoard(results, id, newScore);\n    }\n\n    return {\n        keyPressed: keyPressed,\n        mouseClicked: mouseClicked,\n        playerReady: playerReady,\n        playerUnready: playerUnready,\n        gameStarted: gameStarted,\n        gameQuit: gameQuit,\n        konecHry: konecHry,\n        showDialog: showDialog,\n        isShowingDialog: isShowingDialog,\n        showSettings: showSettings,\n        hideSettings: hideSettings,\n        isShowingSettings: isShowingSettings,\n        updateSettingsForm: updateSettingsForm,\n        parseSettingsForm: parseSettingsForm,\n        updateScoreOfPlayer: updateScoreOfPlayer,\n        updateMessages: updateMessages,\n        showMessage: showMessage,\n        hideMessage: hideMessage,\n        clearMessages: clearMessages,\n        setMessageMode: setMessageMode,\n        setCursorBehavior: setCursorBehavior,\n        setEdgePadding: setEdgePadding\n    };\n}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Game = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _mainloopMin = __webpack_require__(20);\n\nvar _mainloopMin2 = _interopRequireDefault(_mainloopMin);\n\nvar _Player = __webpack_require__(3);\n\nvar _Round = __webpack_require__(16);\n\nvar _Utilities = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Game = exports.Game = function () {\n    function Game(config, renderer, guiController) {\n        _classCallCheck(this, Game);\n\n        // Class variables:\n        this.constructor.PRACTICE = \"practice\";\n        this.constructor.COMPETITIVE = \"competitive\";\n        this.constructor.DEFAULT_MODE = this.constructor.PRACTICE;\n        this.constructor.DEFAULT_TARGET_SCORE = 10;\n        this.constructor.MAX_TARGET_SCORE = 1000;\n        this.constructor.MAX_PLAYERS = 255; // since we use a Uint8Array\n        this.constructor.MAX_QUOTA_THAT_SPAWN_CIRCLES_MAY_FILL = 0.5; // out of available spawn area\n        this.constructor.DESIRED_MINIMUM_SPAWN_DISTANCE_TURNING_RADIUS_FACTOR = 1;\n        this.constructor.KONEC_HRY = \"KONEC HRY!\";\n\n        if (renderer === undefined) {\n            throw new TypeError(\"Cannot create a Game with no renderer.\");\n        } else if (!this.constructor.isRenderer(renderer)) {\n            throw new TypeError(renderer + \" is not a valid renderer.\");\n        }\n\n        if (guiController === undefined) {\n            throw new TypeError(\"Cannot create a Game with no GUI controller.\");\n        } else if (!this.constructor.isGUIController(guiController)) {\n            throw new TypeError(guiController + \" is not a valid GUI controller.\");\n        }\n\n        // Instance variables:\n        this.config = config;\n        this.width = config.canvas.width;\n        this.height = config.canvas.height;\n        this.pixels = null; // The actual array is created in start(), because the canvas width and height may have changed by then.\n        this.players = [];\n        this.rounds = [];\n        this.renderer = renderer;\n        this.guiController = guiController;\n        this.mode = this.constructor.DEFAULT_MODE;\n        this.preventSpawnkill = config.preventSpawnkill;\n        this.totalNumberOfTicks = 0;\n        this.targetScore = null;\n        this.initMainLoop();\n        this.started = false;\n        this.ended = false;\n        this.proceedHintTimer = null;\n        this.quitHintTimer = null;\n    }\n\n    _createClass(Game, [{\n        key: \"edgeOfSquare\",\n        value: function edgeOfSquare(coordinate) {\n            return Math.round(coordinate - this.config.thickness / 2);\n        }\n    }, {\n        key: \"maxPlayers\",\n        value: function maxPlayers() {\n            return this.constructor.MAX_PLAYERS;\n        }\n    }, {\n        key: \"maxTicksBetweenDraws\",\n        value: function maxTicksBetweenDraws() {\n            return Math.max(Math.floor(this.config.tickrate / this.config.speed), 1);\n        }\n\n        // Computes the angle change for one tick when turning, in radians:\n\n    }, {\n        key: \"computeAngleChange\",\n        value: function computeAngleChange() {\n            return this.config.speed / (this.config.tickrate * this.config.turningRadius);\n        }\n    }, {\n        key: \"computeSpawnArea\",\n        value: function computeSpawnArea() {\n            return {\n                x_min: this.config.spawnMargin,\n                y_min: this.config.spawnMargin,\n                x_max: this.width - this.config.spawnMargin,\n                y_max: this.height - this.config.spawnMargin\n            };\n        }\n    }, {\n        key: \"computeFrontCornerPixel\",\n        value: function computeFrontCornerPixel(edge, dir) {\n            var t = this.config.thickness;\n            var cf = 100;\n            return (cf * edge + cf * (t - 1) / 2 + cf * dir * (t - 1) / 2) / cf;\n        }\n    }, {\n        key: \"computeFrontEdgePixel\",\n        value: function computeFrontEdgePixel(edge, dir_parallel, dir_perpendicular, i) {\n            var t = this.config.thickness;\n            return edge + Math.abs(dir_parallel) * (t - 1) / 2 + dir_parallel * (t - 1) / 2 + Math.abs(dir_perpendicular) * i;\n        }\n    }, {\n        key: \"computeHitbox\",\n        value: function computeHitbox(player, left, top) {\n            var hitboxPixels = [];\n            var lastPosition = player.getLastPosition();\n            var dir_horizontal = left - lastPosition.left; // positive => going right; negative => going left\n            var dir_vertical = top - lastPosition.top; // positive => going down;  negative => going up\n            if ((0, _Utilities.sameAbs)(dir_horizontal, dir_vertical)) {\n                // \"45 degree\" draw\n                var frontPixel_left = this.computeFrontCornerPixel(left, dir_horizontal);\n                var frontPixel_top = this.computeFrontCornerPixel(top, dir_vertical);\n                hitboxPixels.push(this.pixelAddress(frontPixel_left, frontPixel_top));\n            } else {\n                // \"90 degree\" draw\n                for (var i = 0; i < this.config.thickness; i++) {\n                    var _frontPixel_left = this.computeFrontEdgePixel(left, dir_horizontal, dir_vertical, i);\n                    var _frontPixel_top = this.computeFrontEdgePixel(top, dir_vertical, dir_horizontal, i);\n                    hitboxPixels.push(this.pixelAddress(_frontPixel_left, _frontPixel_top));\n                }\n            }\n            return hitboxPixels;\n        }\n    }, {\n        key: \"desiredMinimumSpawnDistance\",\n        value: function desiredMinimumSpawnDistance() {\n            // to closest opponent\n            // This is calculated by multiplying the turning radius with a constant factor and then adding the Kurve thickness.\n            var turningRadiusPart = this.config.turningRadius * this.constructor.DESIRED_MINIMUM_SPAWN_DISTANCE_TURNING_RADIUS_FACTOR;\n            return (0, _Utilities.round)(this.config.thickness + turningRadiusPart, 2);\n        }\n    }, {\n        key: \"safeMinimumSpawnDistance\",\n        value: function safeMinimumSpawnDistance() {\n            // to closest opponent, without risking infinite or too much sampling\n            var spawnAreaCoordinates = this.computeSpawnArea();\n            var availableSpawnArea = (spawnAreaCoordinates.x_max - spawnAreaCoordinates.x_min) * (spawnAreaCoordinates.y_max - spawnAreaCoordinates.y_min);\n            var maximumSafeDistance = Math.sqrt(this.constructor.MAX_QUOTA_THAT_SPAWN_CIRCLES_MAY_FILL * availableSpawnArea / (this.getNumberOfPlayers() * Math.PI));\n            return Math.min(this.desiredMinimumSpawnDistance(), (0, _Utilities.round)(maximumSafeDistance, 2));\n        }\n    }, {\n        key: \"isSafeSpawnPosition\",\n        value: function isSafeSpawnPosition(pos) {\n            function distanceBetween(pos1, pos2) {\n                return Math.sqrt(Math.pow(pos2.x - pos1.x, 2) + Math.pow(pos2.y - pos1.y, 2));\n            }\n            for (var i = 0; i < this.players.length; i++) {\n                var playerPos = { x: this.players[i].x, y: this.players[i].y };\n                if (distanceBetween(playerPos, pos) < this.safeMinimumSpawnDistance()) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }, {\n        key: \"safeSpawnPosition\",\n        value: function safeSpawnPosition() {\n            var safePos = void 0;\n            do {\n                safePos = this.randomSpawnPosition();\n            } while (!this.isSafeSpawnPosition(safePos));\n            return safePos;\n        }\n    }, {\n        key: \"randomSpawnPosition\",\n        value: function randomSpawnPosition() {\n            var spawnArea = this.computeSpawnArea();\n            return {\n                x: (0, _Utilities.randomFloat)(spawnArea.x_min, spawnArea.x_max),\n                y: (0, _Utilities.randomFloat)(spawnArea.y_min, spawnArea.y_max)\n            };\n        }\n    }, {\n        key: \"randomSpawnAngle\",\n        value: function randomSpawnAngle() {\n            return (0, _Utilities.randomFloat)(this.config.minSpawnAngle, this.config.maxSpawnAngle);\n        }\n    }, {\n        key: \"pixelAddress\",\n        value: function pixelAddress(x, y) {\n            return y * this.width + x;\n        }\n    }, {\n        key: \"pixelAddressToCoordinates\",\n        value: function pixelAddressToCoordinates(addr) {\n            var x = addr % this.width;\n            var y = (addr - x) / this.width;\n            return \"(\" + x + \", \" + y + \")\";\n        }\n\n        // GETTERS\n\n    }, {\n        key: \"getMode\",\n        value: function getMode() {\n            return this.mode;\n        }\n    }, {\n        key: \"getTargetScore\",\n        value: function getTargetScore() {\n            return this.targetScore;\n        }\n    }, {\n        key: \"getPlayers\",\n        value: function getPlayers() {\n            return this.players;\n        }\n\n        // Returns the player with the specified ID, or undefined if no such player exists:\n\n    }, {\n        key: \"getPlayerByID\",\n        value: function getPlayerByID(id) {\n            return this.players.find(function (player) {\n                return player.hasID(id);\n            });\n        }\n    }, {\n        key: \"getLivePlayers\",\n        value: function getLivePlayers() {\n            var isAlive = this.constructor.isAlive;\n            return this.players.filter(isAlive);\n        }\n    }, {\n        key: \"getNumberOfPlayers\",\n        value: function getNumberOfPlayers() {\n            return this.players.length;\n        }\n    }, {\n        key: \"getNumberOfLivePlayers\",\n        value: function getNumberOfLivePlayers() {\n            return this.getLivePlayers().length;\n        }\n    }, {\n        key: \"getScoreOfPlayer\",\n        value: function getScoreOfPlayer(id) {\n            var accumulateScore = function accumulateScore(sum, round) {\n                return sum + round.getSuccessOfPlayer(id);\n            };\n            return this.rounds.reduce(accumulateScore, 0);\n        }\n    }, {\n        key: \"getCurrentRound\",\n        value: function getCurrentRound() {\n            return this.rounds[this.rounds.length - 1];\n        }\n\n        // SETTERS\n\n    }, {\n        key: \"setMode\",\n        value: function setMode(mode) {\n            if (mode === this.constructor.COMPETITIVE || mode === this.constructor.PRACTICE) {\n                (0, _Utilities.log)(\"Setting game mode to \" + mode + \".\");\n                this.mode = mode;\n            } else {\n                (0, _Utilities.logError)(mode + \" is not a valid game mode. Keeping \" + this.getMode() + \".\");\n            }\n        }\n    }, {\n        key: \"setTargetScore\",\n        value: function setTargetScore(score) {\n            var ts = this.constructor.DEFAULT_TARGET_SCORE;\n            var mts = this.constructor.MAX_TARGET_SCORE;\n            // Neither floats nor negative numbers are allowed:\n            if ((0, _Utilities.isInt)(score) && score > 0) {\n                // Check if the desired target score is allowed:\n                if (score > mts) {\n                    // It is too high. Fall back to max value:\n                    (0, _Utilities.logWarning)(score + \" is larger than the maximum allowed target score of \" + mts + \". Falling back to \" + mts + \".\");\n                    ts = mts;\n                } else {\n                    // The desired target score is OK!\n                    (0, _Utilities.log)(\"Setting target score to \" + score + \".\");\n                    ts = score;\n                }\n            } else {\n                (0, _Utilities.logWarning)(score + \" is not a valid target score. Defaulting to \" + ts + \".\");\n            }\n            this.targetScore = ts;\n        }\n    }, {\n        key: \"setSize\",\n        value: function setSize(width, height) {\n            this.width = width;\n            this.height = height;\n            this.renderer.setSize(width, height);\n        }\n    }, {\n        key: \"setPreventSpawnkill\",\n        value: function setPreventSpawnkill(mode) {\n            this.preventSpawnkill = mode;\n        }\n\n        // CHECKERS\n\n    }, {\n        key: \"isStarted\",\n        value: function isStarted() {\n            return this.started;\n        }\n    }, {\n        key: \"isEnded\",\n        value: function isEnded() {\n            return this.ended;\n        }\n\n        /** Returns true if a round is over (including when KONEC HRY is being shown). */\n\n    }, {\n        key: \"isPostRound\",\n        value: function isPostRound() {\n            return this.getCurrentRound().getResults().length === this.getNumberOfPlayers();\n        }\n    }, {\n        key: \"isLive\",\n        value: function isLive() {\n            if (this.isCompetitive()) {\n                return this.getNumberOfLivePlayers() > 1;\n            } else {\n                return this.getNumberOfLivePlayers() > 0;\n            }\n        }\n\n        // Caution: Returns true if called during the spawn procedure, since it only checks whether the game is live or not.\n\n    }, {\n        key: \"isRoundOver\",\n        value: function isRoundOver() {\n            return !this.isLive();\n        }\n    }, {\n        key: \"isGameOver\",\n        value: function isGameOver() {\n            var _this = this;\n\n            var hasReachedTargetScore = function hasReachedTargetScore(player) {\n                return _this.getScoreOfPlayer(player.getID()) >= _this.getTargetScore();\n            };\n            return !this.isLive() && this.isCompetitive() && this.players.some(hasReachedTargetScore);\n        }\n    }, {\n        key: \"isCompetitive\",\n        value: function isCompetitive() {\n            return this.getMode() === this.constructor.COMPETITIVE;\n        }\n    }, {\n        key: \"isOccupiedPixelAddress\",\n        value: function isOccupiedPixelAddress(addr) {\n            return this.pixels[addr] > 0;\n        }\n    }, {\n        key: \"isCrashing\",\n        value: function isCrashing(player, left, top) {\n            var hitboxPixels = this.computeHitbox(player, left, top);\n            return hitboxPixels.some(this.isOccupiedPixelAddress, this);\n        }\n\n        /**\r\n         * Checks whether a draw at the specified coordinates is inside the field.\r\n         * @param {Number} left The x coordinate of the left edge of the draw.\r\n         * @param {Number} top  The y coordinate of the top edge of the draw.\r\n         */\n\n    }, {\n        key: \"isOnField\",\n        value: function isOnField(left, top) {\n            return left >= 0 && top >= 0 && left + this.config.thickness <= this.width && top + this.config.thickness <= this.height;\n        }\n\n        /** \r\n         * Checks whether there is a player with a specific ID in the game.\r\n         * @param {Number} id The ID to check for.\r\n         */\n\n    }, {\n        key: \"hasPlayer\",\n        value: function hasPlayer(id) {\n            return _Player.Player.isPlayer(this.getPlayerByID(id));\n        }\n\n        // DOERS\n\n        /** \r\n         * Adds a player to the game.\r\n         * @param {Player} player The player to add.\r\n         */\n\n    }, {\n        key: \"addPlayer\",\n        value: function addPlayer(player) {\n            var maxPlayers = this.maxPlayers();\n            if (!_Player.Player.isPlayer(player)) {\n                throw new TypeError(\"Cannot add \" + player + \" to the game because it is not a player.\");\n            } else if (player.getID() > maxPlayers) {\n                throw new RangeError(\"Cannot add \" + player + \" to the game because player IDs larger than \" + maxPlayers + \" are not supported.\");\n            } else if (this.hasPlayer(player.getID())) {\n                (0, _Utilities.logWarning)(\"Not adding \" + player + \" to the game because there is already a player with ID \" + player.getID() + \".\");\n            } else {\n                (0, _Utilities.log)(player + \" ready!\");\n                this.players.push(player);\n                player.setMaxSpeed(this.config.speed);\n                this.GUI_playerReady(player.getID());\n            }\n        }\n\n        /** \r\n         * Removes a player from the game.\r\n         * @param {Number} id The ID of the player to remove.\r\n         */\n\n    }, {\n        key: \"removePlayer\",\n        value: function removePlayer(id) {\n            var playerToRemove = this.getPlayerByID(id);\n            // Notify GUI iff the player exists:\n            if (_Player.Player.isPlayer(playerToRemove)) {\n                (0, _Utilities.log)(playerToRemove + \" unready!\");\n                this.GUI_playerUnready(id);\n            }\n            // Update this.players:\n            this.players = this.players.filter(function (player) {\n                return player !== playerToRemove;\n            });\n        }\n\n        /** Starts the game. */\n\n    }, {\n        key: \"start\",\n        value: function start() {\n            var _this2 = this;\n\n            if (this.isCompetitive()) {\n                this.setTargetScore(this.constructor.calculateTargetScore(this.getNumberOfPlayers()));\n                this.players.forEach(function (player) {\n                    _this2.GUI_updateScoreOfPlayer(player.getID(), 0);\n                });\n            }\n            (0, _Utilities.log)(\"Starting game!\");\n            this.GUI_gameStarted();\n            _mainloopMin2.default.start();\n            this.started = true;\n            this.pixels = new Uint8Array(this.width * this.height);\n            this.beginNewRound();\n        }\n\n        /** Announce KONEC HRY, show results etc. */\n\n    }, {\n        key: \"konecHry\",\n        value: function konecHry() {\n            (0, _Utilities.log)(this.constructor.KONEC_HRY);\n            this.ended = true;\n            this.GUI_konecHry();\n            this.quitHintTimer = setTimeout(this.showQuitHint.bind(this), this.config.hintDelay);\n        }\n    }, {\n        key: \"quit\",\n        value: function quit() {\n            clearTimeout(this.quitHintTimer);\n            clearTimeout(this.proceedHintTimer);\n        }\n    }, {\n        key: \"clearField\",\n        value: function clearField() {\n            this.pixels.fill(0);\n            this.Render_clearField();\n        }\n    }, {\n        key: \"showProceedHint\",\n        value: function showProceedHint() {\n            this.GUI_showMessage(this.config.messages.next);\n        }\n    }, {\n        key: \"hideProceedHint\",\n        value: function hideProceedHint() {\n            clearTimeout(this.proceedHintTimer);\n            this.GUI_hideMessage(this.config.messages.next);\n        }\n    }, {\n        key: \"showQuitHint\",\n        value: function showQuitHint() {\n            this.GUI_showMessage(this.config.messages.quit);\n        }\n    }, {\n        key: \"hideQuitHint\",\n        value: function hideQuitHint() {\n            clearTimeout(this.quitHintTimer);\n            this.GUI_hideMessage(this.config.messages.quit);\n        }\n    }, {\n        key: \"beginNewRound\",\n        value: function beginNewRound() {\n            this.rounds.push(new _Round.Round());\n            (0, _Utilities.log)(\"======== ROUND \" + this.rounds.length + \" ========\");\n            this.resetPlayers();\n            this.clearField();\n            // Sort the players by their IDs so they spawn in the correct order:\n            this.sortPlayers();\n            this.spawnAndStartPlayers();\n        }\n    }, {\n        key: \"endRound\",\n        value: function endRound() {\n            this.stopPlayers();\n            this.proceedHintTimer = setTimeout(this.showProceedHint.bind(this), this.config.hintDelay);\n        }\n    }, {\n        key: \"sortPlayers\",\n        value: function sortPlayers() {\n            this.players.sort(function (a, b) {\n                return a.getID() - b.getID();\n            });\n        }\n    }, {\n        key: \"startPlayer\",\n        value: function startPlayer(player) {\n            player.start();\n        }\n    }, {\n        key: \"stopPlayer\",\n        value: function stopPlayer(player) {\n            player.stop();\n        }\n    }, {\n        key: \"resetPlayer\",\n        value: function resetPlayer(player) {\n            player.reset();\n        }\n\n        /** Starts all players. */\n\n    }, {\n        key: \"startPlayers\",\n        value: function startPlayers() {\n            this.players.forEach(this.startPlayer);\n        }\n    }, {\n        key: \"stopPlayers\",\n        value: function stopPlayers() {\n            this.players.forEach(this.stopPlayer);\n        }\n    }, {\n        key: \"resetPlayers\",\n        value: function resetPlayers() {\n            this.players.forEach(this.resetPlayer);\n        }\n    }, {\n        key: \"occupyPixel\",\n        value: function occupyPixel(x, y, id) {\n            this.pixels[this.pixelAddress(x, y)] = id;\n        }\n    }, {\n        key: \"occupy\",\n        value: function occupy(player, left, top) {\n            var right = left + this.config.thickness;\n            var bottom = top + this.config.thickness;\n            var id = player.getID();\n            (0, _Utilities.forfor)(top, bottom, left, right, this.occupyPixel.bind(this), id);\n            this.Render_drawSquare(left, top, player.getColor());\n        }\n    }, {\n        key: \"flicker\",\n        value: function flicker(player) {\n            var _this3 = this;\n\n            var stopFlickering = function stopFlickering() {\n                clearInterval(flickerTicker);\n                var left = _this3.edgeOfSquare(player.x);\n                var top = _this3.edgeOfSquare(player.y);\n                _this3.Render_drawSquare(left, top, player.getColor());\n            };\n            var self = this;\n            var left = this.edgeOfSquare(player.x);\n            var top = this.edgeOfSquare(player.y);\n            var color = player.getColor();\n            var isVisible = false;\n            var flickerTicker = setInterval(function () {\n                if (isVisible) {\n                    _this3.Render_clearSquare(left, top);\n                } else {\n                    _this3.Render_drawSquare(left, top, color);\n                }\n                isVisible = !isVisible;\n            }, 1000 / this.config.flickerFrequency);\n            setTimeout(stopFlickering, self.config.flickerDuration);\n        }\n    }, {\n        key: \"spawn\",\n        value: function spawn(player, position, direction) {\n            (0, _Utilities.log)(player + \" spawning at (\" + (0, _Utilities.round)(position.x, 2) + \", \" + (0, _Utilities.round)(position.y, 2) + \").\");\n            player.x = position.x;\n            player.y = position.y;\n            player.direction = direction;\n            var left = this.edgeOfSquare(player.x);\n            var top = this.edgeOfSquare(player.y);\n            player.beAt(left, top);\n            this.occupy(player, left, top);\n            this.flicker(player);\n        }\n\n        /** Spawns and then starts all players. */\n\n    }, {\n        key: \"spawnAndStartPlayers\",\n        value: function spawnAndStartPlayers() {\n            var self = this;\n            (0, _Utilities.log)(\"Spawnkill prevention is \" + (this.preventSpawnkill ? \"enabled. No two players will spawn within \" + self.safeMinimumSpawnDistance() + \" Kuxels of each other.\" : \"disabled. Players may spawn arbitrarily close to each other.\"));\n            // Spawn each player, then wait for it to finish flickering before spawning the next one:\n            (function spawnPlayer(i) {\n                if (i < self.players.length) {\n                    var spawnPosition = self.preventSpawnkill ? self.safeSpawnPosition() : self.randomSpawnPosition();\n                    self.spawn(self.players[i], spawnPosition, self.randomSpawnAngle());\n                    setTimeout(function () {\n                        return spawnPlayer(++i);\n                    }, self.config.flickerDuration);\n                } else {\n                    // All players have spawned. Start them!\n                    self.startPlayers();\n                }\n            })(0);\n        }\n\n        /**\r\n         * Draws a specific player.\r\n         */\n\n    }, {\n        key: \"drawPlayer\",\n        value: function drawPlayer(player) {\n            var thickness = this.config.thickness;\n            while (player.isAlive() && !player.queuedDraws.isEmpty()) {\n                var color = player.getColor();\n                var lastPosition = player.getLastPosition();\n                var currentDraw = player.queuedDraws.dequeue();\n                var left = this.edgeOfSquare(currentDraw.x);\n                var top = this.edgeOfSquare(currentDraw.y);\n                if (!player.justWasAt(left, top)) {\n                    // The new position is not identical to the last one.\n                    var diff_left = left - player.getLastPosition().left;\n                    var diff_top = top - player.getLastPosition().top;\n                    if (!this.isOnField(left, top)) {\n                        // The player wants to draw outside the playing field => DIE.\n                        this.death(player, \"crashed into the wall\");\n                        this.occupy(player, lastPosition.left, lastPosition.top);\n                    } else if (this.isCrashing(player, left, top)) {\n                        // The player wants to draw on a spot occupied by a Kurve => DIE.\n                        this.death(player, \"crashed\");\n                        this.occupy(player, lastPosition.left, lastPosition.top);\n                    } else {\n                        // The player is not dying.\n                        player.beAt(left, top);\n                        if (!player.isHoly()) {\n                            // The player is not holy, so it should draw.\n                            this.occupy(player, left, top);\n                        }\n                    }\n                }\n            }\n        }\n    }, {\n        key: \"drawHead\",\n        value: function drawHead(player) {\n            if (player.isAlive()) {\n                var lastPosition = player.getLastPosition();\n                var left = lastPosition.left;\n                var top = lastPosition.top;\n                var color = player.getColor();\n                this.Render_drawHead(left, top, color);\n            }\n        }\n    }, {\n        key: \"updateGUIScoreboard\",\n        value: function updateGUIScoreboard() {\n            var _this4 = this;\n\n            var updateScore = function updateScore(player) {\n                var id = player.getID();\n                _this4.GUI_updateScoreOfPlayer(id, _this4.getScoreOfPlayer(id));\n            };\n            this.getLivePlayers().forEach(updateScore);\n        }\n    }, {\n        key: \"death\",\n        value: function death(player, cause) {\n            player.die(cause);\n            this.getCurrentRound().add(player);\n            this.updateGUIScoreboard();\n            if (this.isRoundOver()) {\n                if (this.isCompetitive()) {\n                    var isAlive = this.constructor.isAlive;\n                    var winner = this.players.find(isAlive);\n                    this.winRound(winner);\n                }\n                this.endRound();\n            }\n        }\n    }, {\n        key: \"winRound\",\n        value: function winRound(player) {\n            (0, _Utilities.log)(player + \" won the round.\");\n            // Ugly fix for the bug where the winner's head disappears when the round ends:\n            this.occupy(player, this.edgeOfSquare(player.x), this.edgeOfSquare(player.y));\n            this.getCurrentRound().add(player);\n        }\n    }, {\n        key: \"proceedKeyPressed\",\n        value: function proceedKeyPressed() {\n            this.hideProceedHint();\n            this.hideQuitHint();\n            if (this.isGameOver()) {\n                // The game is over, so we should show KONEC HRY:\n                this.konecHry();\n            } else if (this.isPostRound()) {\n                // We are post round and the game is not over, so we should proceed to the next round:\n                this.beginNewRound();\n            }\n        }\n    }, {\n        key: \"shouldShowReloadConfirmationOnReloadKey\",\n        value: function shouldShowReloadConfirmationOnReloadKey() {\n            return this.isPostRound();\n        }\n    }, {\n        key: \"shouldQuitOnQuitKey\",\n        value: function shouldQuitOnQuitKey() {\n            return this.isPostRound() && !this.isGameOver();\n        }\n    }, {\n        key: \"shouldQuitOnProceedKey\",\n        value: function shouldQuitOnProceedKey() {\n            return this.isEnded();\n        }\n\n        // RENDERER AND GUI CONTROLLER COMMUNICATION\n\n    }, {\n        key: \"GUI_playerReady\",\n        value: function GUI_playerReady(id) {\n            this.guiController.playerReady(id);\n        }\n    }, {\n        key: \"GUI_playerUnready\",\n        value: function GUI_playerUnready(id) {\n            this.guiController.playerUnready(id);\n        }\n    }, {\n        key: \"GUI_updateScoreOfPlayer\",\n        value: function GUI_updateScoreOfPlayer(id, newScore) {\n            this.guiController.updateScoreOfPlayer(id, newScore);\n        }\n    }, {\n        key: \"GUI_gameStarted\",\n        value: function GUI_gameStarted() {\n            this.guiController.gameStarted();\n        }\n    }, {\n        key: \"GUI_konecHry\",\n        value: function GUI_konecHry() {\n            this.guiController.konecHry();\n        }\n    }, {\n        key: \"GUI_showMessage\",\n        value: function GUI_showMessage(message) {\n            this.guiController.showMessage(message);\n        }\n    }, {\n        key: \"GUI_hideMessage\",\n        value: function GUI_hideMessage(message) {\n            this.guiController.hideMessage(message);\n        }\n    }, {\n        key: \"Render_drawSquare\",\n        value: function Render_drawSquare(left, top, color) {\n            this.renderer.drawSquare(left, top, this.config.thickness, color);\n        }\n    }, {\n        key: \"Render_drawHead\",\n        value: function Render_drawHead(left, top, color) {\n            this.renderer.drawSquare_overlay(left, top, this.config.thickness, color);\n        }\n    }, {\n        key: \"Render_clearSquare\",\n        value: function Render_clearSquare(left, top) {\n            this.renderer.clearSquare(left, top, this.config.thickness);\n        }\n    }, {\n        key: \"Render_clearHeads\",\n        value: function Render_clearHeads() {\n            this.renderer.clearRectangle_overlay(0, 0, this.width, this.height);\n        }\n    }, {\n        key: \"Render_clearField\",\n        value: function Render_clearField() {\n            this.renderer.clearRectangle(0, 0, this.width, this.height);\n            this.renderer.clearRectangle_overlay(0, 0, this.width, this.height);\n        }\n\n        // MAIN LOOP\n\n\n    }, {\n        key: \"updatePlayer\",\n        value: function updatePlayer(player, delta) {\n            if (player.isAlive()) {\n                var angleChange = this.computeAngleChange();\n                var direction = player.getDirection();\n                if (player.isPressingLeft()) {\n                    direction = direction + angleChange; // let compound assignment not optimizable in V8\n                }\n                if (player.isPressingRight()) {\n                    direction = direction - angleChange; // let compound assignment not optimizable in V8\n                }\n                // We use normalizeAngle so the angle stays in the interval -pi < dir <= pi:\n                player.setDirection((0, _Utilities.normalizeAngle)(direction));\n                var theta = player.getVelocity() * delta / 1000;\n                player.x += theta * Math.cos(player.direction);\n                player.y -= theta * Math.sin(player.direction);\n            }\n        }\n\n        /**\r\n         * Updates everything on each tick.\r\n         * @param {Number} delta\r\n         *   The amount of time since the last update, in seconds.\r\n         */\n\n    }, {\n        key: \"update\",\n        value: function update(delta) {\n            var _this5 = this;\n\n            this.players.forEach(function (player) {\n                _this5.updatePlayer(player, delta);\n            });\n            if (this.totalNumberOfTicks % this.maxTicksBetweenDraws() === 0) {\n                this.getLivePlayers().forEach(function (player) {\n                    player.enqueueDraw();\n                });\n            }\n            this.totalNumberOfTicks++;\n            // Cycle players so the players take turns being prioritized:\n            if (this.isLive()) {\n                this.players.unshift(this.players.pop());\n            }\n        }\n\n        /**\r\n         * Draws all players.\r\n         */\n\n    }, {\n        key: \"draw\",\n        value: function draw() {\n            this.Render_clearHeads();\n            this.players.forEach(this.drawPlayer, this);\n            this.players.forEach(this.drawHead, this);\n        }\n\n        /**\r\n         * Updates the FPS counter etc.\r\n         * @param {Number} framerate\r\n         *   The smoothed frames per second.\r\n         * @param {Boolean} panic\r\n         *   Whether the main loop panicked because the simulation fell too far behind real time.\r\n         */\n\n    }, {\n        key: \"end\",\n        value: function end(framerate, panic) {\n            if (panic) {\n                var discardedTime = Math.round(_mainloopMin2.default.resetFrameDelta());\n                console.warn(\"Main loop panicked. Discarding \" + discardedTime + \"ms.\");\n            }\n        }\n\n        /**\r\n         * Initiates the main loop.\r\n         */\n\n    }, {\n        key: \"initMainLoop\",\n        value: function initMainLoop() {\n            this.MainLoop = _mainloopMin2.default;\n            this.MainLoop.setUpdate(this.update.bind(this)).setDraw(this.draw.bind(this)).setEnd(this.end.bind(this)).setSimulationTimestep(1000 / this.config.tickrate).setMaxAllowedFPS(this.config.maxFramerate);\n        }\n    }], [{\n        key: \"isRenderer\",\n        value: function isRenderer(obj) {\n            // TODO\n            return obj !== undefined;\n        }\n    }, {\n        key: \"isGUIController\",\n        value: function isGUIController(obj) {\n            // TODO\n            return obj !== undefined;\n        }\n    }, {\n        key: \"isAlive\",\n        value: function isAlive(player) {\n            return player.isAlive();\n        }\n    }, {\n        key: \"calculateTargetScore\",\n        value: function calculateTargetScore(numberOfPlayers) {\n            // Default target score is (n-1) * 10 for n players:\n            return (numberOfPlayers - 1) * 10;\n        }\n    }]);\n\n    return Game;\n}();\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Renderer = Renderer;\nfunction Renderer(mainCanvas, overlayCanvas) {\n\n    var context_main = mainCanvas.getContext(\"2d\");\n    var context_overlay = overlayCanvas.getContext(\"2d\");\n\n    // PRIVATE FUNCTIONS:\n\n    function _drawRectangle(context, left, top, width, height, color) {\n        context.fillStyle = color;\n        context.fillRect(left, top, width, height);\n    }\n\n    function _clearRectangle(context, left, top, width, height) {\n        context.clearRect(left, top, width, height);\n    }\n\n    function _setSize(canvas, width, height) {\n        canvas.width = width;\n        canvas.height = height;\n    }\n\n    // PUBLIC API:\n\n    function setSize(width, height) {\n        _setSize(mainCanvas, width, height);\n        _setSize(overlayCanvas, width, height);\n    }\n\n    // Main canvas:\n\n    function drawSquare(left, top, size, color) {\n        _drawRectangle(context_main, left, top, size, size, color);\n    }\n\n    function clearSquare(left, top, size) {\n        _clearRectangle(context_main, left, top, size, size);\n    }\n\n    function clearRectangle(left, top, width, height) {\n        _clearRectangle(context_main, left, top, width, height);\n    }\n\n    // Overlay canvas:\n\n    function drawSquare_overlay(left, top, size, color) {\n        _drawRectangle(context_overlay, left, top, size, size, color);\n    }\n\n    function clearSquare_overlay(left, top, size) {\n        _clearRectangle(context_overlay, left, top, size, size);\n    }\n\n    function clearRectangle_overlay(left, top, width, height) {\n        _clearRectangle(context_overlay, left, top, width, height);\n    }\n\n    return {\n        drawSquare: drawSquare,\n        clearSquare: clearSquare,\n        clearRectangle: clearRectangle,\n        drawSquare_overlay: drawSquare_overlay,\n        clearSquare_overlay: clearSquare_overlay,\n        clearRectangle_overlay: clearRectangle_overlay,\n        setSize: setSize\n    };\n}\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Round = exports.Round = function () {\n    function Round(players) {\n        _classCallCheck(this, Round);\n\n        // A list of the players in the order they died (winner also included):\n        this.results = [];\n    }\n\n    _createClass(Round, [{\n        key: \"add\",\n        value: function add(player) {\n            this.results.push(player);\n        }\n    }, {\n        key: \"getSuccessOfPlayer\",\n        value: function getSuccessOfPlayer(id) {\n            for (var i = 0; i < this.results.length; i++) {\n                if (this.results[i].hasID(id)) {\n                    return i;\n                }\n            }\n            return this.results.length;\n        }\n    }, {\n        key: \"getResults\",\n        value: function getResults() {\n            return this.results;\n        }\n    }]);\n\n    return Round;\n}();\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InfoMessage = undefined;\n\nvar _Message2 = __webpack_require__(6);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar InfoMessage = exports.InfoMessage = function (_Message) {\n    _inherits(InfoMessage, _Message);\n\n    function InfoMessage(text) {\n        _classCallCheck(this, InfoMessage);\n\n        return _possibleConstructorReturn(this, (InfoMessage.__proto__ || Object.getPrototypeOf(InfoMessage)).call(this, text, \"info\"));\n    }\n\n    return InfoMessage;\n}(_Message2.Message);\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Queue = Queue;\n//code.stephenmorley.org\nfunction Queue() {\n  var a = [],\n      b = 0;this.getLength = function () {\n    return a.length - b;\n  };this.hasItem = function (i) {\n    return a.indexOf(i) !== -1;\n  };this.isEmpty = function () {\n    return 0 === a.length;\n  };this.enqueue = function (b) {\n    a.push(b);\n  };this.dequeue = function () {\n    if (0 !== a.length) {\n      var c = a[b];2 * ++b >= a.length && (a = a.slice(b), b = 0);return c;\n    }\n  };this.peek = function () {\n    return 0 < a.length ? a[b] : void 0;\n  };\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.WarningMessage = undefined;\n\nvar _Message2 = __webpack_require__(6);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WarningMessage = exports.WarningMessage = function (_Message) {\n    _inherits(WarningMessage, _Message);\n\n    function WarningMessage(text) {\n        _classCallCheck(this, WarningMessage);\n\n        return _possibleConstructorReturn(this, (WarningMessage.__proto__ || Object.getPrototypeOf(WarningMessage)).call(this, text, \"warning\"));\n    }\n\n    return WarningMessage;\n}(_Message2.Message);\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * mainloop.js 1.0.1-20150816\r\n *\r\n * @author Isaac Sukin (http://www.isaacsukin.com/)\r\n * @license MIT\r\n */\n\nexports.default = !function (a) {\n  function b(a) {\n    if (e + j > a) return u = n(b), void 0;for (d += a - e, e = a, q(a, d), a > g + 1e3 && (f = .25 * h + .75 * f, g = a, h = 0), h++, i = 0; d >= c;) {\n      if (r(c), d -= c, ++i >= 240) {\n        m = !0;break;\n      }\n    }s(d / c), t(f, m), m = !1, u = n(b);\n  }var c = 1e3 / 60,\n      d = 0,\n      e = 0,\n      f = 60,\n      g = 0,\n      h = 0,\n      i = 0,\n      j = 0,\n      k = !1,\n      l = !1,\n      m = !1,\n      n = a.requestAnimationFrame || function () {\n    var a = Date.now(),\n        b,\n        d;return function (e) {\n      return b = Date.now(), d = Math.max(0, c - (b - a)), a = b + d, setTimeout(function () {\n        e(b + d);\n      }, d);\n    };\n  }(),\n      o = a.cancelAnimationFrame || clearTimeout,\n      p = function p() {},\n      q = p,\n      r = p,\n      s = p,\n      t = p,\n      u;a.MainLoop = { getSimulationTimestep: function getSimulationTimestep() {\n      return c;\n    }, setSimulationTimestep: function setSimulationTimestep(a) {\n      return c = a, this;\n    }, getFPS: function getFPS() {\n      return f;\n    }, getMaxAllowedFPS: function getMaxAllowedFPS() {\n      return 1e3 / j;\n    }, setMaxAllowedFPS: function setMaxAllowedFPS(a) {\n      return \"undefined\" == typeof a && (a = 1 / 0), 0 === a ? this.stop() : j = 1e3 / a, this;\n    }, resetFrameDelta: function resetFrameDelta() {\n      var a = d;return d = 0, a;\n    }, setBegin: function setBegin(a) {\n      return q = a || q, this;\n    }, setUpdate: function setUpdate(a) {\n      return r = a || r, this;\n    }, setDraw: function setDraw(a) {\n      return s = a || s, this;\n    }, setEnd: function setEnd(a) {\n      return t = a || t, this;\n    }, start: function start() {\n      return l || (l = !0, u = n(function (a) {\n        s(1), k = !0, e = a, g = a, h = 0, u = n(b);\n      })), this;\n    }, stop: function stop() {\n      return k = !1, l = !1, o(u), this;\n    }, isRunning: function isRunning() {\n      return k;\n    } },  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (a.MainLoop),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : \"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) && (module.exports = a.MainLoop);\n}(window);\n//# sourceMappingURL=mainloop.min.js.map\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.IntegerRangePreference = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Preference = __webpack_require__(0);\n\nvar _RangePreference2 = __webpack_require__(9);\n\nvar _PreferencesUtilities = __webpack_require__(2);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IntegerRangePreference = exports.IntegerRangePreference = function (_RangePreference) {\n    _inherits(IntegerRangePreference, _RangePreference);\n\n    function IntegerRangePreference(data) {\n        _classCallCheck(this, IntegerRangePreference);\n\n        if (!(0, _PreferencesUtilities.isInt)(data.min) || !(0, _PreferencesUtilities.isInt)(data.max)) {\n            throw new TypeError(\"min and max must be integers (found \" + data.min + \" and \" + data.max + \" for preference '\" + data.key + \"').\");\n        }\n\n        var _this = _possibleConstructorReturn(this, (IntegerRangePreference.__proto__ || Object.getPrototypeOf(IntegerRangePreference)).call(this, data));\n\n        _this.min = data.min;\n        _this.max = data.max;\n        if (!_this.isValidValue(data.default)) {\n            _get(IntegerRangePreference.prototype.__proto__ || Object.getPrototypeOf(IntegerRangePreference.prototype), \"invalidValue\", _this).call(_this, data.default);\n        }\n        return _this;\n    }\n\n    _createClass(IntegerRangePreference, [{\n        key: \"isValidValue\",\n        value: function isValidValue(value) {\n            return (0, _PreferencesUtilities.isInt)(value) && value >= this.min && value <= this.max;\n        }\n    }], [{\n        key: \"stringify\",\n        value: function stringify(value) {\n            return value.toString();\n        }\n    }, {\n        key: \"parse\",\n        value: function parse(stringifiedValue) {\n            return parseInt(stringifiedValue);\n        }\n    }]);\n\n    return IntegerRangePreference;\n}(_RangePreference2.RangePreference);\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PreferenceManager = PreferenceManager;\n\nvar _PreferencesUtilities = __webpack_require__(2);\n\nvar _Preference = __webpack_require__(0);\n\nvar _PreferenceWithValue = __webpack_require__(23);\n\nfunction PreferenceManager(preferencesData) {\n    var LOCALSTORAGE_PREFIX = \"pref_key_\";\n    var CONSOLE_PREFIX = \"[PreferenceManager] \";\n\n    // Parse and validate preferences:\n    log(\"Validating preferences ...\");\n    var PREFERENCES = parsePreferences(preferencesData);\n    log(\"Done.\");\n\n    // Initialize cached preference database:\n    var CACHED_PREFERENCES_WITH_VALUES = getAllPreferencesWithDefaultValues();\n    CACHED_PREFERENCES_WITH_VALUES.forEach(function (preferenceWithValue) {\n        var key = preferenceWithValue.preference.key;\n        try {\n            var savedValue = getSaved(key);\n            var _defaultValue = preferenceWithValue.preference.getDefaultValue();\n            if (savedValue === null) {\n                log(\"Using default value '\" + _defaultValue + \"' for preference '\" + key + \"' since there was no saved value.\");\n            }\n            preferenceWithValue.value = savedValue !== null ? savedValue : _defaultValue;\n        } catch (e) {\n            if (e instanceof TypeError) {\n                logWarning(\"Using default value '\" + defaultValue + \"' for preference '\" + key + \"' since the saved value in localStorage was not a valid one.\");\n            } else {\n                logWarning(\"Using default value '\" + defaultValue + \"' for preference '\" + key + \"' since no saved value could be loaded from localStorage.\");\n            }\n        }\n    });\n\n    function log(string) {\n        console.log(CONSOLE_PREFIX + string);\n    }\n\n    function logWarning(string) {\n        console.warn(CONSOLE_PREFIX + string);\n    }\n\n    function logError(string) {\n        console.error(CONSOLE_PREFIX + string);\n    }\n\n    function parsePreferences(preferencesData) {\n        return preferencesData.map(parsePreference);\n    }\n\n    function parsePreference(pref, index) {\n        if (!(0, _PreferencesUtilities.isString)(pref.key)) {\n            throw new TypeError(\"'The preference at index \" + index + \" does not have a valid key (found \" + pref.key + \").\");\n        } else if (pref.type === undefined || !(pref.type.prototype instanceof _Preference.Preference)) {\n            throw new TypeError(\"Preference '\" + pref.key + \"' does not use a valid preference type (found \" + pref.type + \").\");\n        } else if (pref.default === undefined) {\n            throw new TypeError(\"Preference '\" + pref.key + \"' has no default value.\");\n        }\n        return new pref.type(pref);\n    }\n\n    function preferenceExists(key) {\n        return getPreference(key) !== undefined;\n    }\n\n    function getPreference(key) {\n        return PREFERENCES.find(function (pref) {\n            return pref.key === key;\n        });\n    }\n\n    function getCachedPreference(key) {\n        return CACHED_PREFERENCES_WITH_VALUES.find(function (preferenceWithValue) {\n            return preferenceWithValue.preference.key === key;\n        });\n    }\n\n    function getAllPreferencesWithValues_saved() {\n        // throws SecurityError etc\n        return PREFERENCES.map(function (preference) {\n            return new _PreferenceWithValue.PreferenceWithValue(preference, getSaved(preference.key));\n        });\n    }\n\n    function getAllPreferencesWithValues_cached() {\n        return PREFERENCES.map(function (preference) {\n            return new _PreferenceWithValue.PreferenceWithValue(preference, getCached(preference.key));\n        });\n    }\n\n    function getAllPreferencesWithDefaultValues() {\n        return PREFERENCES.map(function (preference) {\n            return new _PreferenceWithValue.PreferenceWithValue(preference, preference.getDefaultValue());\n        });\n    }\n\n    function getKey(pref) {\n        return pref.key;\n    }\n\n    function isValidPreferenceValue(key, value) {\n        return getPreference(key).isValidValue(value);\n    }\n\n    function setToDefaultValue(key) {\n        // throws SecurityError etc\n        set(key, getDefaultValue(key));\n    }\n\n    function getDefaultValue(key) {\n        if (!preferenceExists(key)) {\n            throw new Error(\"Preference '\" + key + \"' does not exist.\");\n        }\n        return getPreference(key).getDefaultValue();\n    }\n\n    function LS_prefix(key) {\n        return LOCALSTORAGE_PREFIX + key;\n    }\n\n    function set(key, value) {\n        // throws SecurityError etc\n        if (!preferenceExists(key)) {\n            throw new Error(\"There is no preference with key '\" + key + \"'.\");\n        }\n        var pref = getPreference(key);\n        if (!isValidPreferenceValue(key, value)) {\n            pref.invalidValue(value);\n        } else {\n            log(\"Setting preference '\" + key + \"' to '\" + value + \"'.\");\n            getCachedPreference(key).value = value;\n            try {\n                localStorage.setItem(LS_prefix(key), pref.constructor.stringify(value));\n            } catch (e) {\n                logError(\"Failed to save value for preference '\" + key + \"' to localStorage. The following error was thrown:\\n\" + e);\n                throw e; // likely a SecurityError, but could be others as well\n            }\n        }\n    }\n\n    function getSaved(key) {\n        // throws SecurityError, TypeError etc\n        if (!preferenceExists(key)) {\n            throw new Error(\"There is no preference with key '\" + key + \"'.\");\n        }\n        var pref = getPreference(key);\n        var savedValue = void 0;\n        try {\n            savedValue = localStorage.getItem(LS_prefix(key));\n        } catch (e) {\n            logError(\"Failed to load saved value for preference '\" + key + \"' from localStorage. The following error was thrown:\\n\" + e);\n            throw e; // likely a SecurityError, but could be others as well\n        }\n        if (savedValue === null) {\n            // There was no saved value.\n            return null;\n        } else if (isValidPreferenceValue(key, pref.constructor.parse(savedValue))) {\n            return pref.constructor.parse(savedValue);\n        } else {\n            throw new TypeError(\"'\" + savedValue + \"' could not be parsed to a valid value for preference '\" + pref + \"'.\");\n        }\n    }\n\n    function getCached(key) {\n        if (!preferenceExists(key)) {\n            throw new Error(\"There is no preference with key '\" + key + \"'.\");\n        }\n        return getCachedPreference(key).value;\n    }\n\n    function setAllToDefault() {\n        log(\"Resetting all preferences ...\");\n        PREFERENCES.map(getKey).forEach(setToDefaultValue);\n        log(\"Done.\");\n    }\n\n    return {\n        isValidPreferenceValue: isValidPreferenceValue,\n        set: set,\n        getSaved: getSaved,\n        getCached: getCached,\n        setToDefaultValue: setToDefaultValue,\n        getDefaultValue: getDefaultValue,\n        getAllPreferencesWithValues_saved: getAllPreferencesWithValues_saved,\n        getAllPreferencesWithValues_cached: getAllPreferencesWithValues_cached,\n        getAllPreferencesWithDefaultValues: getAllPreferencesWithDefaultValues,\n        setAllToDefault: setAllToDefault\n    };\n}\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PreferenceWithValue = exports.PreferenceWithValue = function PreferenceWithValue(preference, value) {\n    _classCallCheck(this, PreferenceWithValue);\n\n    if (!preference.isValidValue(value)) {\n        throw new TypeError(value + \" is not a valid value for preference \" + preference.key + \".\");\n    }\n    this.preference = preference;\n    this.value = value;\n};\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(12);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// zatacka.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1fdf30bb699c52f24deb","import { isString } from \"./PreferencesUtilities.js\";\r\n\r\nexport class Preference {\r\n    constructor(data) {\r\n        if (!isString(data.key)) {\r\n            throw new TypeError(`key must be a string (found ${data.key}). More info: ${data}`);\r\n        } else if (data.default === undefined) {\r\n            throw new TypeError(`Preference '${data.key}' must have a default value.`);\r\n        }\r\n        this.key = data.key;\r\n        this.label = data.label;\r\n        this.default = data.default;\r\n        this.description = data.description;\r\n    }\r\n\r\n    isValidValue(value) {\r\n        return isString(value);\r\n    }\r\n\r\n    invalidValue(value) {\r\n        throw new TypeError(`${value} is not a valid value for preference '${this.key}'.`);\r\n    }\r\n\r\n    static stringify(value) {\r\n        return value.toString();\r\n    }\r\n\r\n    static parse(stringifiedValue) {\r\n        return stringifiedValue;\r\n    }\r\n\r\n    getDefaultValue() {\r\n        return this.default;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/preferences/Preference.js","const typeOf = ((global) => {\r\n    return function(obj) {\r\n        if (obj === global) {\r\n            return \"global\";\r\n        }\r\n        return ({}).toString.call(obj).match(/\\s([a-z|A-Z]+)/)[1].toLowerCase();\r\n    };\r\n})(this);\r\n\r\nexport const KEY = Object.freeze({ BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, PAUSE: 19, CAPS_LOCK: 20, ESCAPE: 27, SPACE: 32, PAGE_UP: 33, PAGE_DOWN: 34, END: 35, HOME: 36, LEFT_ARROW: 37, UP_ARROW: 38, RIGHT_ARROW: 39, DOWN_ARROW: 40, INSERT: 45, DELETE: 46, \"0\": 48, \"1\": 49, \"2\": 50, \"3\": 51, \"4\": 52, \"5\": 53, \"6\": 54, \"7\": 55, \"8\": 56, \"9\": 57, A: 65, B: 66, C: 67, D: 68, E: 69, F: 70, G: 71, H: 72, I: 73, J: 74, K: 75, L: 76, M: 77, N: 78, O: 79, P: 80, Q: 81, R: 82, S: 83, T: 84, U: 85, V: 86, W: 87, X: 88, Y: 89, Z: 90, LEFT_META: 91, RIGHT_META: 92, SELECT: 93, NUMPAD_0: 96, NUMPAD_1: 97, NUMPAD_2: 98, NUMPAD_3: 99, NUMPAD_4: 100, NUMPAD_5: 101, NUMPAD_6: 102, NUMPAD_7: 103, NUMPAD_8: 104, NUMPAD_9: 105, MULTIPLY: 106, ADD: 107, SUBTRACT: 109, DECIMAL: 110, DIVIDE: 111, F1: 112, F2: 113, F3: 114, F4: 115, F5: 116, F6: 117, F7: 118, F8: 119, F9: 120, F10: 121, F11: 122, F12: 123, NUM_LOCK: 144, SCROLL_LOCK: 145, SEMICOLON: 186, EQUALS: 187, COMMA: 188, DASH: 189, PERIOD: 190, FORWARD_SLASH: 191, GRAVE_ACCENT: 192, OPEN_BRACKET: 219, BACK_SLASH: 220, CLOSE_BRACKET: 221, SINGLE_QUOTE: 222 });\r\n\r\nexport const MOUSE = Object.freeze((() => {\r\n    const offset = 1000;\r\n    return Object.freeze({\r\n        unpack: (offseted) => offseted - offset,\r\n        pack:   (standard) => standard + offset,\r\n        LEFT:   offset+0,\r\n        RIGHT:  offset+2,\r\n        MIDDLE: offset+1,\r\n        MOUSE4: offset+3,\r\n        MOUSE5: offset+4\r\n    });\r\n})());\r\n\r\nexport const F_KEYS = Object.freeze([\r\n    KEY.F1, KEY.F2, KEY.F3, KEY.F4, KEY.F5, KEY.F6, KEY.F7, KEY.F8, KEY.F9, KEY.F10, KEY.F11, KEY.F12\r\n]);\r\n\r\nexport const MOUSE_BUTTONS = Object.freeze([\r\n    MOUSE.LEFT, MOUSE.RIGHT, MOUSE.MIDDLE, MOUSE.MOUSE4, MOUSE.MOUSE5\r\n]);\r\n\r\nexport function isObject(obj) {\r\n    return typeOf(obj) === \"object\";\r\n}\r\n\r\nexport function isNumber(n) {\r\n    return typeOf(n) === \"number\";\r\n}\r\n\r\nexport function isPositiveNumber(n) {\r\n    return isNumber(n) && n > 0;\r\n}\r\n\r\nexport function isInt(n) {\r\n    return isNumber(n) && n % 1 === 0;\r\n}\r\n\r\nexport function isPositiveInt(n) {\r\n    return isInt(n) && n > 0;\r\n}\r\n\r\nexport function isString(s) {\r\n    return typeOf(s) === \"string\";\r\n}\r\n\r\nexport function isNonEmptyString(s) {\r\n    return isString(s) && s.length > 0;\r\n}\r\n\r\nexport function arePositiveNumbers(numbers) {\r\n    return numbers.every(isPositiveNumber);\r\n}\r\n\r\nexport function round(number, decimals) {\r\n    return Math.round(number * (Math.pow(10, decimals))) / (Math.pow(10, decimals));\r\n}\r\n\r\nexport function sameAbs(a, b) {\r\n    return Math.abs(a) === Math.abs(b);\r\n}\r\n\r\n/**\r\n * Generates a random float between min (inclusive) and max (exclusive).\r\n *\r\n * @param {Number} min\r\n *   Minimum value (inclusive).\r\n * @param {Number} max\r\n *   Maximum value (exclusive).\r\n */\r\nexport function randomFloat(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\nexport function normalizeAngle(a) {\r\n    const pi = Math.PI;\r\n    let angle = a % (2*pi);\r\n    angle = (angle + 2*pi) % (2*pi);\r\n    if (angle > pi) {\r\n        angle = angle - 2*pi;\r\n    }\r\n    return angle;\r\n}\r\n\r\nexport function radToDeg(radians) {\r\n    return (180/Math.PI) * radians;\r\n}\r\n\r\nexport function distanceToDuration(distance, velocity) {\r\n    return (distance / velocity) * 1000; // milliseconds\r\n}\r\n\r\nexport function log(str) {\r\n    console.log(\"Zatacka: \" + str);\r\n}\r\n\r\nexport function logWarning(str) {\r\n    console.warn(\"Zatacka: \" + str);\r\n}\r\n\r\nexport function logError(str) {\r\n    console.error(\"Zatacka: \" + str);\r\n}\r\n\r\nexport function byID(id) {\r\n    return document.getElementById(id);\r\n}\r\n\r\nexport function isHTMLElement(elem) {\r\n    return elem instanceof HTMLElement;\r\n}\r\n\r\nexport function flush(node) {\r\n    if (isHTMLElement(node)) {\r\n        node.textContent = \"\";\r\n    } else {\r\n        throw new TypeError(`${node} is not a DOM node.`);\r\n    }\r\n}\r\n\r\nexport function forfor(y_start, y_end, x_start, x_end, func, arg) {\r\n    for (let y = y_start; y < y_end; y++) {\r\n        for (let x = x_start; x < x_end; x++) {\r\n            func.call(this, x, y, arg);\r\n        }\r\n    }\r\n}\r\n\r\nexport const Keyboard = {\r\n    pressed: {},\r\n    isDown: function(keyCode) {\r\n        return !!this.pressed[keyCode];\r\n    },\r\n    onKeydown: function(event) {\r\n        this.pressed[event.keyCode] = true;\r\n    },\r\n    onKeyup: function(event) {\r\n        delete this.pressed[event.keyCode];\r\n    }\r\n};\r\n\r\nexport const Mouse = {\r\n    pressed: {},\r\n    isDown: function(mouseButtonNumber) {\r\n        return this.pressed[mouseButtonNumber];\r\n    },\r\n    onMousedown: function(event) {\r\n        this.pressed[event.button] = true;\r\n    },\r\n    onMouseup: function(event) {\r\n        delete this.pressed[event.button];\r\n    }\r\n};\r\n\r\nexport function anyKeyBeingPressed(keyCodes) {\r\n    return Array.isArray(keyCodes) && keyCodes.some(Keyboard.isDown, Keyboard);\r\n}\r\n\r\nexport function anyMouseButtonBeingPressed(mouseButtons) {\r\n    return Array.isArray(mouseButtons) && mouseButtons.map(MOUSE.unpack).some(Mouse.isDown, Mouse);\r\n}\r\n\r\nexport function anyInputBeingPressed(keysOrMouseButtons) {\r\n    return anyKeyBeingPressed(keysOrMouseButtons) || anyMouseButtonBeingPressed(keysOrMouseButtons);\r\n}\r\n\r\nexport function isMouseButton(button) {\r\n    return isPositiveInt(button) && Object.keys(MOUSE).some((buttonName) => MOUSE.hasOwnProperty(buttonName));\r\n}\r\n\r\nexport function isKeyList(keys) {\r\n    return Array.isArray(keys)\r\n        && keys.length > 0\r\n        && keys.every(isPositiveInt); \r\n}\r\n\r\nexport function isFKey(key) {\r\n    return F_KEYS.includes(key);\r\n}\r\n\r\nexport const PLATFORM = (() => {\r\n    const strings = {\r\n        os_id_windows: \"Win\",\r\n        os_id_mac: \"Mac\",\r\n        os_id_linux: \"Linux\",\r\n        os_id_unix: \"X11\",\r\n\r\n        os_name_windows: \"Windows\",\r\n        os_name_mac: \"Mac\",\r\n        os_name_linux: \"Linux\",\r\n        os_name_unix: \"UNIX\",\r\n        os_name_unknown: \"Unknown\",\r\n    };\r\n\r\n    return {\r\n        getOS: () => {\r\n            const ua = window.navigator.userAgent || window.navigator.appVersion;\r\n            if (isNonEmptyString(ua)) {\r\n                if (ua.indexOf(strings.os_id_windows) > -1) { return strings.os_name_windows; }\r\n                if (ua.indexOf(strings.os_id_mac)     > -1) { return strings.os_name_mac;     }\r\n                if (ua.indexOf(strings.os_id_linux)   > -1) { return strings.os_name_linux;   }\r\n                if (ua.indexOf(strings.os_id_unix)    > -1) { return strings.os_name_unix;    }\r\n            }\r\n            return strings.os_name_unknown;\r\n        },\r\n        getFullscreenShortcut: () => {\r\n            switch (PLATFORM.getOS()) {\r\n                case strings.os_name_mac:\r\n                    return TEXT.keyboard_fullscreen_mac;\r\n                    break;\r\n                default:\r\n                    return TEXT.keyboard_fullscreen_standard;\r\n            }\r\n        },\r\n    };\r\n})();\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/Utilities.js","const typeOf = ((global) => {\r\n    return function(obj) {\r\n        if (obj === global) {\r\n            return \"global\";\r\n        }\r\n        return ({}).toString.call(obj).match(/\\s([a-z|A-Z]+)/)[1].toLowerCase();\r\n    };\r\n})(this);\r\n\r\nexport function isObject(obj) {\r\n    return typeOf(obj) === \"object\";\r\n}\r\n\r\nexport function isNumber(n) {\r\n    return typeOf(n) === \"number\";\r\n}\r\n\r\nexport function isPositiveNumber(n) {\r\n    return isNumber(n) && n > 0;\r\n}\r\n\r\nexport function isInt(n) {\r\n    return isNumber(n) && n % 1 === 0;\r\n}\r\n\r\nexport function isPositiveInt(n) {\r\n    return isInt(n) && n > 0;\r\n}\r\n\r\nexport function isString(s) {\r\n    return typeOf(s) === \"string\";\r\n}\r\n\r\nexport function isNonEmptyString(s) {\r\n    return isString(s) && s.length > 0;\r\n}\r\n\r\nexport function arePositiveNumbers(numbers) {\r\n    return numbers.every(isPositiveNumber);\r\n}\r\n\r\nexport function round(number, decimals) {\r\n    return Math.round(number * (Math.pow(10, decimals))) / (Math.pow(10, decimals));\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/preferences/PreferencesUtilities.js","import { log, logWarning, flush, isObject, isPositiveInt, arePositiveNumbers, round, distanceToDuration, randomFloat, MOUSE_BUTTONS, isMouseButton, isKeyList, anyInputBeingPressed } from \"./lib/Utilities.js\";\r\nimport { Queue } from \"./lib/Queue.js\";\r\n\r\nexport class Player {\r\n    constructor(id, name = `Player ${id}`, color = \"white\", L_keys, R_keys, holeConfig) {\r\n        if (!isPositiveInt(id)) {\r\n            throw new TypeError(`Cannot create a player with ID ${id}. Only positive integers are accepted.`);\r\n        }\r\n        this.id = id;\r\n        this.name = name;\r\n        this.color = color;\r\n        this.alive = false;\r\n        this.holy = false;\r\n        this.x = null;\r\n        this.y = null;\r\n        this.direction = 0;\r\n        this.velocity = 0;\r\n        this.maxSpeed = undefined;\r\n        this.lastPosition = null;\r\n        this.queuedDraws = new Queue();\r\n        this.holeTimer = null;\r\n        this.holeConfig = null;\r\n\r\n        if (!this.constructor.isHoleConfig(holeConfig)) {\r\n            logWarning(`Creating player ${this.name} with no hole configuration because ${holeConfig} is not a valid hole configuration.`);\r\n        } else {\r\n            this.holeConfig = holeConfig;\r\n        }\r\n\r\n        if (isPositiveInt(L_keys)) {\r\n            this.L_keys = [L_keys];\r\n        } else if (isKeyList(L_keys)) {\r\n            this.L_keys = L_keys;\r\n        } else {\r\n            logWarning(`Creating player \"${this.name}\" without any LEFT key(s).`);\r\n            this.L_keys = [];\r\n        }\r\n\r\n        if (isPositiveInt(R_keys)) {\r\n            this.R_keys = [R_keys];\r\n        } else if (isKeyList(R_keys)) {\r\n            this.R_keys = R_keys;\r\n        } else {\r\n            logWarning(`Creating player \"${this.name}\" without any RIGHT key(s).`);\r\n            this.R_keys = [];\r\n        }\r\n    }\r\n\r\n    static isPlayer(player) {\r\n        return (player instanceof Player);\r\n    }\r\n\r\n    static isHoleConfig(holeConfig) {\r\n        return isObject(holeConfig)\r\n            && arePositiveNumbers([\r\n                                   holeConfig.minPaddedHoleSize,\r\n                                   holeConfig.maxPaddedHoleSize,\r\n                                   holeConfig.minPaddedHoleInterval,\r\n                                   holeConfig.maxPaddedHoleInterval\r\n                                  ]);\r\n    }\r\n\r\n\r\n    // CHECKERS\r\n\r\n    isAlive() {\r\n        return this.alive;\r\n    }\r\n\r\n    justWasAt(left, top) {\r\n        return this.lastPosition.left === left && this.lastPosition.top === top;\r\n    }\r\n\r\n    isHoly() {\r\n        return this.holy; \r\n    }\r\n\r\n    isPressingLeft() {\r\n        return anyInputBeingPressed(this.L_keys);\r\n    }\r\n\r\n    isPressingRight() {\r\n        return anyInputBeingPressed(this.R_keys);\r\n    }\r\n\r\n    hasID(id) {\r\n        return this.id === id;\r\n    }\r\n\r\n    hasMouseButton(button) {\r\n        return isMouseButton(button)\r\n            && (this.L_keys.includes(button)\r\n             || this.R_keys.includes(button));\r\n    }\r\n\r\n    usesAnyMouseButton() {\r\n        return MOUSE_BUTTONS.some((button) => this.hasMouseButton(button));\r\n    }\r\n\r\n    hasKey(key) {\r\n        return this.L_keys.includes(key)\r\n            || this.R_keys.includes(key);\r\n    }\r\n\r\n\r\n    // GETTERS\r\n\r\n    getID() {\r\n        return this.id;\r\n    }\r\n\r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getColor() {\r\n        return this.color;\r\n    }\r\n\r\n    toString() {\r\n        return this.name;\r\n    }\r\n\r\n    getLastPosition() {\r\n        return this.lastPosition;\r\n    }\r\n\r\n    getVelocity() {\r\n        return this.velocity;\r\n    }\r\n\r\n    getDirection() {\r\n        return this.direction;\r\n    }\r\n\r\n    randomPaddedHoleSize() {\r\n        return randomFloat(this.holeConfig.minPaddedHoleSize, this.holeConfig.maxPaddedHoleSize);\r\n    }\r\n\r\n    randomPaddedHoleInterval() {\r\n        return randomFloat(this.holeConfig.minPaddedHoleInterval, this.holeConfig.maxPaddedHoleInterval);\r\n    }\r\n\r\n    firstHoleDelay() {\r\n        return distanceToDuration(this.randomPaddedHoleInterval() - this.holeConfig.minPaddedHoleInterval, this.velocity);\r\n    }\r\n\r\n\r\n    // SETTERS\r\n\r\n    setMaxSpeed(speed) {\r\n        this.maxSpeed = speed;\r\n    }\r\n\r\n    setDirection(direction) {\r\n        this.direction = direction;\r\n    }\r\n\r\n\r\n    // DOERS\r\n\r\n    start() {\r\n        log(`${this} starting.`);\r\n        this.alive = true;\r\n        this.velocity = this.maxSpeed;\r\n        if (this.constructor.isHoleConfig(this.holeConfig)) {\r\n            this.holeTimer = setTimeout(this.startCreatingHoles.bind(this), this.firstHoleDelay());\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        this.alive = false;\r\n        this.velocity = 0;\r\n        clearTimeout(this.holeTimer);\r\n    }\r\n\r\n    reset() {\r\n        this.holy = false;\r\n        this.lastPosition = null;\r\n        this.queuedDraws = new Queue();\r\n    }\r\n\r\n    /**\r\n     * Called when the player does something that causes it do die.\r\n     * @param {String} cause The cause of death.\r\n     */\r\n    die(cause) {\r\n        this.alive = false;\r\n        clearTimeout(this.holeTimer);\r\n        log(`${this} ${(cause || \"died\")} at (${round(this.x, 2)}, ${round(this.y, 2)}).` );\r\n    }\r\n\r\n    beAt(left, top) {\r\n        this.lastPosition = {\r\n            \"left\": left,\r\n            \"top\" : top\r\n        };\r\n    }\r\n\r\n    beginHole() {\r\n        this.holy = true;\r\n        const paddedHoleSize = this.randomPaddedHoleSize();\r\n        const paddedHoleDuration = distanceToDuration(paddedHoleSize, this.velocity);\r\n        this.holeTimer = setTimeout(this.endHole.bind(this), paddedHoleDuration);\r\n    }\r\n\r\n    endHole() {\r\n        this.holy = false;\r\n        const paddedHoleInterval = this.randomPaddedHoleInterval();\r\n        const paddedHoleIntervalDuration = distanceToDuration(paddedHoleInterval, this.velocity);\r\n        this.holeTimer = setTimeout(this.beginHole.bind(this), paddedHoleIntervalDuration);\r\n    }\r\n\r\n    startCreatingHoles() {\r\n        this.beginHole();\r\n    }\r\n\r\n    enqueueDraw() {\r\n        this.queuedDraws.enqueue({ \"x\": this.x, \"y\": this.y });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/Player.js","import { Dialog } from \"./Dialog.js\";\r\n\r\nexport class ConfirmationDialog extends Dialog {\r\n    constructor(question, callback) {\r\n        if (!(callback instanceof Function)) {\r\n            throw new TypeError(`callback must be a function (found ${callback}).`);\r\n        }\r\n        super(question);\r\n        this.callback = callback;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/ConfirmationDialog.js","import { isString } from \"./Utilities.js\";\r\n\r\nexport class Dialog {\r\n    constructor(text) {\r\n        if (!isString(text)) {\r\n            throw new TypeError(`text must be a string (found ${text}).`);\r\n        }\r\n        this.text = text;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/Dialog.js","export class Message {\r\n    constructor(text, styleClass) {\r\n        this.text = text;\r\n        this.class = styleClass;\r\n    }\r\n\r\n    toHTMLElement() {\r\n    \tconst p = document.createElement(\"p\");\r\n    \tp.textContent = this.text;\r\n    \tp.classList.add(this.class);\r\n    \tp.classList.add(\"message\");\r\n    \treturn p;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/Message.js","import { Preference } from \"./Preference.js\";\r\n\r\nexport class BooleanPreference extends Preference {\r\n    constructor(data) {\r\n        super(data);\r\n        if (!(data.default === true || data.default === false)) {\r\n            super.invalidValue(data.default);\r\n        }\r\n    }\r\n\r\n    isValidValue(value) {\r\n        return value === true || value === false;\r\n    }\r\n\r\n    static stringify(value) {\r\n        return value.toString();\r\n    }\r\n\r\n    static parse(stringifiedValue) {\r\n        return stringifiedValue === \"true\";\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/preferences/BooleanPreference.js","import { Preference } from \"./Preference.js\";\r\nimport { isString } from \"./PreferencesUtilities.js\";\r\n\r\nexport class MultichoicePreference extends Preference {\r\n    constructor(data) {\r\n        if (!isNonEmptyStringArray(data.values)) {\r\n            throw new TypeError(`values must be a non-empty string array (found ${data.values} for preference '${data.key}').`);\r\n        }\r\n        super(data);\r\n        this.values = data.values;\r\n        this.labels = data.labels;\r\n        if (!this.isValidValue(data.default)) {\r\n            super.invalidValue(data.default);\r\n        }\r\n\r\n        function isNonEmptyStringArray(strings) {\r\n            return strings instanceof Array && strings.length > 0 && strings.every(isString);\r\n        }\r\n    }\r\n\r\n    isValidValue(value) {\r\n        return this.values.indexOf(value) > -1;\r\n    }\r\n\r\n    static stringify(value) {\r\n        return value;\r\n    }\r\n\r\n    static parse(stringifiedValue) {\r\n        return stringifiedValue;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/preferences/MultichoicePreference.js","import { Preference } from \"./Preference.js\";\r\nimport { isNumber } from \"./PreferencesUtilities.js\";\r\n\r\nexport class RangePreference extends Preference {\r\n    constructor(data) {\r\n        if (!isNumber(data.min) || !isNumber(data.max)) {\r\n            throw new TypeError(`min and max must be numbers (found ${data.min} and ${data.max} for preference '${data.key}').`);\r\n        } else if (data.min > data.max) {\r\n            throw new TypeError(`min cannot be greater than max (found ${data.min} and ${data.max} for preference '${data.key}', respectively).`);\r\n        }\r\n        super(data);\r\n        this.min = data.min;\r\n        this.max = data.max;\r\n        if (!this.isValidValue(data.default)) {\r\n            super.invalidValue(data.default)\r\n        }\r\n    }\r\n\r\n    isValidValue(value) {\r\n        return isNumber(value) && value >= this.min && value <= this.max;\r\n    }\r\n\r\n    static stringify(value) {\r\n        return value.toString();\r\n    }\r\n\r\n    static parse(stringifiedValue) {\r\n        return parseFloat(stringifiedValue);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/preferences/RangePreference.js","export default (() => {\r\n    const KEY_SHIFT = \"⇧\";\r\n    const KEY_CMD   = \"⌘\";\r\n    const KEY_PROCEED = \"Space or Enter\";\r\n    const KEY_QUIT = \"Esc\";\r\n\r\n    return Object.freeze({\r\n        hint_unload: `Are you sure you want to unload the page?`,\r\n        hint_start: `Press <kbd>Space</kbd> to start`,\r\n        hint_popup: `It is recommended to run Kurve in its own window without history (to avoid switching tabs or navigating back in history mid-game). To do that, please allow popups or <a href=\"ZATACKA.html\" target=\"_blank\">click here</a>.`,\r\n        hint_pick: `Pick your desired color by pressing the corresponding LEFT key (e.g. M for Orange).`,\r\n        hint_proceed: `Press ${KEY_PROCEED} to start!`,\r\n        hint_next: `Press ${KEY_PROCEED} to proceed, or ${KEY_QUIT} to quit.`,\r\n        hint_quit: `Press ${KEY_PROCEED} to start over.`,\r\n        hint_alt: `Alt plus some other keys may cause undesired behavior (e.g. switching windows).`,\r\n        hint_ctrl: `Ctrl plus some other keys may cause undesired behavior (e.g. closing the tab).`,\r\n        hint_mouse: `Make sure to keep the mouse cursor inside the browser window.`,\r\n        hint_preferences_access_denied: `Could not save/load settings because access to localStorage was denied by the browser. This might be caused by \"third-party site data\" being blocked or similar.`,\r\n        hint_preferences_localstorage_failed: `Could not save/load settings because access to localStorage failed.`,\r\n\r\n        keyboard_fullscreen_mac: `<kbd>${KEY_CMD} + Ctrl + F</kbd> and/or <kbd>${KEY_CMD} + ${KEY_SHIFT} + F</kbd>`,\r\n        keyboard_fullscreen_standard: \"<kbd>F11</kbd>\",\r\n\r\n        getFullscreenHint: (shortcut) => `Press ${shortcut} to toggle fullscreen`,\r\n\r\n        label_button_alert_ok: `OK`,\r\n        label_button_confirm_yes: `Yes`,\r\n        label_button_confirm_no: `No`,\r\n\r\n        label_text_confirm_quit: `Are you sure you want to quit?`,\r\n        label_text_confirm_reload: `Are you sure you want to reload the application?`,\r\n\r\n        pref_label_cursor: `Cursor`,\r\n        pref_label_description_cursor: `Control how the cursor behaves when the game is running.`,\r\n        pref_label_cursor_always_visible: `Always visible`,\r\n        pref_label_cursor_hidden_when_mouse_used_by_player: `Hidden when mouse used by player`,\r\n        pref_label_cursor_always_hidden: `Always hidden`,\r\n\r\n        pref_label_edge_fix: `Edge fix`,\r\n        pref_label_description_edge_fix: `Shrink the playing field slightly to make the edge visible if the monitor is exactly the same height or width as the game.`,\r\n        pref_label_edge_fix_full: `Full`,\r\n        pref_label_edge_fix_minimal: `Minimal`,\r\n        pref_label_edge_fix_off: `Off`,\r\n\r\n        pref_label_hints: `Hints`,\r\n        pref_label_description_hints: `Hints may be redundant for experienced Kurve players.`,\r\n        pref_label_hints_all: `All`,\r\n        pref_label_hints_warnings_only: `Warnings only`,\r\n        pref_label_hints_none: `None`,\r\n\r\n        pref_label_prevent_spawnkill: `Prevent spawnkills`,\r\n        pref_label_description_prevent_spawnkill: `Enforce a minimum distance between player spawns.`,\r\n\r\n        pref_label_confirm_quit: `Confirm quit`,\r\n        pref_label_description_confirm_quit: `Ask for confirmation before quitting to the main menu.`,\r\n\r\n        pref_label_confirm_reload: `Confirm reload`,\r\n        pref_label_description_confirm_reload: `Ask for confirmation before reloading the application.`,\r\n    });\r\n})();\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/locales/Zatacka.en_US.js","export default Object.freeze({\r\n    game_url: \"ZATACKA.html\",\r\n\r\n    error_name_security: \"SecurityError\",\r\n\r\n    class_hidden: \"hidden\",\r\n    class_active: \"active\",\r\n    class_dialog: \"dialog\",\r\n    class_dialog_alert: \"alert\",\r\n    class_dialog_confirmation: \"confirmation\",\r\n    class_description: \"description\",\r\n    class_half_width: \"half-width\",\r\n    class_right_hand_side: \"right-hand-side\",\r\n    class_nocursor: \"nocursor\",\r\n    class_tempcursor: \"tempcursor\",\r\n    class_hints_warnings_only: \"hints-warnings-only\",\r\n    class_hints_none: \"hints-none\",\r\n    html_name_preference_prefix: \"preference-\",\r\n\r\n    cursor_hidden: \"hidden\",\r\n    cursor_visible: \"visible\",\r\n\r\n    id_start_hint: \"start-hint\",\r\n    id_fullscreen_hint: \"fullscreen-hint\",\r\n    id_popup_hint: \"popup-hint\",\r\n    id_button_show_settings: \"button-show-settings\",\r\n    id_button_hide_settings: \"button-hide-settings\",\r\n\r\n    pref_number_type_integer: \"integer\",\r\n    pref_number_type_float: \"float\",\r\n\r\n    pref_key_cursor: \"cursor\",\r\n    pref_value_cursor_always_visible: \"always_visible\",\r\n    pref_value_cursor_hidden_when_mouse_used_by_player: \"hidden_when_mouse_used_by_player\",\r\n    pref_value_cursor_always_hidden: \"always_hidden\",\r\n\r\n    pref_key_edge_fix: \"edge_fix\",\r\n    pref_value_edge_fix_full: \"full\",\r\n    pref_value_edge_fix_minimal: \"minimal\",\r\n    pref_value_edge_fix_off: \"off\",\r\n\r\n    pref_key_hints: \"hints\",\r\n    pref_value_hints_all: \"all\",\r\n    pref_value_hints_warnings_only: \"warnings\",\r\n    pref_value_hints_none: \"none\",\r\n\r\n    pref_key_confirm_quit: \"confirm_quit\",\r\n    pref_key_confirm_reload: \"confirm_reload\",\r\n    pref_key_prevent_spawnkill: \"prevent_spawnkill\",\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/strings.js","import { byID, KEY, MOUSE, Keyboard, Mouse, log, logWarning, logError } from \"./lib/Utilities.js\";\r\n\r\nimport { Game } from \"./Game.js\";\r\nimport { Player } from \"./Player.js\";\r\nimport { Renderer } from \"./Renderer.js\";\r\nimport { GUIController } from \"./GUIController.js\";\r\n\r\nimport { BooleanPreference } from \"./lib/preferences/BooleanPreference.js\";\r\nimport { MultichoicePreference } from \"./lib/preferences/MultichoicePreference.js\";\r\nimport { PreferenceManager } from \"./lib/preferences/PreferenceManager.js\";\r\n\r\nimport { InfoMessage } from \"./lib/InfoMessage.js\";\r\nimport { WarningMessage } from \"./lib/WarningMessage.js\";\r\nimport { ConfirmationDialog } from \"./lib/ConfirmationDialog.js\";\r\n\r\nimport TEXT from \"./locales/Zatacka.en_US.js\";\r\nimport STRINGS from \"./strings.js\";\r\n\r\nconst Zatacka = (() => {\r\n\r\n    const canvas_main = byID(\"canvas_main\");\r\n    const canvas_overlay = byID(\"canvas_overlay\");\r\n    const ORIGINAL_WIDTH = canvas_main.width;\r\n    const ORIGINAL_HEIGHT = canvas_main.height;\r\n    const TOTAL_BORDER_THICKNESS = 4;\r\n    const KEY_RELOAD = KEY.F5;\r\n    const KEY_FULLSCREEN = KEY.F11;\r\n    const KEY_DEVTOOLS = KEY.F12;\r\n    const ALLOWED_KEYS = [KEY_FULLSCREEN, KEY_DEVTOOLS]; // not to be intercepted by our event handler\r\n\r\n    const config = Object.freeze({\r\n        tickrate: 600, // Hz\r\n        maxFramerate: 300, // Hz\r\n        canvas: canvas_main,\r\n        thickness: 3, // Kuxels\r\n        speed: 60, // Kuxels per second\r\n        turningRadius: 28.5, // Kuxels (NB: _radius_)\r\n        minSpawnAngle: -Math.PI/2, // radians\r\n        maxSpawnAngle:  Math.PI/2, // radians\r\n        spawnMargin: 100, // Kuxels\r\n        preventSpawnkill: false,\r\n        flickerFrequency: 20, // Hz, when spawning\r\n        flickerDuration: 830, // ms, when spawning\r\n        minHoleInterval: 90, // Kuxels\r\n        maxHoleInterval: 300, // Kuxels\r\n        minHoleSize: 5, // Kuxels\r\n        maxHoleSize: 9, // Kuxels\r\n        hintDelay: 3000, // ms\r\n        keys: {\r\n            \"proceed\": [KEY.SPACE, KEY.ENTER],\r\n            \"quit\":    [KEY.ESCAPE]\r\n        },\r\n        messages: Object.freeze({\r\n            pick:    new InfoMessage(TEXT.hint_pick),\r\n            proceed: new InfoMessage(TEXT.hint_proceed),\r\n            next:    new InfoMessage(TEXT.hint_next),\r\n            quit:    new InfoMessage(TEXT.hint_quit),\r\n            alt:     new WarningMessage(TEXT.hint_alt),\r\n            ctrl:    new WarningMessage(TEXT.hint_ctrl),\r\n            mouse:   new WarningMessage(TEXT.hint_mouse),\r\n            preferences_access_denied: new WarningMessage(TEXT.hint_preferences_access_denied),\r\n            preferences_localstorage_failed: new WarningMessage(TEXT.hint_preferences_localstorage_failed),\r\n        }),\r\n        dialogs: Object.freeze({\r\n            confirmation_quit: new ConfirmationDialog(TEXT.label_text_confirm_quit, quitGame),\r\n            confirmation_reload: new ConfirmationDialog(TEXT.label_text_confirm_reload, reload),\r\n        }),\r\n        defaultPlayers: Object.freeze([\r\n            { id: 1, name: \"Red\"   , color: \"#FF2800\", keyL: KEY[\"1\"]                              , keyR: KEY.Q                         },\r\n            { id: 2, name: \"Yellow\", color: \"#C3C300\", keyL: [ KEY.CTRL, KEY.Z ]                   , keyR: [ KEY.ALT, KEY.X ]            },\r\n            { id: 3, name: \"Orange\", color: \"#FF7900\", keyL: KEY.M                                 , keyR: KEY.COMMA                     },\r\n            { id: 4, name: \"Green\" , color: \"#00CB00\", keyL: KEY.LEFT_ARROW                        , keyR: KEY.DOWN_ARROW                },\r\n            { id: 5, name: \"Pink\"  , color: \"#DF51B6\", keyL: [ KEY.DIVIDE, KEY.END, KEY.PAGE_DOWN ], keyR: [ KEY.MULTIPLY, KEY.PAGE_UP ] },\r\n            { id: 6, name: \"Blue\"  , color: \"#00A2CB\", keyL: MOUSE.LEFT                            , keyR: MOUSE.RIGHT                   }\r\n        ])\r\n    });\r\n\r\n    const PREFERENCES = Object.freeze([\r\n        {\r\n            type: BooleanPreference,\r\n            key: STRINGS.pref_key_prevent_spawnkill,\r\n            label: TEXT.pref_label_prevent_spawnkill,\r\n            description: TEXT.pref_label_description_prevent_spawnkill,\r\n            default: false,\r\n        },\r\n        {\r\n            type: BooleanPreference,\r\n            key: STRINGS.pref_key_confirm_quit,\r\n            label: TEXT.pref_label_confirm_quit,\r\n            description: TEXT.pref_label_description_confirm_quit,\r\n            default: true,\r\n        },\r\n        {\r\n            type: BooleanPreference,\r\n            key: STRINGS.pref_key_confirm_reload,\r\n            label: TEXT.pref_label_confirm_reload,\r\n            description: TEXT.pref_label_description_confirm_reload,\r\n            default: true,\r\n        },\r\n        {\r\n            type: MultichoicePreference,\r\n            key: STRINGS.pref_key_cursor,\r\n            label: TEXT.pref_label_cursor,\r\n            description: TEXT.pref_label_description_cursor,\r\n            values: [\r\n                STRINGS.pref_value_cursor_always_visible,\r\n                STRINGS.pref_value_cursor_hidden_when_mouse_used_by_player,\r\n                STRINGS.pref_value_cursor_always_hidden,\r\n            ],\r\n            labels: [\r\n                TEXT.pref_label_cursor_always_visible,\r\n                TEXT.pref_label_cursor_hidden_when_mouse_used_by_player,\r\n                TEXT.pref_label_cursor_always_hidden,\r\n            ],\r\n            default: STRINGS.pref_value_cursor_hidden_when_mouse_used_by_player,\r\n        },\r\n        {\r\n            type: MultichoicePreference,\r\n            key: STRINGS.pref_key_edge_fix,\r\n            label: TEXT.pref_label_edge_fix,\r\n            description: TEXT.pref_label_description_edge_fix,\r\n            values: [\r\n                STRINGS.pref_value_edge_fix_full,\r\n                STRINGS.pref_value_edge_fix_minimal,\r\n                STRINGS.pref_value_edge_fix_off,\r\n            ],\r\n            labels: [\r\n                TEXT.pref_label_edge_fix_full,\r\n                TEXT.pref_label_edge_fix_minimal,\r\n                TEXT.pref_label_edge_fix_off,\r\n            ],\r\n            default: STRINGS.pref_value_edge_fix_off,\r\n        },\r\n        {\r\n            type: MultichoicePreference,\r\n            key: STRINGS.pref_key_hints,\r\n            label: TEXT.pref_label_hints,\r\n            description: TEXT.pref_label_description_hints,\r\n            values: [\r\n                STRINGS.pref_value_hints_all,\r\n                STRINGS.pref_value_hints_warnings_only,\r\n                STRINGS.pref_value_hints_none,\r\n            ],\r\n            labels: [\r\n                TEXT.pref_label_hints_all,\r\n                TEXT.pref_label_hints_warnings_only,\r\n                TEXT.pref_label_hints_none,\r\n            ],\r\n            default: STRINGS.pref_value_hints_all,\r\n        }\r\n    ]);\r\n\r\n    const preferenceManager = new PreferenceManager(PREFERENCES);\r\n\r\n    function isProceedKey(key) {\r\n        return config.keys.proceed.includes(key);\r\n    }\r\n\r\n    function isQuitKey(key) {\r\n        return config.keys.quit.includes(key);\r\n    }\r\n\r\n    function shouldPreventDefault(key) {\r\n        return !(ALLOWED_KEYS.includes(key));\r\n    }\r\n\r\n    function setEdgePadding(padding) {\r\n        if (game.isStarted()) {\r\n            throw new Error(\"Cannot change edge padding when the game is running.\");\r\n        } else {\r\n            const newCanvasWidth = ORIGINAL_WIDTH - padding;\r\n            const newCanvasHeight = ORIGINAL_HEIGHT - 2*padding;\r\n            game.setSize(newCanvasWidth, newCanvasHeight);\r\n            guiController.setEdgePadding(padding);\r\n        }\r\n    }\r\n\r\n    function setEdgeMode(mode) {\r\n        let padding = 0;\r\n        if (mode === \"minimal\") {\r\n            padding = 1;\r\n        } else if (mode === \"full\") {\r\n            padding = TOTAL_BORDER_THICKNESS;\r\n        }\r\n        try {\r\n            setEdgePadding(padding);\r\n        } catch(e) {\r\n            logError(e);\r\n        }\r\n    }\r\n\r\n    function setPreventSpawnkill(mode) {\r\n        if (game.isStarted()) {\r\n            throw new Error(\"Cannot change edge padding when the game is running.\");\r\n        } else {\r\n            game.setPreventSpawnkill(mode);\r\n        }\r\n    }\r\n\r\n    function getHoleConfig() {\r\n        return {\r\n            minHoleSize: config.minHoleSize,\r\n            maxHoleSize: config.maxHoleSize,\r\n            minHoleInterval: config.minHoleInterval,\r\n            maxHoleInterval: config.maxHoleInterval\r\n        };\r\n    }\r\n\r\n    function getPaddedHoleConfig() {\r\n        const thickness = config.thickness;\r\n        const holeConfig = getHoleConfig();\r\n        const paddedHoleConfig = {};\r\n        paddedHoleConfig.minPaddedHoleSize = holeConfig.minHoleSize + thickness;\r\n        paddedHoleConfig.maxPaddedHoleSize = holeConfig.maxHoleSize + thickness;\r\n        paddedHoleConfig.minPaddedHoleInterval = Math.max(0, holeConfig.minHoleInterval - thickness);\r\n        paddedHoleConfig.maxPaddedHoleInterval = Math.max(0, holeConfig.maxHoleInterval - thickness);\r\n        return paddedHoleConfig;\r\n    }\r\n\r\n    function defaultPlayerData(id) {\r\n        return config.defaultPlayers.find(defaultPlayer => defaultPlayer.id === id);\r\n    }\r\n\r\n    function defaultPlayer(id) {\r\n        const playerData = defaultPlayerData(id);\r\n        if (playerData === undefined) {\r\n            throw new TypeError(`There is no default player with ID ${id}.`);\r\n        }\r\n        return new Player(playerData.id,\r\n                          playerData.name,\r\n                          playerData.color,\r\n                          playerData.keyL,\r\n                          playerData.keyR,\r\n                          getPaddedHoleConfig());\r\n    }\r\n\r\n    function applyCursorBehavior() {\r\n        const mouseIsBeingUsed = game.getPlayers().some(hasMouseButton);\r\n        let behavior;\r\n        switch (preferenceManager.getCached(STRINGS.pref_key_cursor)) {\r\n            case STRINGS.pref_value_cursor_hidden_when_mouse_used_by_player:\r\n                behavior = mouseIsBeingUsed ? STRINGS.cursor_hidden : STRINGS.cursor_visible;\r\n                break;\r\n            case STRINGS.pref_value_cursor_always_hidden:\r\n                behavior = STRINGS.cursor_hidden;\r\n                break;\r\n            default:\r\n                behavior = STRINGS.cursor_visible;\r\n        }\r\n        log(`Setting cursor behavior to ${behavior}.`);\r\n        guiController.setCursorBehavior(behavior);\r\n    }\r\n\r\n    function proceedKeyPressedInLobby() {\r\n        const numberOfReadyPlayers = game.getNumberOfPlayers();\r\n        if (numberOfReadyPlayers > 0) {\r\n            clearMessages();\r\n            applyCursorBehavior();\r\n            game.setMode(numberOfReadyPlayers === 1 ? Game.PRACTICE : Game.COMPETITIVE);\r\n            game.start();\r\n        }\r\n    }\r\n\r\n    function hasMouseButton(player) {\r\n        return player.usesAnyMouseButton();\r\n    }\r\n\r\n    function checkForDangerousInput() {\r\n        if (game.getPlayers().some((player) => player.hasKey(KEY.CTRL))) {\r\n            guiController.showMessage(config.messages.ctrl);\r\n        } else {\r\n            guiController.hideMessage(config.messages.ctrl);\r\n        }\r\n\r\n        if (game.getPlayers().some((player) => player.hasKey(KEY.ALT))) {\r\n            guiController.showMessage(config.messages.alt);\r\n        } else {\r\n            guiController.hideMessage(config.messages.alt);\r\n        }\r\n\r\n        if (game.getPlayers().some(hasMouseButton)) {\r\n            guiController.showMessage(config.messages.mouse);\r\n        } else {\r\n            guiController.hideMessage(config.messages.mouse);\r\n        }\r\n    }\r\n\r\n    function addPlayer(id) {\r\n        game.addPlayer(defaultPlayer(id));\r\n        checkForDangerousInput();\r\n        clearTimeout(hintPickTimer);\r\n        guiController.hideMessage(config.messages.pick);\r\n        clearTimeout(hintProceedTimer);\r\n        hintProceedTimer = setTimeout(() => {\r\n            guiController.showMessage(config.messages.proceed);\r\n        }, config.hintDelay);\r\n    }\r\n\r\n    function removePlayer(id) {\r\n        game.removePlayer(id);\r\n        checkForDangerousInput();\r\n        clearTimeout(hintProceedTimer);\r\n        if (game.getNumberOfPlayers() === 0) {\r\n            guiController.hideMessage(config.messages.proceed);\r\n        } else {\r\n            hintProceedTimer = setTimeout(() => {\r\n                guiController.showMessage(config.messages.proceed);\r\n            }, config.hintDelay);\r\n        }\r\n    }\r\n\r\n    function defaultPlayerHasLeftKey(playerData, pressedKey) {\r\n        return pressedKey === playerData.keyL || (playerData.keyL instanceof Array && playerData.keyL.includes(pressedKey));\r\n    }\r\n\r\n    function defaultPlayerHasRightKey(playerData, pressedKey) {\r\n        return pressedKey === playerData.keyR || (playerData.keyR instanceof Array && playerData.keyR.includes(pressedKey));\r\n    }\r\n\r\n    function addOrRemovePlayer(playerData, pressedKey) {\r\n        if (defaultPlayerHasLeftKey(playerData, pressedKey)) {\r\n            addPlayer(playerData.id);\r\n        } else if (defaultPlayerHasRightKey(playerData, pressedKey)) {\r\n            removePlayer(playerData.id);\r\n        }\r\n    }\r\n\r\n    function eventConsumer(event) {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    function keyPressedInLobby(pressedKey) {\r\n        config.defaultPlayers.forEach((playerData) => {\r\n            addOrRemovePlayer(playerData, pressedKey);\r\n        });\r\n    }\r\n\r\n    function mouseClickedInLobby(button) {\r\n        config.defaultPlayers.forEach((playerData) => {\r\n            addOrRemovePlayer(playerData, MOUSE.pack(button));\r\n        });\r\n    }\r\n\r\n    function keyHandler(event) {\r\n        const callback = game.isStarted() ? gameKeyHandler\r\n                                          : guiController.isShowingSettings() ? settingsKeyHandler\r\n                                                                              : lobbyKeyHandler;\r\n        guiController.keyPressed(event, callback);\r\n    }\r\n\r\n    function mouseHandler(event) {\r\n        const callback = game.isStarted() ? gameMouseHandler\r\n                                          : guiController.isShowingSettings() ? settingsMouseHandler\r\n                                                                              : lobbyMouseHandler;\r\n        guiController.mouseClicked(event, callback);\r\n    }\r\n\r\n    function unloadHandler(event) {\r\n        if (game.isStarted()) {\r\n            gameUnloadHandler();\r\n        }\r\n    }\r\n\r\n    function lobbyKeyHandler(event) {\r\n        if (shouldPreventDefault(event.keyCode)) {\r\n            event.preventDefault();\r\n        }\r\n        const pressedKey = event.keyCode;\r\n        if (pressedKey === KEY_RELOAD) {\r\n            reload();\r\n        } else if (isProceedKey(pressedKey)) {\r\n            proceedKeyPressedInLobby();\r\n        } else {\r\n            keyPressedInLobby(pressedKey);\r\n        }\r\n    }\r\n\r\n    function lobbyMouseHandler(event) {\r\n        event.preventDefault();\r\n        mouseClickedInLobby(event.button);\r\n    }\r\n\r\n    function reload() {\r\n        window.location.reload();\r\n    }\r\n\r\n    function quitGame() {\r\n        game.quit();\r\n        guiController.gameQuit();\r\n        game = newGame();\r\n    }\r\n\r\n    function gameKeyHandler(event) {\r\n        if (shouldPreventDefault(event.keyCode)) {\r\n            event.preventDefault();\r\n        }\r\n        const pressedKey = event.keyCode;\r\n        if (isProceedKey(pressedKey)) {\r\n            if (game.shouldQuitOnProceedKey()) {\r\n                quitGame();\r\n            } else {\r\n                game.proceedKeyPressed();\r\n            }\r\n        } else if (isQuitKey(pressedKey) && game.shouldQuitOnQuitKey()) {\r\n            if (preferenceManager.getCached(STRINGS.pref_key_confirm_quit) === true && !(guiController.isShowingDialog())) {\r\n                guiController.showDialog(config.dialogs.confirmation_quit);\r\n            } else {\r\n                quitGame();\r\n            }\r\n        } else if (pressedKey === KEY_RELOAD) {\r\n            if (preferenceManager.getCached(STRINGS.pref_key_confirm_reload) === true) {\r\n                if (game.shouldShowReloadConfirmationOnReloadKey() && !(guiController.isShowingDialog())) {\r\n                    guiController.showDialog(config.dialogs.confirmation_reload, reload);\r\n                }\r\n            } else {\r\n                reload();\r\n            }\r\n        }\r\n    }\r\n\r\n    function gameMouseHandler(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    function gameUnloadHandler(event) {\r\n        // A simple trick to prevent accidental unloading of the entire game.\r\n        const message = TEXT.hint_unload;\r\n        event.returnValue = message; // Gecko, Trident, Chrome 34+\r\n        return message;              // Gecko, Webkit, Chrome <34\r\n    }\r\n\r\n    function settingsKeyHandler(event) {\r\n        const pressedKey = event.keyCode;\r\n        if (isQuitKey(pressedKey)) {\r\n            hideSettings();\r\n        } else if (pressedKey === KEY_RELOAD) {\r\n            reload();\r\n        }\r\n    }\r\n\r\n    function settingsMouseHandler(event) {\r\n        // Intentionally empty.\r\n    }\r\n\r\n    function showSettings() {\r\n        clearTimeout(hintPickTimer);\r\n        clearTimeout(hintProceedTimer);\r\n        try {\r\n            guiController.updateSettingsForm(preferenceManager.getAllPreferencesWithValues_saved());\r\n        } catch(e) {\r\n            logWarning(\"Could not load settings from localStorage. Using cached settings instead.\");\r\n            guiController.updateSettingsForm(preferenceManager.getAllPreferencesWithValues_cached());\r\n            handleSettingsAccessError(e);\r\n        }\r\n        guiController.showSettings();\r\n    }\r\n\r\n    function hideSettings() {\r\n        guiController.parseSettingsForm().forEach((newSetting) => {\r\n            try {\r\n                preferenceManager.set(newSetting.key, newSetting.value);\r\n            } catch(e) {\r\n                logWarning(`Could not save setting '${newSetting.key}' to localStorage.`);\r\n                handleSettingsAccessError(e);\r\n            }\r\n        });\r\n        applySettings();\r\n        guiController.hideSettings();\r\n    }\r\n\r\n    function applySettings() {\r\n        try {\r\n            // Edge fix:\r\n            setEdgeMode(preferenceManager.getSaved(STRINGS.pref_key_edge_fix));\r\n            // Hints:\r\n            guiController.setMessageMode(preferenceManager.getSaved(STRINGS.pref_key_hints));\r\n            // Prevent spawnkill:\r\n            game.setPreventSpawnkill(preferenceManager.getSaved(STRINGS.pref_key_prevent_spawnkill));\r\n        } catch(e) {\r\n            logWarning(\"Could not load settings from localStorage. Using cached settings instead.\");\r\n            setEdgeMode(preferenceManager.getCached(STRINGS.pref_key_edge_fix));\r\n            guiController.setMessageMode(preferenceManager.getCached(STRINGS.pref_key_hints));\r\n            game.setPreventSpawnkill(preferenceManager.getCached(STRINGS.pref_key_prevent_spawnkill));\r\n            handleSettingsAccessError(e);\r\n        }\r\n    }\r\n\r\n    function handleSettingsAccessError(error) {\r\n        if (error.name === STRINGS.error_name_security) {\r\n            guiController.showMessage(config.messages.preferences_access_denied);\r\n        } else {\r\n            guiController.showMessage(config.messages.preferences_localstorage_failed);\r\n        }\r\n    }\r\n\r\n    function clearMessages() {\r\n        clearTimeout(hintPickTimer);\r\n        clearTimeout(hintProceedTimer);\r\n        guiController.clearMessages();\r\n    }\r\n\r\n    function addShowSettingsButtonEventListener() {\r\n        const showSettingsButton = byID(STRINGS.id_button_show_settings);\r\n        if (showSettingsButton instanceof HTMLElement) {\r\n            showSettingsButton.addEventListener(\"mousedown\", eventConsumer);\r\n            showSettingsButton.addEventListener(\"click\", showSettings);\r\n        }\r\n    }\r\n\r\n    function addHideSettingsButtonEventListener() {\r\n        const hideSettingsButton = byID(STRINGS.id_button_hide_settings);\r\n        if (hideSettingsButton instanceof HTMLElement) {\r\n            hideSettingsButton.addEventListener(\"mousedown\", eventConsumer);\r\n            hideSettingsButton.addEventListener(\"click\", hideSettings);\r\n        }\r\n    }\r\n\r\n    function addEventListeners() {\r\n        log(\"Adding event listeners ...\");\r\n\r\n        // Hide/show settings:\r\n        addShowSettingsButtonEventListener();\r\n        addHideSettingsButtonEventListener();\r\n\r\n        // General event handlers:\r\n        document.addEventListener(\"keydown\", keyHandler);\r\n        document.addEventListener(\"mousedown\", mouseHandler);\r\n        document.addEventListener(\"contextmenu\", eventConsumer);\r\n        window.addEventListener(\"beforeunload\", unloadHandler);\r\n\r\n        // Player input:\r\n        document.addEventListener(\"keydown\", Keyboard.onKeydown.bind(Keyboard));\r\n        document.addEventListener(\"keyup\", Keyboard.onKeyup.bind(Keyboard));\r\n        document.addEventListener(\"mousedown\", Mouse.onMousedown.bind(Mouse));\r\n        document.addEventListener(\"mouseup\", Mouse.onMouseup.bind(Mouse));\r\n\r\n        log(\"Done.\");\r\n    }\r\n\r\n    addEventListeners();\r\n\r\n    function newGame() {\r\n        return new Game(config, Renderer(canvas_main, canvas_overlay), guiController);\r\n    }\r\n\r\n    const guiController = GUIController(config);\r\n    let game = newGame();\r\n\r\n    let hintProceedTimer;\r\n    let hintPickTimer = setTimeout(() => {\r\n        guiController.showMessage(config.messages.pick);\r\n    }, config.hintDelay);\r\n\r\n    applySettings();\r\n\r\n    return {\r\n        getConfig: () => config,\r\n        getGame: () => game,\r\n        addPlayer: (playerOrID) => {\r\n            const player = Player.isPlayer(playerOrID) ? playerOrID : new Player(playerOrID);\r\n            game.addPlayer(player);\r\n        }\r\n    };\r\n\r\n})();\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/Zatacka.js","import { Preference } from \"./lib/preferences/Preference.js\";\r\nimport { BooleanPreference } from \"./lib/preferences/BooleanPreference.js\";\r\nimport { RangePreference } from \"./lib/preferences/RangePreference.js\";\r\nimport { IntegerRangePreference } from \"./lib/preferences/IntegerRangePreference.js\";\r\nimport { MultichoicePreference } from \"./lib/preferences/MultichoicePreference.js\";\r\n\r\nimport { Dialog } from \"./lib/Dialog.js\";\r\nimport { ConfirmationDialog } from \"./lib/ConfirmationDialog.js\";\r\n\r\nimport { byID, flush, isHTMLElement, log, logWarning, logError, KEY, Keyboard } from \"./lib/Utilities.js\";\r\nimport TEXT from \"./locales/Zatacka.en_US.js\";\r\nimport STRINGS from \"./strings.js\";\r\n\r\nexport function GUIController(cfg) {\r\n\r\n    const config = cfg;\r\n    const lobby = byID(\"lobby\");\r\n    const controls = byID(\"controls\");\r\n    const canvas_main = byID(\"canvas_main\");\r\n    const canvas_overlay = byID(\"canvas_overlay\");\r\n    const left = byID(\"left\");\r\n    const scoreboard = byID(\"scoreboard\");\r\n    const results = byID(\"results\");\r\n    const KONEC_HRY = byID(\"KONEC_HRY\");\r\n    const messagesContainer = byID(\"messages\");\r\n    // const settingsContainer = byID(\"settings\");\r\n    const dialogsOverlay = byID(\"dialogs\");\r\n    const settingsForm = byID(\"settings-form\");\r\n\r\n    const ORIGINAL_LEFT_WIDTH = left.offsetWidth;\r\n    const MULTICHOICE_LABEL_MAX_LENGTH_FOR_HALFWIDTH_FIELDSET = 22; // More characters than this will result in a full-width div/fieldset.\r\n    const FLOAT_RANGE_PREFERENCE_STEP = 0.01;\r\n\r\n    const BUTTON_TAG_NAME = \"button\";\r\n    const BUTTON_NODE_CLASS = HTMLButtonElement;\r\n\r\n    const LABEL_ALERT_OK = TEXT.label_button_alert_ok;\r\n    const LABEL_CONFIRM_YES = TEXT.label_button_confirm_yes;\r\n    const LABEL_CONFIRM_NO = TEXT.label_button_confirm_no;\r\n\r\n    let showingSettings = false;\r\n    let currentMessages = [];\r\n    let queuedDialogs = [];\r\n    let currentDialogWithBox = null;\r\n\r\n    class DialogWithBox {\r\n        constructor(dialog, box) {\r\n            this.dialog = dialog;\r\n            this.box = box;\r\n        }\r\n    }\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n    function hideLobby() {\r\n        log(\"Hiding lobby.\");\r\n        lobby.classList.add(STRINGS.class_hidden);\r\n    }\r\n\r\n    function showLobby() {\r\n        log(\"Showing lobby.\");\r\n        lobby.classList.remove(STRINGS.class_hidden);\r\n    }\r\n\r\n    function showDialogsOverlay() {\r\n        dialogsOverlay.classList.remove(STRINGS.class_hidden);\r\n    }\r\n\r\n    function hideDialogsOverlay() {\r\n        dialogsOverlay.classList.add(STRINGS.class_hidden);\r\n    }\r\n\r\n    function isLobbyEntry(element) {\r\n        return isHTMLElement(element) && element.children.length >= 2;\r\n    }\r\n\r\n    function isButton(element) {\r\n        return element instanceof BUTTON_NODE_CLASS;\r\n    }\r\n\r\n    function showDialogRightAway(dialog) {\r\n        const dialogBox = dialogHTMLElement(dialog);\r\n        currentDialogWithBox = new DialogWithBox(dialog, dialogBox);\r\n        setTemporaryCursorVisibility(true);\r\n        showDialogsOverlay();\r\n        dialogsOverlay.appendChild(dialogBox);\r\n        // A dialog should have its last button focused:\r\n        dialogBox.querySelector(\"button:last-of-type\").focus();\r\n    }\r\n\r\n    function currentDialogClosed() {\r\n        currentDialogWithBox.box.remove();\r\n        currentDialogWithBox = null;\r\n        if (anyQueuedDialogs()) {\r\n            // There is at least one dialog waiting. Show it:\r\n            showDialogRightAway(queuedDialogs.shift());\r\n        } else {\r\n            // No more dialogs. Restore:\r\n            setTemporaryCursorVisibility(false);\r\n            hideDialogsOverlay();\r\n        }\r\n    }\r\n\r\n    function anyQueuedDialogs() {\r\n        return queuedDialogs.length > 0;\r\n    }\r\n\r\n    function escapeShouldCloseCurrentDialog() {\r\n        return currentDialogWithBox.dialog instanceof ConfirmationDialog;\r\n    }\r\n\r\n    function dialogHTMLElementBoilerplate(text) {\r\n        const dialogBox = document.createElement(\"div\");\r\n        dialogBox.classList.add(STRINGS.class_dialog);\r\n        const label = document.createElement(\"p\");\r\n        label.textContent = text;\r\n        dialogBox.appendChild(label);\r\n        return dialogBox;\r\n    }\r\n\r\n    function alertDialogHTMLElement(dialog) {\r\n        const alertDialogBox = dialogHTMLElementBoilerplate(dialog.text);\r\n        alertDialogBox.classList.add(STRINGS.class_dialog_alert);\r\n        const buttonOK = document.createElement(\"button\");\r\n        buttonOK.textContent = LABEL_ALERT_OK;\r\n        alertDialogBox.appendChild(buttonOK);\r\n\r\n        function alertDialogEventHandler() {\r\n            currentDialogClosed();\r\n        }\r\n        // Event listener:\r\n        buttonOK.addEventListener(\"click\", alertDialogEventHandler);\r\n\r\n        return alertDialogBox;\r\n    }\r\n\r\n    function confirmationDialogHTMLElement(confirmationDialog) {\r\n        const confirmationDialogBox = dialogHTMLElementBoilerplate(confirmationDialog.text);\r\n        confirmationDialogBox.classList.add(STRINGS.class_dialog_confirmation);\r\n        const buttonYes = document.createElement(\"button\");\r\n        buttonYes.textContent = LABEL_CONFIRM_YES;\r\n        const buttonNo  = document.createElement(\"button\");\r\n        buttonNo.textContent = LABEL_CONFIRM_NO;\r\n        confirmationDialogBox.appendChild(buttonYes);\r\n        confirmationDialogBox.appendChild(buttonNo);\r\n\r\n        function confirmationDialogEventHandler(response) {\r\n            return () => {\r\n                currentDialogClosed();\r\n                if (response === true) {\r\n                    confirmationDialog.callback();\r\n                }\r\n            };\r\n        }\r\n        // Event listeners:\r\n        buttonYes.addEventListener(\"click\", confirmationDialogEventHandler(true));\r\n        buttonNo.addEventListener(\"click\", confirmationDialogEventHandler(false));\r\n\r\n        return confirmationDialogBox;\r\n    }\r\n\r\n    function dialogHTMLElement(dialog) {\r\n        if (dialog instanceof ConfirmationDialog) {\r\n            return confirmationDialogHTMLElement(dialog);\r\n        } else if (dialog instanceof Dialog) {\r\n            return alertDialogHTMLElement(dialog);\r\n        }\r\n        throw new TypeError(`${dialog} is not a valid dialog.`);\r\n    }\r\n\r\n    function resetScoreboardEntry(entry) {\r\n        entry.classList.remove(\"active\");\r\n    }\r\n\r\n    function resetScoreboard() {\r\n        Array.from(scoreboard.children).forEach(resetScoreboardEntry);\r\n    }\r\n\r\n    function resetResults() {\r\n        Array.from(results.children).forEach(resetScoreboardEntry);\r\n    }\r\n\r\n    function setCursorBehavior(behavior) {\r\n        switch (behavior) {\r\n            case STRINGS.cursor_visible:\r\n                document.body.classList.remove(STRINGS.class_nocursor);\r\n                break;\r\n            case STRINGS.cursor_hidden:\r\n                document.body.classList.add(STRINGS.class_nocursor);\r\n                break;\r\n            default:\r\n                logError(`Cannot set cursor behavior to '${behavior}'.`);\r\n        }\r\n    }\r\n\r\n    function setTemporaryCursorVisibility(tempCursorActive) {\r\n        if (tempCursorActive) {\r\n            document.body.classList.add(STRINGS.class_tempcursor);\r\n        } else {\r\n            document.body.classList.remove(STRINGS.class_tempcursor);\r\n        }\r\n    }\r\n\r\n    function settingsEntryShouldBeHalfWidth(preference) {\r\n        if (preference instanceof MultichoicePreference) {\r\n            const longestValueLabel = preference.labels.reduce((acc, current) => current.length > acc.length ? current : acc);\r\n            return longestValueLabel.length <= MULTICHOICE_LABEL_MAX_LENGTH_FOR_HALFWIDTH_FIELDSET;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function settingsEntryHTMLElement(preference, preferenceValue) {\r\n        if (!(preference instanceof Preference)) {\r\n            throw new TypeError(`${preference} is not a preference.`);\r\n        }\r\n\r\n        // Common\r\n        const div = document.createElement(\"div\");\r\n        const label = document.createElement(\"label\");\r\n        label.textContent = preference.label;\r\n        label.setAttribute(\"for\", `${STRINGS.html_name_preference_prefix}${preference.key}`);\r\n        const description = document.createElement(\"aside\");\r\n        description.textContent = preference.description;\r\n        description.classList.add(STRINGS.class_description);\r\n\r\n        // Boolean\r\n        if (preference instanceof BooleanPreference) {\r\n            const input = document.createElement(\"input\");\r\n            input.type = \"checkbox\";\r\n            input.dataset.key = preference.key;\r\n            input.id = STRINGS.html_name_preference_prefix + preference.key;\r\n            input.checked = preferenceValue === true;\r\n            div.appendChild(input);\r\n            div.appendChild(label);\r\n        }\r\n\r\n        // Multichoice\r\n        else if (preference instanceof MultichoicePreference) {\r\n            const fieldset = document.createElement(\"fieldset\");\r\n            const legend = document.createElement(\"legend\");\r\n            legend.textContent = preference.label;\r\n            fieldset.appendChild(legend);\r\n            preference.values.forEach((value, index) => {\r\n                const id = STRINGS.html_name_preference_prefix + preference.key + \"-\" + preference.values[index];\r\n                const radioButton = document.createElement(\"input\");\r\n                radioButton.type = \"radio\";\r\n                radioButton.id = id;\r\n                radioButton.name = STRINGS.html_name_preference_prefix + preference.key;\r\n                radioButton.value = value;\r\n                radioButton.dataset.key = preference.key;\r\n                radioButton.checked = preferenceValue === value;\r\n                const radioButtonLabel = document.createElement(\"label\");\r\n                radioButtonLabel.textContent = preference.labels[index];\r\n                radioButtonLabel.setAttribute(\"for\", id);\r\n                fieldset.appendChild(radioButton);\r\n                fieldset.appendChild(radioButtonLabel);\r\n            });\r\n            div.appendChild(fieldset);\r\n            if (settingsEntryShouldBeHalfWidth(preference)) {\r\n                div.classList.add(STRINGS.class_half_width);\r\n            }\r\n        }\r\n\r\n        // Range\r\n        else if (preference instanceof RangePreference) {\r\n            const isIntegerRange = preference instanceof IntegerRangePreference;\r\n            div.appendChild(label);\r\n            const input = document.createElement(\"input\");\r\n            input.type = \"number\";\r\n            input.dataset.key = preference.key;\r\n            input.dataset.numberType = isIntegerRange ? STRINGS.pref_number_type_integer : STRINGS.pref_number_type_float;\r\n            input.name = STRINGS.html_name_preference_prefix + preference.key;\r\n            input.setAttribute(\"step\", isIntegerRange ? 1 : FLOAT_RANGE_PREFERENCE_STEP);\r\n            input.setAttribute(\"min\", preference.min);\r\n            input.setAttribute(\"max\", preference.max);\r\n            input.value = preferenceValue;\r\n            div.appendChild(input);\r\n        }\r\n\r\n        div.appendChild(description);\r\n        return div;\r\n    }\r\n\r\n\r\n    // PUBLIC API\r\n\r\n    function keyPressed(event, callback) {\r\n        if (isShowingDialog()) {\r\n            const currentlyFocusedButton = currentDialogWithBox.box.querySelector(`${BUTTON_TAG_NAME}:focus`);\r\n            let previousButton, nextButton;\r\n            if (isButton(currentlyFocusedButton)) {\r\n                previousButton = isButton(currentlyFocusedButton.previousSibling) ? currentlyFocusedButton.previousSibling : null;\r\n                nextButton = isButton(currentlyFocusedButton.nextSibling) ? currentlyFocusedButton.nextSibling : null;\r\n            }\r\n            switch (event.keyCode) {\r\n                case KEY.SPACE:\r\n                case KEY.ENTER:\r\n                    // Necessary because buttons do not automatically react to Space until keyup, making them feel sluggish compared to when Enter is used.\r\n                    if (isButton(currentlyFocusedButton)) {\r\n                        currentlyFocusedButton.click();\r\n                    }\r\n                    break;\r\n                case KEY.ESCAPE:\r\n                    if (escapeShouldCloseCurrentDialog()) {\r\n                        currentDialogClosed();\r\n                    }\r\n                    break;\r\n                case KEY.TAB:\r\n                    if (Keyboard.isDown(KEY.SHIFT)) {\r\n                        if (isButton(previousButton)) {\r\n                            previousButton.focus();\r\n                        }\r\n                    } else if (isButton(nextButton)) {\r\n                        nextButton.focus();\r\n                    }\r\n                    break;\r\n                case KEY.LEFT_ARROW:\r\n                    if (isButton(previousButton)) {\r\n                        previousButton.focus();\r\n                    }\r\n                    break;\r\n                case KEY.RIGHT_ARROW:\r\n                    if (isButton(nextButton)) {\r\n                        nextButton.focus();\r\n                    }\r\n                    break;\r\n                default:\r\n                    callback(event);\r\n            }\r\n        } else {\r\n            callback(event);\r\n        }\r\n    }\r\n\r\n    function mouseClicked(event, callback) {\r\n        if (isShowingDialog()) {\r\n            // Do nothing particular, but consume the event.\r\n        } else {\r\n            callback(event);\r\n        }\r\n    }\r\n\r\n    function showDialog(dialog) {\r\n        if (isShowingDialog()) {\r\n            queuedDialogs.push(dialog);\r\n        } else {\r\n            showDialogRightAway(dialog);\r\n        }\r\n    }\r\n\r\n    function isShowingDialog() {\r\n        return currentDialogWithBox !== null;\r\n    }\r\n\r\n    function setEdgePadding(padding) {\r\n        left.style.width = `${ORIGINAL_LEFT_WIDTH + padding}px`;\r\n    }\r\n\r\n    function playerReady(id) {\r\n        const index = id - 1;\r\n        const entry = controls.children[index];\r\n        if (!isLobbyEntry(entry)) {\r\n            logWarning(`Cannot mark player ${id} as ready because controls.children[${index}] (${controls.children[index]}) is not a valid lobby entry.`);\r\n        } else {\r\n            entry.children[1].classList.add(STRINGS.class_active);\r\n        }\r\n    }\r\n\r\n    function playerUnready(id) {\r\n        const index = id - 1;\r\n        const entry = controls.children[index];\r\n        if (!isLobbyEntry(entry)) {\r\n            logWarning(`Cannot mark player ${id} as unready because controls.children[${index}] (${controls.children[index]}) is not a valid lobby entry.`);\r\n        } else {\r\n            entry.children[1].classList.remove(STRINGS.class_active);\r\n        }\r\n    }\r\n\r\n    function allPlayersUnready() {\r\n        for (let id = 1; id <= controls.children.length; id++) {\r\n            playerUnready(id);\r\n        }\r\n    }\r\n\r\n    function gameStarted() {\r\n        hideLobby();\r\n    }\r\n\r\n    function gameQuit() {\r\n        hideKonecHry();\r\n        showLobby();\r\n        clearMessages();\r\n        resetScoreboard();\r\n        resetResults();\r\n        allPlayersUnready();\r\n        setCursorBehavior(STRINGS.cursor_visible);\r\n    }\r\n\r\n    function konecHry() {\r\n        showKonecHry();\r\n        resetScoreboard();\r\n    }\r\n\r\n    function showKonecHry() {\r\n        KONEC_HRY.classList.remove(STRINGS.class_hidden);\r\n    }\r\n\r\n    function hideKonecHry() {\r\n        KONEC_HRY.classList.add(STRINGS.class_hidden);\r\n    }\r\n\r\n    function showMessage(message) {\r\n        if (!currentMessages.includes(message)) {\r\n            currentMessages.push(message);\r\n        }\r\n        updateMessages(currentMessages);\r\n    }\r\n\r\n    function showSettings() {\r\n        showingSettings = true;\r\n        settings.classList.remove(STRINGS.class_hidden);\r\n    }\r\n\r\n    function hideSettings() {\r\n        showingSettings = false;\r\n        settings.classList.add(STRINGS.class_hidden);\r\n    }\r\n\r\n    function isShowingSettings() {\r\n        return showingSettings;\r\n    }\r\n\r\n    function updateSettingsForm(preferencesWithData) {\r\n        flush(settingsForm);\r\n        let settingsEntries = preferencesWithData.map((preferenceWithData) => settingsEntryHTMLElement(preferenceWithData.preference, preferenceWithData.value));\r\n        // Add special class to half-width divs on the right hand side:\r\n        let consecutiveHalfWidthDivs = 0;\r\n        for (let i = 0; i < settingsEntries.length; i++) {\r\n            const currentEntry = settingsEntries[i];\r\n            if (currentEntry.classList.contains(STRINGS.class_half_width)) {\r\n                consecutiveHalfWidthDivs++;\r\n                if (consecutiveHalfWidthDivs % 2 === 0) {\r\n                    // Even number of consecutive half-width divs, so this one will be on the right hand side.\r\n                    currentEntry.classList.add(STRINGS.class_right_hand_side);\r\n                }\r\n            } else {\r\n                consecutiveHalfWidthDivs = 0;\r\n            }\r\n        }\r\n        settingsEntries.forEach((settingsEntry) => {\r\n            settingsForm.appendChild(settingsEntry);\r\n        });\r\n    }\r\n\r\n    function parseSettingsForm() {\r\n        const newSettings = [];\r\n        // <input> elements:\r\n        const inputs = settingsForm.querySelectorAll(\"input\");\r\n        Array.from(inputs).forEach((input) => {\r\n            if (input.type === \"checkbox\") {\r\n                // checkbox\r\n                newSettings.push({ key: input.dataset.key, value: input.checked });\r\n            } else if (input.type === \"radio\") {\r\n                // radio\r\n                if (input.checked === true) {\r\n                    newSettings.push({ key: input.dataset.key, value: input.value });\r\n                }\r\n            } else if (input.type === \"number\") {\r\n                // number\r\n                newSettings.push({ key: input.dataset.key, value: (input.dataset.numberType === STRINGS.pref_number_type_integer ? parseInt : parseFloat)(input.value) });\r\n            } else {\r\n                // text\r\n                newSettings.push({ key: input.dataset.key, value: input.value.toString() });\r\n            }\r\n        });\r\n        // <select> elements:\r\n        const selects = settingsForm.querySelectorAll(\"select\");\r\n        Array.from(selects).forEach((select) => {\r\n            newSettings.push({ key: select.dataset.key, value: select.options[select.selectedIndex].value });\r\n        });\r\n        return newSettings;\r\n    }\r\n\r\n    function hideMessage(message) {\r\n        currentMessages = currentMessages.filter(msg => msg !== message);\r\n        updateMessages(currentMessages);\r\n    }\r\n\r\n    function updateMessages(messages) {\r\n        if (!isHTMLElement(messagesContainer)) {\r\n            logWarning(`Cannot update messages because ${messagesContainer} is not an HTML element.`);\r\n        } else {\r\n            flush(messagesContainer);\r\n            messages.forEach((message) => {\r\n                messagesContainer.insertBefore(message.toHTMLElement(), null);\r\n            });\r\n        }\r\n    }\r\n\r\n    function clearMessages() {\r\n        currentMessages = [];\r\n        updateMessages(currentMessages);\r\n    }\r\n\r\n    function setMessageMode(mode) {\r\n        log(`Setting message mode to ${mode}.`);\r\n        switch (mode) {\r\n            case STRINGS.pref_value_hints_warnings_only:\r\n                messagesContainer.classList.remove(STRINGS.class_hints_none);\r\n                messagesContainer.classList.add(STRINGS.class_hints_warnings_only);\r\n                break;\r\n            case STRINGS.pref_value_hints_none:\r\n                messagesContainer.classList.remove(STRINGS.class_hints_warnings_only);\r\n                messagesContainer.classList.add(STRINGS.class_hints_none);\r\n                break;\r\n            default:\r\n                messagesContainer.classList.remove(STRINGS.class_hints_warnings_only);\r\n                messagesContainer.classList.remove(STRINGS.class_hints_none);\r\n        }\r\n    }\r\n\r\n    function updateBoard(board, id, newScore) {\r\n        if (!isHTMLElement(board)) {\r\n            logWarning(`Cannot update any entry in ${board} because it is not an HTML element.`);\r\n        } else {\r\n            const entry = board.children[id-1];\r\n            if (!isHTMLElement(entry)) {\r\n                logWarning(`Cannot update score of player ${id} because ${entry} is not an HTML element.`);\r\n            } else {\r\n                // The entry is an HTML element; let's update it!\r\n                const digitClassFactory = digit => \"d\"+digit;\r\n                const createDigit = () => document.createElement(\"div\");\r\n                // Turn 528 into [\"d5\", \"d2\", \"d8\"]:\r\n                const newScoreDigitClasses = newScore.toString().split(\"\").map(digitClassFactory);\r\n                // Remove everything from the entry element before we insert new digits:\r\n                flush(entry);\r\n                entry.classList.add(\"active\");\r\n                newScoreDigitClasses.forEach((digitClass, index) => {\r\n                    let digitElement = createDigit(); // A completely clean element ...\r\n                    digitElement.classList.add(newScoreDigitClasses[index]); // ... that now has a digit class.\r\n                    entry.appendChild(digitElement);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    function updateScoreOfPlayer(id, newScore) {\r\n        updateBoard(scoreboard, id, newScore);\r\n        updateBoard(results, id, newScore);\r\n    }\r\n\r\n    return {\r\n        keyPressed,\r\n        mouseClicked,\r\n        playerReady,\r\n        playerUnready,\r\n        gameStarted,\r\n        gameQuit,\r\n        konecHry,\r\n        showDialog,\r\n        isShowingDialog,\r\n        showSettings,\r\n        hideSettings,\r\n        isShowingSettings,\r\n        updateSettingsForm,\r\n        parseSettingsForm,\r\n        updateScoreOfPlayer,\r\n        updateMessages,\r\n        showMessage,\r\n        hideMessage,\r\n        clearMessages,\r\n        setMessageMode,\r\n        setCursorBehavior,\r\n        setEdgePadding\r\n    };\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./js/GUIController.js","import MainLoop from \"./lib/mainloop.min.js\";\r\nimport { Player } from \"./Player.js\";\r\nimport { Round } from \"./Round.js\";\r\nimport { isInt, log, logWarning, logError, randomFloat, round, forfor, sameAbs, normalizeAngle } from \"./lib/Utilities.js\";\r\n\r\nexport class Game {\r\n    constructor(config, renderer, guiController) {\r\n        // Class variables:\r\n        this.constructor.PRACTICE = \"practice\";\r\n        this.constructor.COMPETITIVE = \"competitive\";\r\n        this.constructor.DEFAULT_MODE = this.constructor.PRACTICE;\r\n        this.constructor.DEFAULT_TARGET_SCORE = 10;\r\n        this.constructor.MAX_TARGET_SCORE = 1000;\r\n        this.constructor.MAX_PLAYERS = 255; // since we use a Uint8Array\r\n        this.constructor.MAX_QUOTA_THAT_SPAWN_CIRCLES_MAY_FILL = 0.5; // out of available spawn area\r\n        this.constructor.DESIRED_MINIMUM_SPAWN_DISTANCE_TURNING_RADIUS_FACTOR = 1;\r\n        this.constructor.KONEC_HRY = \"KONEC HRY!\";\r\n\r\n        if (renderer === undefined) {\r\n            throw new TypeError(\"Cannot create a Game with no renderer.\");\r\n        } else if (!this.constructor.isRenderer(renderer)) {\r\n            throw new TypeError(`${renderer} is not a valid renderer.`);\r\n        }\r\n\r\n        if (guiController === undefined) {\r\n            throw new TypeError(\"Cannot create a Game with no GUI controller.\");\r\n        } else if (!this.constructor.isGUIController(guiController)) {\r\n            throw new TypeError(`${guiController} is not a valid GUI controller.`);\r\n        }\r\n\r\n        // Instance variables:\r\n        this.config = config;\r\n        this.width = config.canvas.width;\r\n        this.height = config.canvas.height;\r\n        this.pixels = null; // The actual array is created in start(), because the canvas width and height may have changed by then.\r\n        this.players = [];\r\n        this.rounds = [];\r\n        this.renderer = renderer;\r\n        this.guiController = guiController;\r\n        this.mode = this.constructor.DEFAULT_MODE;\r\n        this.preventSpawnkill = config.preventSpawnkill;\r\n        this.totalNumberOfTicks = 0;\r\n        this.targetScore = null;\r\n        this.initMainLoop();\r\n        this.started = false;\r\n        this.ended = false;\r\n        this.proceedHintTimer = null;\r\n        this.quitHintTimer = null;\r\n    }\r\n\r\n    static isRenderer(obj) {\r\n        // TODO\r\n        return obj !== undefined;\r\n    }\r\n\r\n    static isGUIController(obj) {\r\n        // TODO\r\n        return obj !== undefined;\r\n    }\r\n\r\n    static isAlive(player) {\r\n        return player.isAlive();\r\n    }\r\n\r\n    static calculateTargetScore(numberOfPlayers) {\r\n        // Default target score is (n-1) * 10 for n players:\r\n        return (numberOfPlayers - 1) * 10;\r\n    }\r\n\r\n    edgeOfSquare(coordinate) {\r\n        return Math.round(coordinate - this.config.thickness/2);\r\n    }\r\n\r\n    maxPlayers() {\r\n        return this.constructor.MAX_PLAYERS;\r\n    }\r\n\r\n    maxTicksBetweenDraws() {\r\n        return Math.max(Math.floor(this.config.tickrate/this.config.speed), 1);\r\n    }\r\n\r\n    // Computes the angle change for one tick when turning, in radians:\r\n    computeAngleChange() {\r\n        return this.config.speed / (this.config.tickrate * this.config.turningRadius);\r\n    }\r\n\r\n    computeSpawnArea() {\r\n        return {\r\n            x_min: this.config.spawnMargin,\r\n            y_min: this.config.spawnMargin,\r\n            x_max: this.width - this.config.spawnMargin,\r\n            y_max: this.height - this.config.spawnMargin\r\n        };\r\n    }\r\n\r\n    computeFrontCornerPixel(edge, dir) {\r\n        let t = this.config.thickness;\r\n        let cf = 100;\r\n        return (cf*edge + cf*(t-1)/2 + cf*dir*(t-1)/2) / cf;\r\n    }\r\n\r\n    computeFrontEdgePixel(edge, dir_parallel, dir_perpendicular, i) {\r\n        let t = this.config.thickness;\r\n        return edge + Math.abs(dir_parallel)*(t-1)/2 + dir_parallel*(t-1)/2 + Math.abs(dir_perpendicular)*i;\r\n    }\r\n\r\n    computeHitbox(player, left, top) {\r\n        let hitboxPixels = [];\r\n        let lastPosition = player.getLastPosition();\r\n        let dir_horizontal = left - lastPosition.left; // positive => going right; negative => going left\r\n        let dir_vertical   = top  - lastPosition.top;  // positive => going down;  negative => going up\r\n        if (sameAbs(dir_horizontal, dir_vertical)) {\r\n            // \"45 degree\" draw\r\n            let frontPixel_left = this.computeFrontCornerPixel(left, dir_horizontal);\r\n            let frontPixel_top  = this.computeFrontCornerPixel(top, dir_vertical);\r\n            hitboxPixels.push(this.pixelAddress(frontPixel_left, frontPixel_top));\r\n        } else {\r\n            // \"90 degree\" draw\r\n            for (let i = 0; i < this.config.thickness; i++) {\r\n                let frontPixel_left = this.computeFrontEdgePixel(left, dir_horizontal, dir_vertical, i);\r\n                let frontPixel_top = this.computeFrontEdgePixel(top, dir_vertical, dir_horizontal, i);\r\n                hitboxPixels.push(this.pixelAddress(frontPixel_left, frontPixel_top));\r\n            }\r\n        }\r\n        return hitboxPixels;\r\n    }\r\n\r\n    desiredMinimumSpawnDistance() { // to closest opponent\r\n        // This is calculated by multiplying the turning radius with a constant factor and then adding the Kurve thickness.\r\n        const turningRadiusPart = this.config.turningRadius * this.constructor.DESIRED_MINIMUM_SPAWN_DISTANCE_TURNING_RADIUS_FACTOR;\r\n        return round(this.config.thickness + turningRadiusPart, 2);\r\n    }\r\n\r\n    safeMinimumSpawnDistance() { // to closest opponent, without risking infinite or too much sampling\r\n        const spawnAreaCoordinates = this.computeSpawnArea();\r\n        const availableSpawnArea = (spawnAreaCoordinates.x_max - spawnAreaCoordinates.x_min) * (spawnAreaCoordinates.y_max - spawnAreaCoordinates.y_min);\r\n        const maximumSafeDistance = Math.sqrt( this.constructor.MAX_QUOTA_THAT_SPAWN_CIRCLES_MAY_FILL * availableSpawnArea / (this.getNumberOfPlayers() * Math.PI) );\r\n        return Math.min(\r\n            this.desiredMinimumSpawnDistance(),\r\n            round(maximumSafeDistance, 2)\r\n        );\r\n    }\r\n\r\n    isSafeSpawnPosition(pos) {\r\n        function distanceBetween(pos1, pos2) {\r\n            return Math.sqrt(Math.pow(pos2.x - pos1.x, 2) + Math.pow(pos2.y - pos1.y, 2));\r\n        }\r\n        for (let i = 0; i < this.players.length; i++) {\r\n            const playerPos = { x: this.players[i].x, y: this.players[i].y };\r\n            if (distanceBetween(playerPos, pos) < this.safeMinimumSpawnDistance()) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    safeSpawnPosition() {\r\n        let safePos;\r\n        do {\r\n            safePos = this.randomSpawnPosition();\r\n        } while (!this.isSafeSpawnPosition(safePos));\r\n        return safePos;\r\n    }\r\n\r\n    randomSpawnPosition() {\r\n        let spawnArea = this.computeSpawnArea();\r\n        return {\r\n            x: randomFloat(spawnArea.x_min, spawnArea.x_max),\r\n            y: randomFloat(spawnArea.y_min, spawnArea.y_max)\r\n        };\r\n    }\r\n\r\n    randomSpawnAngle() {\r\n        return randomFloat(this.config.minSpawnAngle, this.config.maxSpawnAngle);\r\n    }\r\n\r\n    pixelAddress(x, y) {\r\n        return y*this.width + x;\r\n    }\r\n\r\n    pixelAddressToCoordinates(addr) {\r\n        let x = addr % this.width;\r\n        let y = (addr - x) / this.width;\r\n        return \"(\"+x+\", \"+y+\")\";\r\n    }\r\n\r\n    \r\n    // GETTERS\r\n\r\n    getMode() {\r\n        return this.mode;\r\n    }\r\n\r\n    getTargetScore() {\r\n        return this.targetScore;\r\n    }\r\n\r\n    getPlayers() {\r\n        return this.players;\r\n    }\r\n\r\n    // Returns the player with the specified ID, or undefined if no such player exists:\r\n    getPlayerByID(id) {\r\n        return this.players.find((player) => player.hasID(id));\r\n    }\r\n\r\n    getLivePlayers() {\r\n        const isAlive = this.constructor.isAlive;\r\n        return this.players.filter(isAlive);\r\n    }\r\n\r\n    getNumberOfPlayers() {\r\n        return this.players.length;\r\n    }\r\n\r\n    getNumberOfLivePlayers() {\r\n        return this.getLivePlayers().length;\r\n    }\r\n\r\n    getScoreOfPlayer(id) {\r\n        const accumulateScore = (sum, round) => sum + round.getSuccessOfPlayer(id);\r\n        return this.rounds.reduce(accumulateScore, 0);\r\n    }\r\n\r\n    getCurrentRound() {\r\n        return this.rounds[this.rounds.length - 1];\r\n    }\r\n\r\n\r\n    // SETTERS\r\n\r\n    setMode(mode) {\r\n        if (mode === this.constructor.COMPETITIVE || mode === this.constructor.PRACTICE) {\r\n            log(`Setting game mode to ${mode}.`);\r\n            this.mode = mode;\r\n        } else {\r\n            logError(`${mode} is not a valid game mode. Keeping ${this.getMode()}.`);\r\n        }\r\n    }\r\n\r\n    setTargetScore(score) {\r\n        let ts = this.constructor.DEFAULT_TARGET_SCORE;\r\n        let mts = this.constructor.MAX_TARGET_SCORE;\r\n        // Neither floats nor negative numbers are allowed:\r\n        if (isInt(score) && score > 0) {\r\n            // Check if the desired target score is allowed:\r\n            if (score > mts) {\r\n                // It is too high. Fall back to max value:\r\n                logWarning(`${score} is larger than the maximum allowed target score of ${mts}. Falling back to ${mts}.`);\r\n                ts = mts;\r\n            } else {\r\n                // The desired target score is OK!\r\n                log(`Setting target score to ${score}.`);\r\n                ts = score;\r\n            }\r\n        } else {\r\n            logWarning(`${score} is not a valid target score. Defaulting to ${ts}.`);\r\n        }\r\n        this.targetScore = ts;\r\n    }\r\n\r\n    setSize(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.renderer.setSize(width, height);\r\n    }\r\n\r\n    setPreventSpawnkill(mode) {\r\n        this.preventSpawnkill = mode;\r\n    }\r\n\r\n\r\n    // CHECKERS\r\n\r\n    isStarted() {\r\n        return this.started;\r\n    }\r\n\r\n    isEnded() {\r\n        return this.ended;\r\n    }\r\n\r\n    /** Returns true if a round is over (including when KONEC HRY is being shown). */\r\n    isPostRound() {\r\n        return this.getCurrentRound().getResults().length === this.getNumberOfPlayers();\r\n    }\r\n\r\n    isLive() {\r\n        if (this.isCompetitive()) {\r\n            return this.getNumberOfLivePlayers() > 1;\r\n        } else {\r\n            return this.getNumberOfLivePlayers() > 0;\r\n        }\r\n    }\r\n\r\n    // Caution: Returns true if called during the spawn procedure, since it only checks whether the game is live or not.\r\n    isRoundOver() {\r\n        return !this.isLive();\r\n    }\r\n\r\n    isGameOver() {\r\n        const hasReachedTargetScore = player => this.getScoreOfPlayer(player.getID()) >= this.getTargetScore();\r\n        return !this.isLive() && this.isCompetitive() && this.players.some(hasReachedTargetScore);\r\n    }\r\n\r\n    isCompetitive() {\r\n        return this.getMode() === this.constructor.COMPETITIVE;\r\n    }\r\n\r\n    isOccupiedPixelAddress(addr) {\r\n        return this.pixels[addr] > 0;\r\n    }\r\n\r\n    isCrashing(player, left, top) {\r\n        const hitboxPixels = this.computeHitbox(player, left, top);\r\n        return hitboxPixels.some(this.isOccupiedPixelAddress, this);\r\n    }\r\n\r\n    /**\r\n     * Checks whether a draw at the specified coordinates is inside the field.\r\n     * @param {Number} left The x coordinate of the left edge of the draw.\r\n     * @param {Number} top  The y coordinate of the top edge of the draw.\r\n     */\r\n    isOnField(left, top) {\r\n        return left >= 0\r\n            && top  >= 0\r\n            && left+this.config.thickness <= this.width\r\n            && top +this.config.thickness <= this.height;\r\n    }\r\n\r\n    /** \r\n     * Checks whether there is a player with a specific ID in the game.\r\n     * @param {Number} id The ID to check for.\r\n     */\r\n    hasPlayer(id) {\r\n        return Player.isPlayer(this.getPlayerByID(id));\r\n    }\r\n\r\n\r\n    // DOERS\r\n\r\n    /** \r\n     * Adds a player to the game.\r\n     * @param {Player} player The player to add.\r\n     */\r\n    addPlayer(player) {\r\n        const maxPlayers = this.maxPlayers();\r\n        if (!Player.isPlayer(player)) {\r\n            throw new TypeError(`Cannot add ${player} to the game because it is not a player.`);\r\n        } else if (player.getID() > maxPlayers) {\r\n            throw new RangeError(`Cannot add ${player} to the game because player IDs larger than ${maxPlayers} are not supported.`);\r\n        } else if (this.hasPlayer(player.getID())) {\r\n            logWarning(`Not adding ${player} to the game because there is already a player with ID ${player.getID()}.`);\r\n        } else {\r\n            log(`${player} ready!`);\r\n            this.players.push(player);\r\n            player.setMaxSpeed(this.config.speed);\r\n            this.GUI_playerReady(player.getID());\r\n        }\r\n    }\r\n\r\n    /** \r\n     * Removes a player from the game.\r\n     * @param {Number} id The ID of the player to remove.\r\n     */\r\n    removePlayer(id) {\r\n        const playerToRemove = this.getPlayerByID(id);\r\n        // Notify GUI iff the player exists:\r\n        if (Player.isPlayer(playerToRemove)) {\r\n            log(`${playerToRemove} unready!`);\r\n            this.GUI_playerUnready(id);\r\n        }\r\n        // Update this.players:\r\n        this.players = this.players.filter((player) => player !== playerToRemove);\r\n    }\r\n\r\n    /** Starts the game. */\r\n    start() {\r\n        if (this.isCompetitive()) {\r\n            this.setTargetScore(this.constructor.calculateTargetScore(this.getNumberOfPlayers()));\r\n            this.players.forEach((player) => {\r\n                this.GUI_updateScoreOfPlayer(player.getID(), 0);\r\n            });\r\n        }\r\n        log(\"Starting game!\");\r\n        this.GUI_gameStarted();\r\n        MainLoop.start();\r\n        this.started = true;\r\n        this.pixels = new Uint8Array(this.width * this.height);\r\n        this.beginNewRound();\r\n    }\r\n\r\n    /** Announce KONEC HRY, show results etc. */\r\n    konecHry() {\r\n        log(this.constructor.KONEC_HRY);\r\n        this.ended = true;\r\n        this.GUI_konecHry();\r\n        this.quitHintTimer = setTimeout(this.showQuitHint.bind(this), this.config.hintDelay);\r\n    }\r\n\r\n    quit() {\r\n        clearTimeout(this.quitHintTimer);\r\n        clearTimeout(this.proceedHintTimer);\r\n    }\r\n\r\n    clearField() {\r\n        this.pixels.fill(0);\r\n        this.Render_clearField();\r\n    }\r\n\r\n    showProceedHint() {\r\n        this.GUI_showMessage(this.config.messages.next);\r\n    }\r\n\r\n    hideProceedHint() {\r\n        clearTimeout(this.proceedHintTimer);\r\n        this.GUI_hideMessage(this.config.messages.next);\r\n    }\r\n\r\n    showQuitHint() {\r\n        this.GUI_showMessage(this.config.messages.quit);\r\n    }\r\n\r\n    hideQuitHint() {\r\n        clearTimeout(this.quitHintTimer);\r\n        this.GUI_hideMessage(this.config.messages.quit);\r\n    }\r\n\r\n    beginNewRound() {\r\n        this.rounds.push(new Round());\r\n        log(`======== ROUND ${this.rounds.length} ========`);\r\n        this.resetPlayers();\r\n        this.clearField();\r\n        // Sort the players by their IDs so they spawn in the correct order:\r\n        this.sortPlayers();\r\n        this.spawnAndStartPlayers();\r\n    }\r\n\r\n    endRound() {\r\n        this.stopPlayers();\r\n        this.proceedHintTimer = setTimeout(this.showProceedHint.bind(this), this.config.hintDelay);\r\n    }\r\n\r\n    sortPlayers() {\r\n        this.players.sort((a, b) => (a.getID() - b.getID()));\r\n    }\r\n\r\n    startPlayer(player) {\r\n        player.start();\r\n    }\r\n\r\n    stopPlayer(player) {\r\n        player.stop();\r\n    }\r\n\r\n    resetPlayer(player) {\r\n        player.reset();\r\n    }\r\n\r\n    /** Starts all players. */\r\n    startPlayers() {\r\n        this.players.forEach(this.startPlayer);\r\n    }\r\n\r\n    stopPlayers() {\r\n        this.players.forEach(this.stopPlayer);\r\n    }\r\n\r\n    resetPlayers() {\r\n        this.players.forEach(this.resetPlayer);\r\n    }\r\n\r\n    occupyPixel(x, y, id) {\r\n        this.pixels[this.pixelAddress(x, y)] = id;\r\n    }\r\n\r\n    occupy(player, left, top) {\r\n        let right = left + this.config.thickness;\r\n        let bottom = top + this.config.thickness;\r\n        let id = player.getID();\r\n        forfor(top, bottom, left, right, this.occupyPixel.bind(this), id);\r\n        this.Render_drawSquare(left, top, player.getColor());\r\n    }\r\n\r\n    flicker(player) {\r\n        const stopFlickering = () => {\r\n            clearInterval(flickerTicker);\r\n            let left = this.edgeOfSquare(player.x);\r\n            let top  = this.edgeOfSquare(player.y);\r\n            this.Render_drawSquare(left, top, player.getColor());\r\n        }\r\n        const self = this;\r\n        const left = this.edgeOfSquare(player.x);\r\n        const top  = this.edgeOfSquare(player.y);\r\n        const color = player.getColor();\r\n        let isVisible = false;\r\n        let flickerTicker = setInterval(() => {\r\n            if (isVisible) {\r\n                this.Render_clearSquare(left, top);\r\n            } else {\r\n                this.Render_drawSquare(left, top, color);\r\n            }\r\n            isVisible = !isVisible;\r\n        }, 1000/this.config.flickerFrequency);\r\n        setTimeout(stopFlickering, self.config.flickerDuration);\r\n    }\r\n\r\n    spawn(player, position, direction) {\r\n        log(`${player} spawning at (${round(position.x, 2)}, ${round(position.y, 2)}).`);\r\n        player.x = position.x;\r\n        player.y = position.y;\r\n        player.direction = direction;\r\n        const left = this.edgeOfSquare(player.x);\r\n        const top  = this.edgeOfSquare(player.y);\r\n        player.beAt(left, top);\r\n        this.occupy(player, left, top);\r\n        this.flicker(player);\r\n    }\r\n\r\n    /** Spawns and then starts all players. */\r\n    spawnAndStartPlayers() {\r\n        const self = this;\r\n        log(`Spawnkill prevention is ` + (this.preventSpawnkill\r\n                                       ? `enabled. No two players will spawn within ${self.safeMinimumSpawnDistance()} Kuxels of each other.`\r\n                                       : `disabled. Players may spawn arbitrarily close to each other.`));\r\n        // Spawn each player, then wait for it to finish flickering before spawning the next one:\r\n        (function spawnPlayer(i) {\r\n            if (i < self.players.length) {\r\n                const spawnPosition = self.preventSpawnkill ? self.safeSpawnPosition() : self.randomSpawnPosition();\r\n                self.spawn(self.players[i], spawnPosition, self.randomSpawnAngle());\r\n                setTimeout(() => spawnPlayer(++i), self.config.flickerDuration);\r\n            } else {\r\n                // All players have spawned. Start them!\r\n                self.startPlayers();\r\n            }\r\n        })(0);\r\n    }\r\n\r\n    /**\r\n     * Draws a specific player.\r\n     */\r\n    drawPlayer(player) {\r\n        const thickness = this.config.thickness;\r\n        while (player.isAlive() && !player.queuedDraws.isEmpty()) {\r\n            let color = player.getColor();\r\n            let lastPosition = player.getLastPosition();\r\n            let currentDraw = player.queuedDraws.dequeue();\r\n            let left = this.edgeOfSquare(currentDraw.x);\r\n            let top  = this.edgeOfSquare(currentDraw.y);\r\n            if (!player.justWasAt(left, top)) {\r\n                // The new position is not identical to the last one.\r\n                let diff_left = left - player.getLastPosition().left;\r\n                let diff_top  = top  - player.getLastPosition().top;\r\n                if (!this.isOnField(left, top)) {\r\n                    // The player wants to draw outside the playing field => DIE.\r\n                    this.death(player, \"crashed into the wall\");\r\n                    this.occupy(player, lastPosition.left, lastPosition.top);\r\n                } else if (this.isCrashing(player, left, top)) {\r\n                    // The player wants to draw on a spot occupied by a Kurve => DIE.\r\n                    this.death(player, \"crashed\");\r\n                    this.occupy(player, lastPosition.left, lastPosition.top);\r\n                } else {\r\n                    // The player is not dying.\r\n                    player.beAt(left, top);\r\n                    if (!player.isHoly()) {\r\n                        // The player is not holy, so it should draw.\r\n                        this.occupy(player, left, top);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    drawHead(player) {\r\n        if (player.isAlive()) {\r\n            const lastPosition = player.getLastPosition();\r\n            const left = lastPosition.left;\r\n            const top  = lastPosition.top;\r\n            const color = player.getColor();\r\n            this.Render_drawHead(left, top, color);\r\n        }\r\n    }\r\n\r\n    updateGUIScoreboard() {\r\n        const updateScore = (player) => {\r\n            const id = player.getID();\r\n            this.GUI_updateScoreOfPlayer(id, this.getScoreOfPlayer(id));\r\n        }\r\n        this.getLivePlayers().forEach(updateScore);\r\n    }\r\n\r\n    death(player, cause) {\r\n        player.die(cause);\r\n        this.getCurrentRound().add(player);\r\n        this.updateGUIScoreboard();\r\n        if (this.isRoundOver()) {\r\n            if (this.isCompetitive()) {\r\n                const isAlive = this.constructor.isAlive;\r\n                const winner = this.players.find(isAlive);\r\n                this.winRound(winner);\r\n            }\r\n            this.endRound();\r\n        }\r\n    }\r\n\r\n    winRound(player) {\r\n        log(`${player} won the round.`);\r\n        // Ugly fix for the bug where the winner's head disappears when the round ends:\r\n        this.occupy(player, this.edgeOfSquare(player.x), this.edgeOfSquare(player.y));\r\n        this.getCurrentRound().add(player);\r\n    }\r\n\r\n    proceedKeyPressed() {\r\n        this.hideProceedHint();\r\n        this.hideQuitHint();\r\n        if (this.isGameOver()) {\r\n            // The game is over, so we should show KONEC HRY:\r\n            this.konecHry();\r\n        } else if (this.isPostRound()) {\r\n            // We are post round and the game is not over, so we should proceed to the next round:\r\n            this.beginNewRound();\r\n        }\r\n    }\r\n\r\n    shouldShowReloadConfirmationOnReloadKey() {\r\n        return this.isPostRound();\r\n    }\r\n\r\n    shouldQuitOnQuitKey() {\r\n        return this.isPostRound() && !this.isGameOver();\r\n    }\r\n\r\n    shouldQuitOnProceedKey() {\r\n        return this.isEnded();\r\n    }\r\n\r\n\r\n    // RENDERER AND GUI CONTROLLER COMMUNICATION\r\n\r\n    GUI_playerReady(id) {\r\n        this.guiController.playerReady(id);\r\n    }\r\n    GUI_playerUnready(id) {\r\n        this.guiController.playerUnready(id);\r\n    }\r\n    GUI_updateScoreOfPlayer(id, newScore) {\r\n        this.guiController.updateScoreOfPlayer(id, newScore);\r\n    }\r\n    GUI_gameStarted() {\r\n        this.guiController.gameStarted();\r\n    }\r\n    GUI_konecHry() {\r\n        this.guiController.konecHry();\r\n    }\r\n    GUI_showMessage(message) {\r\n        this.guiController.showMessage(message);\r\n    }\r\n    GUI_hideMessage(message) {\r\n        this.guiController.hideMessage(message);\r\n    }\r\n\r\n    Render_drawSquare(left, top, color) {\r\n        this.renderer.drawSquare(left, top, this.config.thickness, color);\r\n    }\r\n    Render_drawHead(left, top, color) {\r\n        this.renderer.drawSquare_overlay(left, top, this.config.thickness, color);\r\n    }\r\n    Render_clearSquare(left, top) {\r\n        this.renderer.clearSquare(left, top, this.config.thickness);\r\n    }\r\n    Render_clearHeads() {\r\n        this.renderer.clearRectangle_overlay(0, 0, this.width, this.height);\r\n    }\r\n    Render_clearField() {\r\n        this.renderer.clearRectangle(0, 0, this.width, this.height);\r\n        this.renderer.clearRectangle_overlay(0, 0, this.width, this.height);\r\n    }\r\n\r\n\r\n    // MAIN LOOP\r\n\r\n\r\n\r\n    updatePlayer(player, delta) {\r\n        if (player.isAlive()) {\r\n            const angleChange = this.computeAngleChange();\r\n            let direction = player.getDirection();\r\n            if (player.isPressingLeft()) {\r\n                direction = direction + angleChange; // let compound assignment not optimizable in V8\r\n            }\r\n            if (player.isPressingRight()) {\r\n                direction = direction - angleChange; // let compound assignment not optimizable in V8\r\n            }\r\n            // We use normalizeAngle so the angle stays in the interval -pi < dir <= pi:\r\n            player.setDirection(normalizeAngle(direction));\r\n            const theta = player.getVelocity() * delta / 1000;\r\n            player.x += theta * Math.cos(player.direction);\r\n            player.y -= theta * Math.sin(player.direction);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates everything on each tick.\r\n     * @param {Number} delta\r\n     *   The amount of time since the last update, in seconds.\r\n     */\r\n    update(delta) {\r\n        this.players.forEach((player) => { this.updatePlayer(player, delta); });\r\n        if (this.totalNumberOfTicks % this.maxTicksBetweenDraws() === 0) {\r\n            this.getLivePlayers().forEach((player) => {\r\n                player.enqueueDraw();\r\n            });\r\n        }\r\n        this.totalNumberOfTicks++;\r\n        // Cycle players so the players take turns being prioritized:\r\n        if (this.isLive()) {\r\n            this.players.unshift(this.players.pop());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws all players.\r\n     */\r\n    draw() {\r\n        this.Render_clearHeads();\r\n        this.players.forEach(this.drawPlayer, this);\r\n        this.players.forEach(this.drawHead, this);\r\n    }\r\n\r\n    /**\r\n     * Updates the FPS counter etc.\r\n     * @param {Number} framerate\r\n     *   The smoothed frames per second.\r\n     * @param {Boolean} panic\r\n     *   Whether the main loop panicked because the simulation fell too far behind real time.\r\n     */\r\n    end(framerate, panic) {\r\n        if (panic) {\r\n            let discardedTime = Math.round(MainLoop.resetFrameDelta());\r\n            console.warn(\"Main loop panicked. Discarding \" + discardedTime + \"ms.\");\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Initiates the main loop.\r\n     */\r\n    initMainLoop() {\r\n        this.MainLoop = MainLoop;\r\n        this.MainLoop\r\n            .setUpdate(this.update.bind(this))\r\n            .setDraw(this.draw.bind(this))\r\n            .setEnd(this.end.bind(this))\r\n            .setSimulationTimestep(1000/this.config.tickrate)\r\n            .setMaxAllowedFPS(this.config.maxFramerate);\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/Game.js","export function Renderer(mainCanvas, overlayCanvas) {\r\n\r\n    const context_main = mainCanvas.getContext(\"2d\");\r\n    const context_overlay = overlayCanvas.getContext(\"2d\");\r\n\r\n\r\n    // PRIVATE FUNCTIONS:\r\n\r\n    function _drawRectangle(context, left, top, width, height, color) {\r\n        context.fillStyle = color;\r\n        context.fillRect(left, top, width, height);\r\n    }\r\n\r\n    function _clearRectangle(context, left, top, width, height) {\r\n        context.clearRect(left, top, width, height);\r\n    }\r\n\r\n    function _setSize(canvas, width, height) {\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n    }\r\n\r\n\r\n    // PUBLIC API:\r\n\r\n    function setSize(width, height) {\r\n        _setSize(mainCanvas   , width, height);\r\n        _setSize(overlayCanvas, width, height);\r\n    }\r\n\r\n    // Main canvas:\r\n\r\n    function drawSquare(left, top, size, color) {\r\n        _drawRectangle(context_main, left, top, size, size, color);\r\n    }\r\n\r\n    function clearSquare(left, top, size) {\r\n        _clearRectangle(context_main, left, top, size, size);\r\n    }\r\n\r\n    function clearRectangle(left, top, width, height) {\r\n        _clearRectangle(context_main, left, top, width, height);\r\n    }\r\n\r\n    // Overlay canvas:\r\n\r\n    function drawSquare_overlay(left, top, size, color) {\r\n        _drawRectangle(context_overlay, left, top, size, size, color);\r\n    }\r\n\r\n    function clearSquare_overlay(left, top, size) {\r\n        _clearRectangle(context_overlay, left, top, size, size);\r\n    }\r\n\r\n    function clearRectangle_overlay(left, top, width, height) {\r\n        _clearRectangle(context_overlay, left, top, width, height);\r\n    }\r\n\r\n    return {\r\n        drawSquare,\r\n        clearSquare,\r\n        clearRectangle,\r\n        drawSquare_overlay,\r\n        clearSquare_overlay,\r\n        clearRectangle_overlay,\r\n        setSize\r\n    };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/Renderer.js","export class Round {\r\n    constructor(players) {\r\n        // A list of the players in the order they died (winner also included):\r\n        this.results = [];\r\n    }\r\n\r\n    add(player) {\r\n        this.results.push(player);\r\n    }\r\n\r\n    getSuccessOfPlayer(id) {\r\n        for (let i = 0; i < this.results.length; i++) {\r\n            if (this.results[i].hasID(id)) {\r\n                return i;\r\n            }\r\n        }\r\n        return this.results.length;\r\n    }\r\n\r\n    getResults() {\r\n        return this.results;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/Round.js","import { Message } from \"./Message.js\";\r\n\r\nexport class InfoMessage extends Message {\r\n    constructor(text) {\r\n        super(text, \"info\");\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/InfoMessage.js","//code.stephenmorley.org\r\nexport function Queue(){var a=[],b=0;this.getLength=function(){return a.length-b};this.hasItem=function(i){return a.indexOf(i)!==-1};this.isEmpty=function(){return 0===a.length};this.enqueue=function(b){a.push(b)};this.dequeue=function(){if(0!==a.length){var c=a[b];2*++b>=a.length&&(a=a.slice(b),b=0);return c}};this.peek=function(){return 0<a.length?a[b]:void 0}};\n\n\n// WEBPACK FOOTER //\n// ./js/lib/Queue.js","import { Message } from \"./Message.js\";\r\n\r\nexport class WarningMessage extends Message {\r\n    constructor(text) {\r\n        super(text, \"warning\");\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/WarningMessage.js","/**\r\n * mainloop.js 1.0.1-20150816\r\n *\r\n * @author Isaac Sukin (http://www.isaacsukin.com/)\r\n * @license MIT\r\n */\r\n\r\nexport default !function(a){function b(a){if(e+j>a)return u=n(b),void 0;for(d+=a-e,e=a,q(a,d),a>g+1e3&&(f=.25*h+.75*f,g=a,h=0),h++,i=0;d>=c;)if(r(c),d-=c,++i>=240){m=!0;break}s(d/c),t(f,m),m=!1,u=n(b)}var c=1e3/60,d=0,e=0,f=60,g=0,h=0,i=0,j=0,k=!1,l=!1,m=!1,n=a.requestAnimationFrame||function(){var a=Date.now(),b,d;return function(e){return b=Date.now(),d=Math.max(0,c-(b-a)),a=b+d,setTimeout(function(){e(b+d)},d)}}(),o=a.cancelAnimationFrame||clearTimeout,p=function(){},q=p,r=p,s=p,t=p,u;a.MainLoop={getSimulationTimestep:function(){return c},setSimulationTimestep:function(a){return c=a,this},getFPS:function(){return f},getMaxAllowedFPS:function(){return 1e3/j},setMaxAllowedFPS:function(a){return\"undefined\"==typeof a&&(a=1/0),0===a?this.stop():j=1e3/a,this},resetFrameDelta:function(){var a=d;return d=0,a},setBegin:function(a){return q=a||q,this},setUpdate:function(a){return r=a||r,this},setDraw:function(a){return s=a||s,this},setEnd:function(a){return t=a||t,this},start:function(){return l||(l=!0,u=n(function(a){s(1),k=!0,e=a,g=a,h=0,u=n(b)})),this},stop:function(){return k=!1,l=!1,o(u),this},isRunning:function(){return k}},\"function\"==typeof define&&define.amd?define(a.MainLoop):\"object\"==typeof exports&&(module.exports=a.MainLoop)}(window);\r\n//# sourceMappingURL=mainloop.min.js.map\n\n\n// WEBPACK FOOTER //\n// ./js/lib/mainloop.min.js","import { Preference } from \"./Preference.js\";\r\nimport { RangePreference } from \"./RangePreference.js\";\r\n\r\nimport { isInt } from \"./PreferencesUtilities.js\";\r\n\r\nexport class IntegerRangePreference extends RangePreference {\r\n    constructor(data) {\r\n        if (!isInt(data.min) || !isInt(data.max)) {\r\n            throw new TypeError(`min and max must be integers (found ${data.min} and ${data.max} for preference '${data.key}').`);\r\n        }\r\n        super(data);\r\n        this.min = data.min;\r\n        this.max = data.max;\r\n        if (!this.isValidValue(data.default)) {\r\n            super.invalidValue(data.default);\r\n        }\r\n    }\r\n\r\n    isValidValue(value) {\r\n        return isInt(value) && value >= this.min && value <= this.max;\r\n    }\r\n\r\n    static stringify(value) {\r\n        return value.toString();\r\n    }\r\n\r\n    static parse(stringifiedValue) {\r\n        return parseInt(stringifiedValue);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/preferences/IntegerRangePreference.js","import { isString } from \"./PreferencesUtilities.js\";\r\nimport { Preference } from \"./Preference.js\";\r\nimport { PreferenceWithValue } from \"./PreferenceWithValue.js\";\r\n\r\nexport function PreferenceManager(preferencesData) {\r\n    const LOCALSTORAGE_PREFIX = \"pref_key_\";\r\n    const CONSOLE_PREFIX = \"[PreferenceManager] \";\r\n\r\n    // Parse and validate preferences:\r\n    log(\"Validating preferences ...\");\r\n    const PREFERENCES = parsePreferences(preferencesData);\r\n    log(\"Done.\");\r\n\r\n    // Initialize cached preference database:\r\n    let CACHED_PREFERENCES_WITH_VALUES = getAllPreferencesWithDefaultValues();\r\n    CACHED_PREFERENCES_WITH_VALUES.forEach((preferenceWithValue) => {\r\n        const key = preferenceWithValue.preference.key;\r\n        try {\r\n            const savedValue = getSaved(key);\r\n            const defaultValue = preferenceWithValue.preference.getDefaultValue();\r\n            if (savedValue === null) {\r\n                log(`Using default value '${defaultValue}' for preference '${key}' since there was no saved value.`);\r\n            }\r\n            preferenceWithValue.value = savedValue !== null ? savedValue : defaultValue;\r\n        } catch(e) {\r\n            if (e instanceof TypeError) {\r\n                logWarning(`Using default value '${defaultValue}' for preference '${key}' since the saved value in localStorage was not a valid one.`);\r\n            } else {\r\n                logWarning(`Using default value '${defaultValue}' for preference '${key}' since no saved value could be loaded from localStorage.`);\r\n            }\r\n        }\r\n    });\r\n\r\n    function log(string) {\r\n        console.log(CONSOLE_PREFIX + string);\r\n    }\r\n\r\n    function logWarning(string) {\r\n        console.warn(CONSOLE_PREFIX + string);\r\n    }\r\n\r\n    function logError(string) {\r\n        console.error(CONSOLE_PREFIX + string);\r\n    }\r\n\r\n    function parsePreferences(preferencesData) {\r\n        return preferencesData.map(parsePreference);\r\n    }\r\n\r\n    function parsePreference(pref, index) {\r\n        if (!isString(pref.key)) {\r\n            throw new TypeError(`'The preference at index ${index} does not have a valid key (found ${pref.key}).`);\r\n        } else if (pref.type === undefined || !(pref.type.prototype instanceof Preference)) {\r\n            throw new TypeError(`Preference '${pref.key}' does not use a valid preference type (found ${pref.type}).`);\r\n        } else if (pref.default === undefined) {\r\n            throw new TypeError(`Preference '${pref.key}' has no default value.`);\r\n        }\r\n        return new (pref.type)(pref);\r\n    }\r\n\r\n    function preferenceExists(key) {\r\n        return getPreference(key) !== undefined;\r\n    }\r\n\r\n    function getPreference(key) {\r\n        return PREFERENCES.find((pref) => pref.key === key);\r\n    }\r\n\r\n    function getCachedPreference(key) {\r\n        return CACHED_PREFERENCES_WITH_VALUES.find((preferenceWithValue) => preferenceWithValue.preference.key === key);\r\n    }\r\n\r\n    function getAllPreferencesWithValues_saved() { // throws SecurityError etc\r\n        return PREFERENCES.map((preference) => new PreferenceWithValue(preference, getSaved(preference.key)));\r\n    }\r\n\r\n    function getAllPreferencesWithValues_cached() {\r\n        return PREFERENCES.map((preference) => new PreferenceWithValue(preference, getCached(preference.key)));\r\n    }\r\n\r\n    function getAllPreferencesWithDefaultValues() {\r\n        return PREFERENCES.map((preference) => new PreferenceWithValue(preference, preference.getDefaultValue()));\r\n    }\r\n\r\n    function getKey(pref) {\r\n        return pref.key;\r\n    }\r\n\r\n    function isValidPreferenceValue(key, value) {\r\n        return getPreference(key).isValidValue(value);\r\n    }\r\n\r\n    function setToDefaultValue(key) { // throws SecurityError etc\r\n        set(key, getDefaultValue(key));\r\n    }\r\n\r\n    function getDefaultValue(key) {\r\n        if (!preferenceExists(key)) {\r\n            throw new Error(`Preference '${key}' does not exist.`);\r\n        }\r\n        return getPreference(key).getDefaultValue();\r\n    }\r\n\r\n    function LS_prefix(key) {\r\n        return LOCALSTORAGE_PREFIX + key;\r\n    }\r\n\r\n    function set(key, value) { // throws SecurityError etc\r\n        if (!preferenceExists(key)) {\r\n            throw new Error(`There is no preference with key '${key}'.`);\r\n        }\r\n        const pref = getPreference(key);\r\n        if (!isValidPreferenceValue(key, value)) {\r\n            pref.invalidValue(value);\r\n        } else {\r\n            log(`Setting preference '${key}' to '${value}'.`);\r\n            getCachedPreference(key).value = value;\r\n            try {\r\n                localStorage.setItem(LS_prefix(key), pref.constructor.stringify(value));\r\n            } catch(e) {\r\n                logError(`Failed to save value for preference '${key}' to localStorage. The following error was thrown:\\n${e}`);\r\n                throw e; // likely a SecurityError, but could be others as well\r\n            }\r\n        }\r\n    }\r\n\r\n    function getSaved(key) { // throws SecurityError, TypeError etc\r\n        if (!preferenceExists(key)) {\r\n            throw new Error(`There is no preference with key '${key}'.`);\r\n        }\r\n        const pref = getPreference(key);\r\n        let savedValue;\r\n        try {\r\n            savedValue = localStorage.getItem(LS_prefix(key));\r\n        } catch(e) {\r\n            logError(`Failed to load saved value for preference '${key}' from localStorage. The following error was thrown:\\n${e}`);\r\n            throw e; // likely a SecurityError, but could be others as well\r\n        }\r\n        if (savedValue === null) {\r\n            // There was no saved value.\r\n            return null;\r\n        } else if (isValidPreferenceValue(key, pref.constructor.parse(savedValue))) {\r\n            return pref.constructor.parse(savedValue);\r\n        } else {\r\n            throw new TypeError(`'${savedValue}' could not be parsed to a valid value for preference '${pref}'.`);\r\n        }\r\n    }\r\n\r\n    function getCached(key) {\r\n        if (!preferenceExists(key)) {\r\n            throw new Error(`There is no preference with key '${key}'.`);\r\n        }\r\n        return getCachedPreference(key).value;\r\n    }\r\n\r\n    function setAllToDefault() {\r\n        log(\"Resetting all preferences ...\");\r\n        PREFERENCES.map(getKey).forEach(setToDefaultValue);\r\n        log(\"Done.\");\r\n    }\r\n\r\n    return {\r\n        isValidPreferenceValue,\r\n        set,\r\n        getSaved,\r\n        getCached,\r\n        setToDefaultValue,\r\n        getDefaultValue,\r\n        getAllPreferencesWithValues_saved,\r\n        getAllPreferencesWithValues_cached,\r\n        getAllPreferencesWithDefaultValues,\r\n        setAllToDefault\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./js/lib/preferences/PreferenceManager.js","export class PreferenceWithValue {\r\n    constructor(preference, value) {\r\n        if (!preference.isValidValue(value)) {\r\n            throw new TypeError(`${value} is not a valid value for preference ${preference.key}.`);\r\n        }\r\n        this.preference = preference;\r\n        this.value = value;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/lib/preferences/PreferenceWithValue.js"],"sourceRoot":""}